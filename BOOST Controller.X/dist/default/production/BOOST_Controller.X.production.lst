

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Tue Jan 25 21:50:54 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    10                           	dabs	1,0x7E,2
    11  0000                     
    12                           ; Version 2.20
    13                           ; Generated 12/02/2020 GMT
    14                           ; 
    15                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F877A Definitions
    44                           ; 
    45                           ; SFR Addresses
    46  0000                     	;# 
    47  0001                     	;# 
    48  0002                     	;# 
    49  0003                     	;# 
    50  0004                     	;# 
    51  0005                     	;# 
    52  0006                     	;# 
    53  0007                     	;# 
    54  0008                     	;# 
    55  0009                     	;# 
    56  000A                     	;# 
    57  000B                     	;# 
    58  000C                     	;# 
    59  000D                     	;# 
    60  000E                     	;# 
    61  000E                     	;# 
    62  000F                     	;# 
    63  0010                     	;# 
    64  0011                     	;# 
    65  0012                     	;# 
    66  0013                     	;# 
    67  0014                     	;# 
    68  0015                     	;# 
    69  0015                     	;# 
    70  0016                     	;# 
    71  0017                     	;# 
    72  0018                     	;# 
    73  0019                     	;# 
    74  001A                     	;# 
    75  001B                     	;# 
    76  001B                     	;# 
    77  001C                     	;# 
    78  001D                     	;# 
    79  001E                     	;# 
    80  001F                     	;# 
    81  0081                     	;# 
    82  0085                     	;# 
    83  0086                     	;# 
    84  0087                     	;# 
    85  0088                     	;# 
    86  0089                     	;# 
    87  008C                     	;# 
    88  008D                     	;# 
    89  008E                     	;# 
    90  0091                     	;# 
    91  0092                     	;# 
    92  0093                     	;# 
    93  0094                     	;# 
    94  0098                     	;# 
    95  0099                     	;# 
    96  009C                     	;# 
    97  009D                     	;# 
    98  009E                     	;# 
    99  009F                     	;# 
   100  010C                     	;# 
   101  010D                     	;# 
   102  010E                     	;# 
   103  010F                     	;# 
   104  018C                     	;# 
   105  018D                     	;# 
   106  0000                     	;# 
   107  0001                     	;# 
   108  0002                     	;# 
   109  0003                     	;# 
   110  0004                     	;# 
   111  0005                     	;# 
   112  0006                     	;# 
   113  0007                     	;# 
   114  0008                     	;# 
   115  0009                     	;# 
   116  000A                     	;# 
   117  000B                     	;# 
   118  000C                     	;# 
   119  000D                     	;# 
   120  000E                     	;# 
   121  000E                     	;# 
   122  000F                     	;# 
   123  0010                     	;# 
   124  0011                     	;# 
   125  0012                     	;# 
   126  0013                     	;# 
   127  0014                     	;# 
   128  0015                     	;# 
   129  0015                     	;# 
   130  0016                     	;# 
   131  0017                     	;# 
   132  0018                     	;# 
   133  0019                     	;# 
   134  001A                     	;# 
   135  001B                     	;# 
   136  001B                     	;# 
   137  001C                     	;# 
   138  001D                     	;# 
   139  001E                     	;# 
   140  001F                     	;# 
   141  0081                     	;# 
   142  0085                     	;# 
   143  0086                     	;# 
   144  0087                     	;# 
   145  0088                     	;# 
   146  0089                     	;# 
   147  008C                     	;# 
   148  008D                     	;# 
   149  008E                     	;# 
   150  0091                     	;# 
   151  0092                     	;# 
   152  0093                     	;# 
   153  0094                     	;# 
   154  0098                     	;# 
   155  0099                     	;# 
   156  009C                     	;# 
   157  009D                     	;# 
   158  009E                     	;# 
   159  009F                     	;# 
   160  010C                     	;# 
   161  010D                     	;# 
   162  010E                     	;# 
   163  010F                     	;# 
   164  018C                     	;# 
   165  018D                     	;# 
   166  0000                     	;# 
   167  0001                     	;# 
   168  0002                     	;# 
   169  0003                     	;# 
   170  0004                     	;# 
   171  0005                     	;# 
   172  0006                     	;# 
   173  0007                     	;# 
   174  0008                     	;# 
   175  0009                     	;# 
   176  000A                     	;# 
   177  000B                     	;# 
   178  000C                     	;# 
   179  000D                     	;# 
   180  000E                     	;# 
   181  000E                     	;# 
   182  000F                     	;# 
   183  0010                     	;# 
   184  0011                     	;# 
   185  0012                     	;# 
   186  0013                     	;# 
   187  0014                     	;# 
   188  0015                     	;# 
   189  0015                     	;# 
   190  0016                     	;# 
   191  0017                     	;# 
   192  0018                     	;# 
   193  0019                     	;# 
   194  001A                     	;# 
   195  001B                     	;# 
   196  001B                     	;# 
   197  001C                     	;# 
   198  001D                     	;# 
   199  001E                     	;# 
   200  001F                     	;# 
   201  0081                     	;# 
   202  0085                     	;# 
   203  0086                     	;# 
   204  0087                     	;# 
   205  0088                     	;# 
   206  0089                     	;# 
   207  008C                     	;# 
   208  008D                     	;# 
   209  008E                     	;# 
   210  0091                     	;# 
   211  0092                     	;# 
   212  0093                     	;# 
   213  0094                     	;# 
   214  0098                     	;# 
   215  0099                     	;# 
   216  009C                     	;# 
   217  009D                     	;# 
   218  009E                     	;# 
   219  009F                     	;# 
   220  010C                     	;# 
   221  010D                     	;# 
   222  010E                     	;# 
   223  010F                     	;# 
   224  018C                     	;# 
   225  018D                     	;# 
   226  0000                     	;# 
   227  0001                     	;# 
   228  0002                     	;# 
   229  0003                     	;# 
   230  0004                     	;# 
   231  0005                     	;# 
   232  0006                     	;# 
   233  0007                     	;# 
   234  0008                     	;# 
   235  0009                     	;# 
   236  000A                     	;# 
   237  000B                     	;# 
   238  000C                     	;# 
   239  000D                     	;# 
   240  000E                     	;# 
   241  000E                     	;# 
   242  000F                     	;# 
   243  0010                     	;# 
   244  0011                     	;# 
   245  0012                     	;# 
   246  0013                     	;# 
   247  0014                     	;# 
   248  0015                     	;# 
   249  0015                     	;# 
   250  0016                     	;# 
   251  0017                     	;# 
   252  0018                     	;# 
   253  0019                     	;# 
   254  001A                     	;# 
   255  001B                     	;# 
   256  001B                     	;# 
   257  001C                     	;# 
   258  001D                     	;# 
   259  001E                     	;# 
   260  001F                     	;# 
   261  0081                     	;# 
   262  0085                     	;# 
   263  0086                     	;# 
   264  0087                     	;# 
   265  0088                     	;# 
   266  0089                     	;# 
   267  008C                     	;# 
   268  008D                     	;# 
   269  008E                     	;# 
   270  0091                     	;# 
   271  0092                     	;# 
   272  0093                     	;# 
   273  0094                     	;# 
   274  0098                     	;# 
   275  0099                     	;# 
   276  009C                     	;# 
   277  009D                     	;# 
   278  009E                     	;# 
   279  009F                     	;# 
   280  010C                     	;# 
   281  010D                     	;# 
   282  010E                     	;# 
   283  010F                     	;# 
   284  018C                     	;# 
   285  018D                     	;# 
   286  001A                     _RCREG	set	26
   287  0019                     _TXREG	set	25
   288  001E                     _ADRESH	set	30
   289  001F                     _ADCON0	set	31
   290  0015                     _CCPR1L	set	21
   291  0017                     _CCP1CON	set	23
   292  0065                     _RCIF	set	101
   293  00C4                     _CREN	set	196
   294  00C7                     _SPEN	set	199
   295  00FA                     _GO_nDONE	set	250
   296  0092                     _TMR2ON	set	146
   297  0099                     _SPBRG	set	153
   298  009E                     _ADRESL	set	158
   299  009F                     _ADCON1	set	159
   300  0089                     _TRISE	set	137
   301  0085                     _TRISA	set	133
   302  0092                     _PR2	set	146
   303  0087                     _TRISC	set	135
   304  0086                     _TRISB	set	134
   305  04C1                     _TRMT	set	1217
   306  04C5                     _TXEN	set	1221
   307  043E                     _TRISC6	set	1086
   308  043F                     _TRISC7	set	1087
   309  04C4                     _SYNC	set	1220
   310  04C2                     _BRGH	set	1218
   311                           
   312                           	psect	cinit
   313  07FC                     start_initialization:	
   314                           ; #config settings
   315                           
   316  07FC                     __initialization:
   317  07FC                     end_of_initialization:	
   318                           ;End of C runtime variable initialization code
   319                           
   320  07FC                     __end_of__initialization:
   321  07FC  0183               	clrf	3
   322  07FD  120A  118A  2F91   	ljmp	_main	;jump to C main() function
   323                           
   324                           	psect	cstackCOMMON
   325  0070                     __pcstackCOMMON:
   326  0070                     ?_ADC_Init:
   327  0070                     ??_ADC_Init:	
   328                           ; 1 bytes @ 0x0
   329                           
   330  0070                     ?_main:	
   331                           ; 1 bytes @ 0x0
   332                           
   333  0070                     ?_Read_ADC:	
   334                           ; 1 bytes @ 0x0
   335                           
   336                           
   337                           ; 2 bytes @ 0x0
   338  0070                     	ds	2
   339  0072                     ??_Read_ADC:
   340                           
   341                           ; 1 bytes @ 0x2
   342  0072                     	ds	1
   343  0073                     Read_ADC@val:
   344                           
   345                           ; 2 bytes @ 0x3
   346  0073                     	ds	2
   347  0075                     Read_ADC@channel:
   348                           
   349                           ; 1 bytes @ 0x5
   350  0075                     	ds	1
   351  0076                     ??_main:
   352                           
   353                           ; 1 bytes @ 0x6
   354  0076                     	ds	2
   355  0078                     main@SETPOINT:
   356                           
   357                           ; 2 bytes @ 0x8
   358  0078                     	ds	2
   359  007A                     main@FEEDBACK:
   360                           
   361                           ; 2 bytes @ 0xA
   362  007A                     	ds	2
   363                           
   364                           	psect	maintext
   365  0791                     __pmaintext:	
   366 ;;
   367 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   368 ;;
   369 ;; *************** function _main *****************
   370 ;; Defined at:
   371 ;;		line 29 in file "Main.c"
   372 ;; Parameters:    Size  Location     Type
   373 ;;		None
   374 ;; Auto vars:     Size  Location     Type
   375 ;;  Str            50    0        unsigned char [50]
   376 ;;  FEEDBACK        2   10[COMMON] unsigned int 
   377 ;;  SETPOINT        2    8[COMMON] unsigned int 
   378 ;; Return value:  Size  Location     Type
   379 ;;                  1    wreg      void 
   380 ;; Registers used:
   381 ;;		wreg, status,2, status,0, pclath, cstack
   382 ;; Tracked objects:
   383 ;;		On entry : B00/0
   384 ;;		On exit  : 0/0
   385 ;;		Unchanged: 0/0
   386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   387 ;;      Params:         0       0       0       0       0
   388 ;;      Locals:         4       0       0       0       0
   389 ;;      Temps:          2       0       0       0       0
   390 ;;      Totals:         6       0       0       0       0
   391 ;;Total ram usage:        6 bytes
   392 ;; Hardware stack levels required when called: 1
   393 ;; This function calls:
   394 ;;		_ADC_Init
   395 ;;		_Read_ADC
   396 ;; This function is called by:
   397 ;;		Startup code after reset
   398 ;; This function uses a non-reentrant model
   399 ;;
   400                           
   401  0791                     _main:	
   402                           ;psect for function _main
   403                           
   404  0791                     l826:	
   405                           ;incstack = 0
   406                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   407                           
   408                           
   409                           ;Main.c: 32:     uint16_t FEEDBACK = 0;
   410  0791  01FA               	clrf	main@FEEDBACK
   411  0792  01FB               	clrf	main@FEEDBACK+1
   412                           
   413                           ;Main.c: 33:     TRISB = 0x00;
   414  0793  1683               	bsf	3,5	;RP0=1, select bank1
   415  0794  1303               	bcf	3,6	;RP1=0, select bank1
   416  0795  0186               	clrf	6	;volatile
   417  0796                     l828:
   418                           
   419                           ;Main.c: 34:     ADC_Init();
   420  0796  120A  118A  275E  120A  118A  	fcall	_ADC_Init
   421  079B                     l830:
   422                           
   423                           ;Main.c: 35:     TRISC &=~ (1<<2);
   424  079B  30FB               	movlw	251
   425  079C  00F6               	movwf	??_main
   426  079D  0876               	movf	??_main,w
   427  079E  1683               	bsf	3,5	;RP0=1, select bank1
   428  079F  1303               	bcf	3,6	;RP1=0, select bank1
   429  07A0  0587               	andwf	7,f	;volatile
   430  07A1                     l832:
   431                           
   432                           ;Main.c: 36:     CCP1CON = 0x0F;
   433  07A1  300F               	movlw	15
   434  07A2  1283               	bcf	3,5	;RP0=0, select bank0
   435  07A3  1303               	bcf	3,6	;RP1=0, select bank0
   436  07A4  0097               	movwf	23	;volatile
   437  07A5                     l834:
   438                           
   439                           ;Main.c: 37:     PR2 = 255;
   440  07A5  30FF               	movlw	255
   441  07A6  1683               	bsf	3,5	;RP0=1, select bank1
   442  07A7  1303               	bcf	3,6	;RP1=0, select bank1
   443  07A8  0092               	movwf	18	;volatile
   444  07A9                     l836:
   445                           
   446                           ;Main.c: 38:     CCPR1L = 125;
   447  07A9  307D               	movlw	125
   448  07AA  1283               	bcf	3,5	;RP0=0, select bank0
   449  07AB  1303               	bcf	3,6	;RP1=0, select bank0
   450  07AC  0095               	movwf	21	;volatile
   451  07AD                     l838:
   452                           
   453                           ;Main.c: 39:     TMR2ON = 1;
   454  07AD  1512               	bsf	18,2	;volatile
   455  07AE                     l840:
   456                           
   457                           ;Main.c: 41:     {;Main.c: 42:         SETPOINT = Read_ADC(0);
   458  07AE  3000               	movlw	0
   459  07AF  120A  118A  2767  120A  118A  	fcall	_Read_ADC
   460  07B4  0871               	movf	?_Read_ADC+1,w
   461  07B5  00F9               	movwf	main@SETPOINT+1
   462  07B6  0870               	movf	?_Read_ADC,w
   463  07B7  00F8               	movwf	main@SETPOINT
   464  07B8                     l842:
   465                           
   466                           ;Main.c: 43:         FEEDBACK = Read_ADC(1);
   467  07B8  3001               	movlw	1
   468  07B9  120A  118A  2767  120A  118A  	fcall	_Read_ADC
   469  07BE  0871               	movf	?_Read_ADC+1,w
   470  07BF  00FB               	movwf	main@FEEDBACK+1
   471  07C0  0870               	movf	?_Read_ADC,w
   472  07C1  00FA               	movwf	main@FEEDBACK
   473  07C2                     l844:
   474                           
   475                           ;Main.c: 44:         if(SETPOINT > FEEDBACK)
   476  07C2  0879               	movf	main@SETPOINT+1,w
   477  07C3  027B               	subwf	main@FEEDBACK+1,w
   478  07C4  1D03               	skipz
   479  07C5  2FC8               	goto	u215
   480  07C6  0878               	movf	main@SETPOINT,w
   481  07C7  027A               	subwf	main@FEEDBACK,w
   482  07C8                     u215:
   483  07C8  1803               	skipnc
   484  07C9  2FCB               	goto	u211
   485  07CA  2FCC               	goto	u210
   486  07CB                     u211:
   487  07CB  2FDA               	goto	l852
   488  07CC                     u210:
   489  07CC                     l846:
   490                           
   491                           ;Main.c: 45:         {;Main.c: 46:             if(CCPR1L < 250)
   492  07CC  30FA               	movlw	250
   493  07CD  1283               	bcf	3,5	;RP0=0, select bank0
   494  07CE  1303               	bcf	3,6	;RP1=0, select bank0
   495  07CF  0215               	subwf	21,w	;volatile
   496  07D0  1803               	skipnc
   497  07D1  2FD3               	goto	u221
   498  07D2  2FD4               	goto	u220
   499  07D3                     u221:
   500  07D3  2FEF               	goto	l860
   501  07D4                     u220:
   502  07D4                     l848:
   503                           
   504                           ;Main.c: 47:             {;Main.c: 48:                 CCPR1L += 1;
   505  07D4  3001               	movlw	1
   506  07D5  00F6               	movwf	??_main
   507  07D6  0876               	movf	??_main,w
   508  07D7  0795               	addwf	21,f	;volatile
   509  07D8                     l850:
   510                           
   511                           ;Main.c: 49:                 TMR2ON = 1;
   512  07D8  1512               	bsf	18,2	;volatile
   513  07D9  2FEF               	goto	l860
   514  07DA                     l852:
   515  07DA  087B               	movf	main@FEEDBACK+1,w
   516  07DB  0279               	subwf	main@SETPOINT+1,w
   517  07DC  1D03               	skipz
   518  07DD  2FE0               	goto	u235
   519  07DE  087A               	movf	main@FEEDBACK,w
   520  07DF  0278               	subwf	main@SETPOINT,w
   521  07E0                     u235:
   522  07E0  1803               	skipnc
   523  07E1  2FE3               	goto	u231
   524  07E2  2FE4               	goto	u230
   525  07E3                     u231:
   526  07E3  2FEF               	goto	l860
   527  07E4                     u230:
   528  07E4                     l854:
   529                           
   530                           ;Main.c: 53:         {;Main.c: 54:             if(CCPR1L > 5)
   531  07E4  3006               	movlw	6
   532  07E5  1283               	bcf	3,5	;RP0=0, select bank0
   533  07E6  1303               	bcf	3,6	;RP1=0, select bank0
   534  07E7  0215               	subwf	21,w	;volatile
   535  07E8  1C03               	skipc
   536  07E9  2FEB               	goto	u241
   537  07EA  2FEC               	goto	u240
   538  07EB                     u241:
   539  07EB  2FEF               	goto	l860
   540  07EC                     u240:
   541  07EC                     l856:
   542                           
   543                           ;Main.c: 55:             {;Main.c: 56:                 CCPR1L -= 1;
   544  07EC  3001               	movlw	1
   545  07ED  0295               	subwf	21,f	;volatile
   546  07EE  2FD8               	goto	l850
   547  07EF                     l860:
   548                           
   549                           ;Main.c: 63:         _delay((unsigned long)((1)*(16000000UL/4000.0)));
   550  07EF  3006               	movlw	6
   551  07F0  00F7               	movwf	??_main+1
   552  07F1  3030               	movlw	48
   553  07F2  00F6               	movwf	??_main
   554  07F3                     u257:
   555  07F3  0BF6               	decfsz	??_main,f
   556  07F4  2FF3               	goto	u257
   557  07F5  0BF7               	decfsz	??_main+1,f
   558  07F6  2FF3               	goto	u257
   559  07F7  0000               	nop
   560  07F8  2FAE               	goto	l840
   561  07F9  120A  118A  2800   	ljmp	start
   562  07FC                     __end_of_main:
   563                           
   564                           	psect	text1
   565  0767                     __ptext1:	
   566 ;; *************** function _Read_ADC *****************
   567 ;; Defined at:
   568 ;;		line 13 in file "ADC/ADC.c"
   569 ;; Parameters:    Size  Location     Type
   570 ;;  channel         1    wreg     unsigned char 
   571 ;; Auto vars:     Size  Location     Type
   572 ;;  channel         1    5[COMMON] unsigned char 
   573 ;;  val             2    3[COMMON] int 
   574 ;; Return value:  Size  Location     Type
   575 ;;                  2    0[COMMON] unsigned int 
   576 ;; Registers used:
   577 ;;		wreg, status,2, status,0
   578 ;; Tracked objects:
   579 ;;		On entry : 0/0
   580 ;;		On exit  : 0/0
   581 ;;		Unchanged: 0/0
   582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   583 ;;      Params:         2       0       0       0       0
   584 ;;      Locals:         3       0       0       0       0
   585 ;;      Temps:          1       0       0       0       0
   586 ;;      Totals:         6       0       0       0       0
   587 ;;Total ram usage:        6 bytes
   588 ;; Hardware stack levels used: 1
   589 ;; This function calls:
   590 ;;		Nothing
   591 ;; This function is called by:
   592 ;;		_main
   593 ;; This function uses a non-reentrant model
   594 ;;
   595                           
   596  0767                     _Read_ADC:	
   597                           ;psect for function _Read_ADC
   598                           
   599                           
   600                           ;incstack = 0
   601                           ; Regs used in _Read_ADC: [wreg+status,2+status,0]
   602                           ;Read_ADC@channel stored from wreg
   603  0767  00F5               	movwf	Read_ADC@channel
   604  0768                     l814:
   605                           
   606                           ;ADC/ADC.c: 13: uint16_t Read_ADC(char channel);ADC/ADC.c: 14: {;ADC/ADC.c: 15:     int 
      +                          val;;ADC/ADC.c: 16:     ADCON1 = 0x80;
   607  0768  3080               	movlw	128
   608  0769  1683               	bsf	3,5	;RP0=1, select bank1
   609  076A  1303               	bcf	3,6	;RP1=0, select bank1
   610  076B  009F               	movwf	31	;volatile
   611  076C                     l816:
   612                           
   613                           ;ADC/ADC.c: 17:     ADCON0 = 0x81 | channel << 3;
   614  076C  0875               	movf	Read_ADC@channel,w
   615  076D  00F2               	movwf	??_Read_ADC
   616  076E  3002               	movlw	2
   617  076F                     u195:
   618  076F  1003               	clrc
   619  0770  0DF2               	rlf	??_Read_ADC,f
   620  0771  3EFF               	addlw	-1
   621  0772  1D03               	skipz
   622  0773  2F6F               	goto	u195
   623  0774  1003               	clrc
   624  0775  0D72               	rlf	??_Read_ADC,w
   625  0776  3881               	iorlw	129
   626  0777  1283               	bcf	3,5	;RP0=0, select bank0
   627  0778  1303               	bcf	3,6	;RP1=0, select bank0
   628  0779  009F               	movwf	31	;volatile
   629  077A                     l818:
   630                           
   631                           ;ADC/ADC.c: 18:     _delay((unsigned long)((50)*(16000000UL/4000000.0)));
   632  077A  3042               	movlw	66
   633  077B  00F2               	movwf	??_Read_ADC
   634  077C                     u267:
   635  077C  0BF2               	decfsz	??_Read_ADC,f
   636  077D  2F7C               	goto	u267
   637  077E  0000               	nop
   638  077F                     l820:
   639                           
   640                           ;ADC/ADC.c: 19:     GO_nDONE = 1;
   641  077F  1283               	bcf	3,5	;RP0=0, select bank0
   642  0780  1303               	bcf	3,6	;RP1=0, select bank0
   643  0781  151F               	bsf	31,2	;volatile
   644  0782                     l54:	
   645                           ;ADC/ADC.c: 20:     while(GO_nDONE)
   646                           
   647                           
   648                           ;ADC/ADC.c: 20:     while(GO_nDONE)
   649  0782  191F               	btfsc	31,2	;volatile
   650  0783  2F85               	goto	u201
   651  0784  2F86               	goto	u200
   652  0785                     u201:
   653  0785  2F82               	goto	l54
   654  0786                     u200:
   655  0786                     l822:
   656                           
   657                           ;ADC/ADC.c: 22:     val = (ADRESH<<8) | ADRESL;
   658  0786  081E               	movf	30,w	;volatile
   659  0787  00F4               	movwf	Read_ADC@val+1
   660  0788  1683               	bsf	3,5	;RP0=1, select bank1
   661  0789  1303               	bcf	3,6	;RP1=0, select bank1
   662  078A  081E               	movf	30,w	;volatile
   663  078B  00F3               	movwf	Read_ADC@val
   664                           
   665                           ;ADC/ADC.c: 23:     return (val);
   666  078C  0874               	movf	Read_ADC@val+1,w
   667  078D  00F1               	movwf	?_Read_ADC+1
   668  078E  0873               	movf	Read_ADC@val,w
   669  078F  00F0               	movwf	?_Read_ADC
   670  0790                     l57:
   671  0790  0008               	return
   672  0791                     __end_of_Read_ADC:
   673                           
   674                           	psect	text2
   675  075E                     __ptext2:	
   676 ;; *************** function _ADC_Init *****************
   677 ;; Defined at:
   678 ;;		line 6 in file "ADC/ADC.c"
   679 ;; Parameters:    Size  Location     Type
   680 ;;		None
   681 ;; Auto vars:     Size  Location     Type
   682 ;;		None
   683 ;; Return value:  Size  Location     Type
   684 ;;                  1    wreg      void 
   685 ;; Registers used:
   686 ;;		wreg
   687 ;; Tracked objects:
   688 ;;		On entry : 0/0
   689 ;;		On exit  : 0/0
   690 ;;		Unchanged: 0/0
   691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   692 ;;      Params:         0       0       0       0       0
   693 ;;      Locals:         0       0       0       0       0
   694 ;;      Temps:          0       0       0       0       0
   695 ;;      Totals:         0       0       0       0       0
   696 ;;Total ram usage:        0 bytes
   697 ;; Hardware stack levels used: 1
   698 ;; This function calls:
   699 ;;		Nothing
   700 ;; This function is called by:
   701 ;;		_main
   702 ;; This function uses a non-reentrant model
   703 ;;
   704                           
   705  075E                     _ADC_Init:	
   706                           ;psect for function _ADC_Init
   707                           
   708  075E                     l708:	
   709                           ;incstack = 0
   710                           ; Regs used in _ADC_Init: [wreg]
   711                           
   712                           
   713                           ;ADC/ADC.c: 8:     TRISA = 0XEF;
   714  075E  30EF               	movlw	239
   715  075F  1683               	bsf	3,5	;RP0=1, select bank1
   716  0760  1303               	bcf	3,6	;RP1=0, select bank1
   717  0761  0085               	movwf	5	;volatile
   718                           
   719                           ;ADC/ADC.c: 9:     TRISE = 0X07;
   720  0762  3007               	movlw	7
   721  0763  0089               	movwf	9	;volatile
   722                           
   723                           ;ADC/ADC.c: 10:     ADCON1 = 0X80;
   724  0764  3080               	movlw	128
   725  0765  009F               	movwf	31	;volatile
   726  0766                     l51:
   727  0766  0008               	return
   728  0767                     __end_of_ADC_Init:
   729  007E                     btemp	set	126	;btemp
   730  007E                     wtemp0	set	126
   731                           
   732                           	psect	config
   733                           
   734                           ;Config register CONFIG @ 0x2007
   735                           ;	Oscillator Selection bits
   736                           ;	FOSC = HS, HS oscillator
   737                           ;	Watchdog Timer Enable bit
   738                           ;	WDTE = OFF, WDT disabled
   739                           ;	Power-up Timer Enable bit
   740                           ;	PWRTE = OFF, PWRT disabled
   741                           ;	Brown-out Reset Enable bit
   742                           ;	BOREN = OFF, BOR disabled
   743                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   744                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   745                           ;	Data EEPROM Memory Code Protection bit
   746                           ;	CPD = OFF, Data EEPROM code protection off
   747                           ;	Flash Program Memory Write Enable bits
   748                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   749                           ;	In-Circuit Debugger Mode bit
   750                           ;	DEBUG = 0x1, unprogrammed default
   751                           ;	Flash Program Memory Code Protection bit
   752                           ;	CP = OFF, Code protection off
   753  2007                     	org	8199
   754  2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_Read_ADC

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                56    56      0     137
                                              6 COMMON     6     6      0
                           _ADC_Init
                           _Read_ADC
 ---------------------------------------------------------------------------------
 (1) _Read_ADC                                             6     4      2      45
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _Read_ADC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Tue Jan 25 21:50:54 2022

                     l51 0766                       l54 0782                       l57 0790  
                    l708 075E                      l820 077F                      l822 0786  
                    l814 0768                      l830 079B                      l816 076C  
                    l840 07AE                      l832 07A1                      l818 077A  
                    l850 07D8                      l842 07B8                      l834 07A5  
                    l826 0791                      l860 07EF                      l852 07DA  
                    l844 07C2                      l836 07A9                      l828 0796  
                    l854 07E4                      l846 07CC                      l838 07AD  
                    l856 07EC                      l848 07D4                      u200 0786  
                    u201 0785                      u210 07CC                      u211 07CB  
                    u220 07D4                      u221 07D3                      u230 07E4  
                    u231 07E3                      u215 07C8                      u240 07EC  
                    u241 07EB                      u235 07E0                      _PR2 0092  
                    u257 07F3                      u267 077C                      u195 076F  
                   _BRGH 04C2                     _CREN 00C4                     _RCIF 0065  
                   _SPEN 00C7                     _TRMT 04C1                     _TXEN 04C5  
                   _SYNC 04C4                     _main 0791                     btemp 007E  
       __end_of_ADC_Init 0767                     start 0000              Read_ADC@val 0073  
                  ?_main 0070                    _RCREG 001A                    _SPBRG 0099  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISE 0089                    _TXREG 0019                    status 0003  
                  wtemp0 007E          __initialization 07FC             __end_of_main 07FC  
       __end_of_Read_ADC 0791                   ??_main 0076                   _ADCON0 001F  
                 _ADCON1 009F                   _ADRESH 001E                   _ADRESL 009E  
                 _CCPR1L 0015                   _TMR2ON 0092                   _TRISC6 043E  
                 _TRISC7 043F          Read_ADC@channel 0075                ?_ADC_Init 0070  
__end_of__initialization 07FC           __pcstackCOMMON 0070               ??_ADC_Init 0070  
              ?_Read_ADC 0070               __pmaintext 0791                  _CCP1CON 0017  
             ??_Read_ADC 0072                  __ptext1 0767                  __ptext2 075E  
   end_of_initialization 07FC      start_initialization 07FC                ___latbits 0002  
               _ADC_Init 075E                 _GO_nDONE 00FA                 _Read_ADC 0767  
           main@FEEDBACK 007A             main@SETPOINT 0078  
