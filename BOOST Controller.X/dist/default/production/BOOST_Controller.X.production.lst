

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Wed Jan 04 16:31:04 2023

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    11                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=3
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    25                           	dabs	1,0x7E,2
    26  0000                     
    27                           ; Version 2.20
    28                           ; Generated 12/02/2020 GMT
    29                           ; 
    30                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC16F877A Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  0008                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  000E                     	;# 
    77  000F                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0014                     	;# 
    83  0015                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001D                     	;# 
    94  001E                     	;# 
    95  001F                     	;# 
    96  0081                     	;# 
    97  0085                     	;# 
    98  0086                     	;# 
    99  0087                     	;# 
   100  0088                     	;# 
   101  0089                     	;# 
   102  008C                     	;# 
   103  008D                     	;# 
   104  008E                     	;# 
   105  0091                     	;# 
   106  0092                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  010C                     	;# 
   116  010D                     	;# 
   117  010E                     	;# 
   118  010F                     	;# 
   119  018C                     	;# 
   120  018D                     	;# 
   121  0000                     	;# 
   122  0001                     	;# 
   123  0002                     	;# 
   124  0003                     	;# 
   125  0004                     	;# 
   126  0005                     	;# 
   127  0006                     	;# 
   128  0007                     	;# 
   129  0008                     	;# 
   130  0009                     	;# 
   131  000A                     	;# 
   132  000B                     	;# 
   133  000C                     	;# 
   134  000D                     	;# 
   135  000E                     	;# 
   136  000E                     	;# 
   137  000F                     	;# 
   138  0010                     	;# 
   139  0011                     	;# 
   140  0012                     	;# 
   141  0013                     	;# 
   142  0014                     	;# 
   143  0015                     	;# 
   144  0015                     	;# 
   145  0016                     	;# 
   146  0017                     	;# 
   147  0018                     	;# 
   148  0019                     	;# 
   149  001A                     	;# 
   150  001B                     	;# 
   151  001B                     	;# 
   152  001C                     	;# 
   153  001D                     	;# 
   154  001E                     	;# 
   155  001F                     	;# 
   156  0081                     	;# 
   157  0085                     	;# 
   158  0086                     	;# 
   159  0087                     	;# 
   160  0088                     	;# 
   161  0089                     	;# 
   162  008C                     	;# 
   163  008D                     	;# 
   164  008E                     	;# 
   165  0091                     	;# 
   166  0092                     	;# 
   167  0093                     	;# 
   168  0094                     	;# 
   169  0098                     	;# 
   170  0099                     	;# 
   171  009C                     	;# 
   172  009D                     	;# 
   173  009E                     	;# 
   174  009F                     	;# 
   175  010C                     	;# 
   176  010D                     	;# 
   177  010E                     	;# 
   178  010F                     	;# 
   179  018C                     	;# 
   180  018D                     	;# 
   181  0000                     	;# 
   182  0001                     	;# 
   183  0002                     	;# 
   184  0003                     	;# 
   185  0004                     	;# 
   186  0005                     	;# 
   187  0006                     	;# 
   188  0007                     	;# 
   189  0008                     	;# 
   190  0009                     	;# 
   191  000A                     	;# 
   192  000B                     	;# 
   193  000C                     	;# 
   194  000D                     	;# 
   195  000E                     	;# 
   196  000E                     	;# 
   197  000F                     	;# 
   198  0010                     	;# 
   199  0011                     	;# 
   200  0012                     	;# 
   201  0013                     	;# 
   202  0014                     	;# 
   203  0015                     	;# 
   204  0015                     	;# 
   205  0016                     	;# 
   206  0017                     	;# 
   207  0018                     	;# 
   208  0019                     	;# 
   209  001A                     	;# 
   210  001B                     	;# 
   211  001B                     	;# 
   212  001C                     	;# 
   213  001D                     	;# 
   214  001E                     	;# 
   215  001F                     	;# 
   216  0081                     	;# 
   217  0085                     	;# 
   218  0086                     	;# 
   219  0087                     	;# 
   220  0088                     	;# 
   221  0089                     	;# 
   222  008C                     	;# 
   223  008D                     	;# 
   224  008E                     	;# 
   225  0091                     	;# 
   226  0092                     	;# 
   227  0093                     	;# 
   228  0094                     	;# 
   229  0098                     	;# 
   230  0099                     	;# 
   231  009C                     	;# 
   232  009D                     	;# 
   233  009E                     	;# 
   234  009F                     	;# 
   235  010C                     	;# 
   236  010D                     	;# 
   237  010E                     	;# 
   238  010F                     	;# 
   239  018C                     	;# 
   240  018D                     	;# 
   241  0000                     	;# 
   242  0001                     	;# 
   243  0002                     	;# 
   244  0003                     	;# 
   245  0004                     	;# 
   246  0005                     	;# 
   247  0006                     	;# 
   248  0007                     	;# 
   249  0008                     	;# 
   250  0009                     	;# 
   251  000A                     	;# 
   252  000B                     	;# 
   253  000C                     	;# 
   254  000D                     	;# 
   255  000E                     	;# 
   256  000E                     	;# 
   257  000F                     	;# 
   258  0010                     	;# 
   259  0011                     	;# 
   260  0012                     	;# 
   261  0013                     	;# 
   262  0014                     	;# 
   263  0015                     	;# 
   264  0015                     	;# 
   265  0016                     	;# 
   266  0017                     	;# 
   267  0018                     	;# 
   268  0019                     	;# 
   269  001A                     	;# 
   270  001B                     	;# 
   271  001B                     	;# 
   272  001C                     	;# 
   273  001D                     	;# 
   274  001E                     	;# 
   275  001F                     	;# 
   276  0081                     	;# 
   277  0085                     	;# 
   278  0086                     	;# 
   279  0087                     	;# 
   280  0088                     	;# 
   281  0089                     	;# 
   282  008C                     	;# 
   283  008D                     	;# 
   284  008E                     	;# 
   285  0091                     	;# 
   286  0092                     	;# 
   287  0093                     	;# 
   288  0094                     	;# 
   289  0098                     	;# 
   290  0099                     	;# 
   291  009C                     	;# 
   292  009D                     	;# 
   293  009E                     	;# 
   294  009F                     	;# 
   295  010C                     	;# 
   296  010D                     	;# 
   297  010E                     	;# 
   298  010F                     	;# 
   299  018C                     	;# 
   300  018D                     	;# 
   301                           
   302                           	psect	strings
   303  0000'                    __pstrings:
   304  0000'                    stringtab:
   305  0000'                    __stringtab:
   306                           
   307                           ;	String table - string pointers are 1 byte each
   308  0000' 1BFF               	btfsc	btemp+1,7
   309  0001' 2800'              	ljmp	stringcode
   310  0002' 1383               	bcf	3,7
   311  0003' 187F               	btfsc	btemp+1,0
   312  0004' 1783               	bsf	3,7
   313  0005' 0800               	movf	0,w
   314  0006' 0A84               	incf	4,f
   315  0007' 1903               	skipnz
   316  0008' 0AFF               	incf	btemp+1,f
   317  0009' 0008               	return
   318  000A'                    stringcode:
   319  000A'                    stringdir:
   320  000A' 3000'              	movlw	high stringdir
   321  000B' 008A               	movwf	10
   322  000C' 0804               	movf	4,w
   323  000D' 0A84               	incf	4,f
   324  000E' 0782               	addwf	2,f
   325  000F'                    __stringbase:
   326  000F' 3400               	retlw	0
   327  0010'                    __end_of__stringtab:
   328  0010'                    _octpowers:
   329  0010' 3401               	retlw	1
   330  0011' 3400               	retlw	0
   331  0012' 3408               	retlw	8
   332  0013' 3400               	retlw	0
   333  0014' 3440               	retlw	64
   334  0015' 3400               	retlw	0
   335  0016' 3400               	retlw	0
   336  0017' 3402               	retlw	2
   337  0018' 3400               	retlw	0
   338  0019' 3410               	retlw	16
   339  001A' 3400               	retlw	0
   340  001B' 3480               	retlw	128
   341  001C'                    __end_of_octpowers:
   342  001C'                    _dpowers:
   343  001C' 3401               	retlw	1
   344  001D' 3400               	retlw	0
   345  001E' 340A               	retlw	10
   346  001F' 3400               	retlw	0
   347  0020' 3464               	retlw	100
   348  0021' 3400               	retlw	0
   349  0022' 34E8               	retlw	232
   350  0023' 3403               	retlw	3
   351  0024' 3410               	retlw	16
   352  0025' 3427               	retlw	39
   353  0026'                    __end_of_dpowers:
   354  0026'                    _hexpowers:
   355  0026' 3401               	retlw	1
   356  0027' 3400               	retlw	0
   357  0028' 3410               	retlw	16
   358  0029' 3400               	retlw	0
   359  002A' 3400               	retlw	0
   360  002B' 3401               	retlw	1
   361  002C' 3400               	retlw	0
   362  002D' 3410               	retlw	16
   363  002E'                    __end_of_hexpowers:
   364  001A                     _RCREG	set	26
   365  0019                     _TXREG	set	25
   366  001E                     _ADRESH	set	30
   367  001F                     _ADCON0	set	31
   368  0015                     _CCPR1L	set	21
   369  0017                     _CCP1CON	set	23
   370  0065                     _RCIF	set	101
   371  0064                     _TXIF	set	100
   372  00C4                     _CREN	set	196
   373  00C7                     _SPEN	set	199
   374  00FA                     _GO_nDONE	set	250
   375  0092                     _TMR2ON	set	146
   376  0099                     _SPBRG	set	153
   377  009E                     _ADRESL	set	158
   378  009F                     _ADCON1	set	159
   379  0089                     _TRISE	set	137
   380  0085                     _TRISA	set	133
   381  0092                     _PR2	set	146
   382  0087                     _TRISC	set	135
   383  0086                     _TRISB	set	134
   384  04C1                     _TRMT	set	1217
   385  04C5                     _TXEN	set	1221
   386  043E                     _TRISC6	set	1086
   387  043F                     _TRISC7	set	1087
   388  04C4                     _SYNC	set	1220
   389  04C2                     _BRGH	set	1218
   390  002E'                    STR_1:
   391  002E' 3453               	retlw	83	;'S'
   392  002F' 3445               	retlw	69	;'E'
   393  0030' 3454               	retlw	84	;'T'
   394  0031' 3450               	retlw	80	;'P'
   395  0032' 344F               	retlw	79	;'O'
   396  0033' 3449               	retlw	73	;'I'
   397  0034' 344E               	retlw	78	;'N'
   398  0035' 3454               	retlw	84	;'T'
   399  0036' 3420               	retlw	32	;' '
   400  0037' 343D               	retlw	61	;'='
   401  0038' 3420               	retlw	32	;' '
   402  0039' 3425               	retlw	37	;'%'
   403  003A' 3420               	retlw	32	;' '
   404  003B' 3434               	retlw	52	;'4'
   405  003C' 3464               	retlw	100	;'d'
   406  003D' 3420               	retlw	32	;' '
   407  003E' 3426               	retlw	38	;'&'
   408  003F' 3420               	retlw	32	;' '
   409  0040' 3446               	retlw	70	;'F'
   410  0041' 3445               	retlw	69	;'E'
   411  0042' 3445               	retlw	69	;'E'
   412  0043' 3444               	retlw	68	;'D'
   413  0044' 3442               	retlw	66	;'B'
   414  0045' 3441               	retlw	65	;'A'
   415  0046' 3443               	retlw	67	;'C'
   416  0047' 344B               	retlw	75	;'K'
   417  0048' 3420               	retlw	32	;' '
   418  0049' 343D               	retlw	61	;'='
   419  004A' 3420               	retlw	32	;' '
   420  004B' 3425               	retlw	37	;'%'
   421  004C' 3420               	retlw	32	;' '
   422  004D' 3434               	retlw	52	;'4'
   423  004E' 3464               	retlw	100	;'d'
   424  004F' 340D               	retlw	13
   425  0050' 340A               	retlw	10
   426  0051' 3400               	retlw	0
   427  0052'                    STR_3:
   428  0052' 3430               	retlw	48	;'0'
   429  0053' 3431               	retlw	49	;'1'
   430  0054' 3432               	retlw	50	;'2'
   431  0055' 3433               	retlw	51	;'3'
   432  0056' 3434               	retlw	52	;'4'
   433  0057' 3435               	retlw	53	;'5'
   434  0058' 3436               	retlw	54	;'6'
   435  0059' 3437               	retlw	55	;'7'
   436  005A' 3438               	retlw	56	;'8'
   437  005B' 3439               	retlw	57	;'9'
   438  005C' 3441               	retlw	65	;'A'
   439  005D' 3442               	retlw	66	;'B'
   440  005E' 3443               	retlw	67	;'C'
   441  005F' 3444               	retlw	68	;'D'
   442  0060' 3445               	retlw	69	;'E'
   443  0061' 3446               	retlw	70	;'F'
   444  0062' 3400               	retlw	0
   445  0063'                    STR_4:
   446  0063' 3430               	retlw	48	;'0'
   447  0064' 3431               	retlw	49	;'1'
   448  0065' 3432               	retlw	50	;'2'
   449  0066' 3433               	retlw	51	;'3'
   450  0067' 3434               	retlw	52	;'4'
   451  0068' 3435               	retlw	53	;'5'
   452  0069' 3436               	retlw	54	;'6'
   453  006A' 3437               	retlw	55	;'7'
   454  006B' 3438               	retlw	56	;'8'
   455  006C' 3439               	retlw	57	;'9'
   456  006D' 3461               	retlw	97	;'a'
   457  006E' 3462               	retlw	98	;'b'
   458  006F' 3463               	retlw	99	;'c'
   459  0070' 3464               	retlw	100	;'d'
   460  0071' 3465               	retlw	101	;'e'
   461  0072' 3466               	retlw	102	;'f'
   462  0073' 3400               	retlw	0
   463  0074'                    STR_2:
   464  0074' 3428               	retlw	40	;'('
   465  0075' 346E               	retlw	110	;'n'
   466  0076' 3475               	retlw	117	;'u'
   467  0077' 346C               	retlw	108	;'l'
   468  0078' 346C               	retlw	108	;'l'
   469  0079' 3429               	retlw	41	;')'
   470  007A' 3400               	retlw	0
   471                           
   472                           	psect	cinit
   473  0000'                    start_initialization:	
   474                           ; #config settings
   475                           
   476  0000'                    __initialization:
   477  0000'                    end_of_initialization:	
   478                           ;End of C runtime variable initialization code
   479                           
   480  0000'                    __end_of__initialization:
   481  0000' 0183               	clrf	3
   482  0001' 120A' 118A' 2800'  	ljmp	_main	;jump to C main() function
   483                           
   484                           	psect	cstackBANK1
   485  0000'                    __pcstackBANK1:
   486  0000'                    main@Str:
   487                           
   488                           ; 50 bytes @ 0x0
   489  0000'                    	ds	50
   490  0032'                    main@SETPOINT:
   491                           
   492                           ; 2 bytes @ 0x32
   493  0032'                    	ds	2
   494  0034'                    main@FEEDBACK:
   495                           
   496                           ; 2 bytes @ 0x34
   497  0034'                    	ds	2
   498                           
   499                           	psect	cstackCOMMON
   500  0000'                    __pcstackCOMMON:
   501  0000'                    ?_isdigit:
   502  0000'                    ?_LCD_Initialize:	
   503                           ; 1 bit 
   504                           
   505  0000'                    ??_LCD_Initialize:	
   506                           ; 1 bytes @ 0x0
   507                           
   508  0000'                    ?_ADC_Init:	
   509                           ; 1 bytes @ 0x0
   510                           
   511  0000'                    ??_ADC_Init:	
   512                           ; 1 bytes @ 0x0
   513                           
   514  0000'                    ?_memset:	
   515                           ; 1 bytes @ 0x0
   516                           
   517  0000'                    ?_UART_Write_Text:	
   518                           ; 1 bytes @ 0x0
   519                           
   520  0000'                    ?_putch:	
   521                           ; 1 bytes @ 0x0
   522                           
   523  0000'                    ??_putch:	
   524                           ; 1 bytes @ 0x0
   525                           
   526  0000'                    ??_isdigit:	
   527                           ; 1 bytes @ 0x0
   528                           
   529  0000'                    ?_main:	
   530                           ; 1 bytes @ 0x0
   531                           
   532  0000'                    ?_UART_Write:	
   533                           ; 1 bytes @ 0x0
   534                           
   535  0000'                    ??_UART_Write:	
   536                           ; 1 bytes @ 0x0
   537                           
   538  0000'                    ?___bmul:	
   539                           ; 1 bytes @ 0x0
   540                           
   541  0000'                    ?_Read_ADC:	
   542                           ; 1 bytes @ 0x0
   543                           
   544  0000'                    ?___wmul:	
   545                           ; 2 bytes @ 0x0
   546                           
   547  0000'                    ?___lwdiv:	
   548                           ; 2 bytes @ 0x0
   549                           
   550  0000'                    ?___lldiv:	
   551                           ; 2 bytes @ 0x0
   552                           
   553  0000'                    UART_Write@data:	
   554                           ; 4 bytes @ 0x0
   555                           
   556  0000'                    ___bmul@multiplicand:	
   557                           ; 1 bytes @ 0x0
   558                           
   559  0000'                    _isdigit$613:	
   560                           ; 1 bytes @ 0x0
   561                           
   562  0000'                    putch@c:	
   563                           ; 1 bytes @ 0x0
   564                           
   565  0000'                    ___wmul@multiplier:	
   566                           ; 1 bytes @ 0x0
   567                           
   568  0000'                    ___lwdiv@divisor:	
   569                           ; 2 bytes @ 0x0
   570                           
   571  0000'                    memset@c:	
   572                           ; 2 bytes @ 0x0
   573                           
   574  0000'                    ___lldiv@divisor:	
   575                           ; 2 bytes @ 0x0
   576                           
   577                           
   578                           ; 4 bytes @ 0x0
   579  0000'                    	ds	1
   580  0001'                    ??_UART_Write_Text:
   581  0001'                    ??___bmul:	
   582                           ; 1 bytes @ 0x1
   583                           
   584  0001'                    isdigit@c:	
   585                           ; 1 bytes @ 0x1
   586                           
   587                           
   588                           ; 1 bytes @ 0x1
   589  0001'                    	ds	1
   590  0002'                    ??_Read_ADC:
   591  0002'                    ___bmul@product:	
   592                           ; 1 bytes @ 0x2
   593                           
   594  0002'                    UART_Write_Text@i:	
   595                           ; 1 bytes @ 0x2
   596                           
   597  0002'                    ___wmul@multiplicand:	
   598                           ; 2 bytes @ 0x2
   599                           
   600  0002'                    ___lwdiv@dividend:	
   601                           ; 2 bytes @ 0x2
   602                           
   603  0002'                    memset@n:	
   604                           ; 2 bytes @ 0x2
   605                           
   606                           
   607                           ; 2 bytes @ 0x2
   608  0002'                    	ds	1
   609  0003'                    ___bmul@multiplier:
   610  0003'                    Read_ADC@val:	
   611                           ; 1 bytes @ 0x3
   612                           
   613                           
   614                           ; 2 bytes @ 0x3
   615  0003'                    	ds	1
   616  0004'                    ??_memset:
   617  0004'                    ??___wmul:	
   618                           ; 1 bytes @ 0x4
   619                           
   620  0004'                    ??___lwdiv:	
   621                           ; 1 bytes @ 0x4
   622                           
   623  0004'                    UART_Write_Text@text:	
   624                           ; 1 bytes @ 0x4
   625                           
   626  0004'                    ___wmul@product:	
   627                           ; 1 bytes @ 0x4
   628                           
   629  0004'                    ___lldiv@dividend:	
   630                           ; 2 bytes @ 0x4
   631                           
   632                           
   633                           ; 4 bytes @ 0x4
   634  0004'                    	ds	1
   635  0005'                    Read_ADC@channel:
   636  0005'                    memset@p1:	
   637                           ; 1 bytes @ 0x5
   638                           
   639  0005'                    ___lwdiv@quotient:	
   640                           ; 1 bytes @ 0x5
   641                           
   642                           
   643                           ; 2 bytes @ 0x5
   644  0005'                    	ds	1
   645  0006'                    memset@p:
   646                           
   647                           ; 1 bytes @ 0x6
   648  0006'                    	ds	1
   649  0007'                    ___lwdiv@counter:
   650                           
   651                           ; 1 bytes @ 0x7
   652  0007'                    	ds	1
   653  0008'                    ??___lldiv:
   654  0008'                    ?___lwmod:	
   655                           ; 1 bytes @ 0x8
   656                           
   657  0008'                    ___lwmod@divisor:	
   658                           ; 2 bytes @ 0x8
   659                           
   660                           
   661                           ; 2 bytes @ 0x8
   662  0008'                    	ds	1
   663  0009'                    ___lldiv@quotient:
   664                           
   665                           ; 4 bytes @ 0x9
   666  0009'                    	ds	1
   667  000A'                    ___lwmod@dividend:
   668                           
   669                           ; 2 bytes @ 0xA
   670  000A'                    	ds	2
   671  000C'                    ??___lwmod:
   672                           
   673                           ; 1 bytes @ 0xC
   674  000C'                    	ds	1
   675  000D'                    ___lldiv@counter:
   676  000D'                    ___lwmod@counter:	
   677                           ; 1 bytes @ 0xD
   678                           
   679                           
   680                           ; 1 bytes @ 0xD
   681  000D'                    	ds	1
   682                           
   683                           	psect	cstackBANK0
   684  0000'                    __pcstackBANK0:
   685  0000'                    ?_UART_Init:
   686  0000'                    ?_printf:	
   687                           ; 1 bytes @ 0x0
   688                           
   689  0000'                    UART_Init@baudrate:	
   690                           ; 2 bytes @ 0x0
   691                           
   692                           
   693                           ; 4 bytes @ 0x0
   694  0000'                    	ds	4
   695  0004'                    ??_UART_Init:
   696                           
   697                           ; 1 bytes @ 0x4
   698  0004'                    	ds	4
   699  0008'                    ??_printf:
   700                           
   701                           ; 1 bytes @ 0x8
   702  0008'                    	ds	3
   703  000B'                    _printf$323:
   704                           
   705                           ; 2 bytes @ 0xB
   706  000B'                    	ds	2
   707  000D'                    _printf$324:
   708                           
   709                           ; 2 bytes @ 0xD
   710  000D'                    	ds	2
   711  000F'                    printf@idx:
   712                           
   713                           ; 1 bytes @ 0xF
   714  000F'                    	ds	1
   715  0010'                    _printf$330:
   716  0010'                    UART_Init@x:	
   717                           ; 1 bytes @ 0x10
   718                           
   719                           
   720                           ; 2 bytes @ 0x10
   721  0010'                    	ds	1
   722  0011'                    printf@cp:
   723                           
   724                           ; 2 bytes @ 0x11
   725  0011'                    	ds	2
   726  0013'                    printf@len:
   727                           
   728                           ; 2 bytes @ 0x13
   729  0013'                    	ds	2
   730  0015'                    printf@ap:
   731                           
   732                           ; 1 bytes @ 0x15
   733  0015'                    	ds	1
   734  0016'                    printf@val:
   735                           
   736                           ; 2 bytes @ 0x16
   737  0016'                    	ds	2
   738  0018'                    printf@f:
   739                           
   740                           ; 1 bytes @ 0x18
   741  0018'                    	ds	1
   742  0019'                    printf@prec:
   743                           
   744                           ; 1 bytes @ 0x19
   745  0019'                    	ds	1
   746  001A'                    printf@width:
   747                           
   748                           ; 2 bytes @ 0x1A
   749  001A'                    	ds	2
   750  001C'                    printf@c:
   751                           
   752                           ; 1 bytes @ 0x1C
   753  001C'                    	ds	1
   754  001D'                    printf@flag:
   755                           
   756                           ; 2 bytes @ 0x1D
   757  001D'                    	ds	2
   758  001F'                    ??_main:
   759                           
   760                           ; 1 bytes @ 0x1F
   761  001F'                    	ds	2
   762                           
   763                           	psect	maintext
   764  0000'                    __pmaintext:	
   765 ;;
   766 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   767 ;;
   768 ;; *************** function _main *****************
   769 ;; Defined at:
   770 ;;		line 33 in file "Main.c"
   771 ;; Parameters:    Size  Location     Type
   772 ;;		None
   773 ;; Auto vars:     Size  Location     Type
   774 ;;  Str            50    0[BANK1 ] unsigned char [50]
   775 ;;  FEEDBACK        2   52[BANK1 ] unsigned int 
   776 ;;  SETPOINT        2   50[BANK1 ] unsigned int 
   777 ;; Return value:  Size  Location     Type
   778 ;;                  1    wreg      void 
   779 ;; Registers used:
   780 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
   781 ;; Tracked objects:
   782 ;;		On entry : B00/0
   783 ;;		On exit  : 0/0
   784 ;;		Unchanged: 0/0
   785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   786 ;;      Params:         0       0       0       0       0
   787 ;;      Locals:         0       0      54       0       0
   788 ;;      Temps:          0       2       0       0       0
   789 ;;      Totals:         0       2      54       0       0
   790 ;;Total ram usage:       56 bytes
   791 ;; Hardware stack levels required when called: 2
   792 ;; This function calls:
   793 ;;		_ADC_Init
   794 ;;		_LCD_Initialize
   795 ;;		_Read_ADC
   796 ;;		_UART_Init
   797 ;;		_UART_Write_Text
   798 ;;		_memset
   799 ;;		_printf
   800 ;; This function is called by:
   801 ;;		Startup code after reset
   802 ;; This function uses a non-reentrant model
   803 ;;
   804                           
   805  0000'                    _main:	
   806                           ;psect for function _main
   807                           
   808  0000'                    l2153:	
   809                           ;incstack = 0
   810                           ; Regs used in _main: [allreg]
   811                           
   812                           
   813                           ;Main.c: 37:     uint16_t FEEDBACK = 0;
   814  0000' 1683               	bsf	3,5	;RP0=1, select bank1
   815  0001' 1303               	bcf	3,6	;RP1=0, select bank1
   816  0002' 0180'              	clrf	main@FEEDBACK^(0+128)
   817  0003' 0180'              	clrf	(main@FEEDBACK+1)^(0+128)
   818                           
   819                           ;Main.c: 38:     TRISB = 0x00;
   820  0004' 0186               	clrf	6	;volatile
   821  0005'                    l2155:
   822                           
   823                           ;Main.c: 39:     LCD_Initialize();
   824  0005' 120A' 118A' 2000' 120A' 118A' 	fcall	_LCD_Initialize
   825  000A'                    l2157:
   826                           
   827                           ;Main.c: 40:     ADC_Init();
   828  000A' 120A' 118A' 2000' 120A' 118A' 	fcall	_ADC_Init
   829  000F'                    l2159:
   830                           
   831                           ;Main.c: 41:     UART_Init(9600);
   832  000F' 3000               	movlw	0
   833  0010' 1283               	bcf	3,5	;RP0=0, select bank0
   834  0011' 1303               	bcf	3,6	;RP1=0, select bank0
   835  0012' 0083'              	movwf	UART_Init@baudrate+3
   836  0013' 3000               	movlw	0
   837  0014' 0082'              	movwf	UART_Init@baudrate+2
   838  0015' 3025               	movlw	37
   839  0016' 0081'              	movwf	UART_Init@baudrate+1
   840  0017' 3080               	movlw	128
   841  0018' 0080'              	movwf	UART_Init@baudrate
   842  0019' 120A' 118A' 2000' 120A' 118A' 	fcall	_UART_Init
   843  001E'                    l2161:
   844                           
   845                           ;Main.c: 42:     TRISC &=~ (1<<2);
   846  001E' 30FB               	movlw	251
   847  001F' 1283               	bcf	3,5	;RP0=0, select bank0
   848  0020' 1303               	bcf	3,6	;RP1=0, select bank0
   849  0021' 009F'              	movwf	??_main
   850  0022' 081F'              	movf	??_main,w
   851  0023' 1683               	bsf	3,5	;RP0=1, select bank1
   852  0024' 1303               	bcf	3,6	;RP1=0, select bank1
   853  0025' 0587               	andwf	7,f	;volatile
   854  0026'                    l2163:
   855                           
   856                           ;Main.c: 43:     CCP1CON = 0x0F;
   857  0026' 300F               	movlw	15
   858  0027' 1283               	bcf	3,5	;RP0=0, select bank0
   859  0028' 1303               	bcf	3,6	;RP1=0, select bank0
   860  0029' 0097               	movwf	23	;volatile
   861  002A'                    l2165:
   862                           
   863                           ;Main.c: 44:     PR2 = 255;
   864  002A' 30FF               	movlw	255
   865  002B' 1683               	bsf	3,5	;RP0=1, select bank1
   866  002C' 1303               	bcf	3,6	;RP1=0, select bank1
   867  002D' 0092               	movwf	18	;volatile
   868  002E'                    l2167:
   869                           
   870                           ;Main.c: 45:     CCPR1L = 125;
   871  002E' 307D               	movlw	125
   872  002F' 1283               	bcf	3,5	;RP0=0, select bank0
   873  0030' 1303               	bcf	3,6	;RP1=0, select bank0
   874  0031' 0095               	movwf	21	;volatile
   875  0032'                    l2169:
   876                           
   877                           ;Main.c: 46:     TMR2ON = 1;
   878  0032' 1512               	bsf	18,2	;volatile
   879  0033'                    l2171:
   880                           
   881                           ;Main.c: 48:     memset(Str,0x00,50);
   882  0033' 3000               	movlw	0
   883  0034' 0080'              	movwf	memset@c
   884  0035' 0081'              	movwf	memset@c+1
   885  0036' 3032               	movlw	50
   886  0037' 0082'              	movwf	memset@n
   887  0038' 3000               	movlw	0
   888  0039' 0083'              	movwf	memset@n+1
   889  003A' 3000'              	movlw	(low (main@Str| 0))& (0+255)
   890  003B' 120A' 118A' 2000' 120A' 118A' 	fcall	_memset
   891  0040'                    l2173:
   892                           
   893                           ;Main.c: 49:     printf(Str,50,"SETPOINT = % 4d & FEEDBACK = % 4d\r\n",SETPOINT,FEEDBACK
      +                          );
   894  0040' 3032               	movlw	50
   895  0041' 1283               	bcf	3,5	;RP0=0, select bank0
   896  0042' 1303               	bcf	3,6	;RP1=0, select bank0
   897  0043' 0080'              	movwf	?_printf
   898  0044' 3000               	movlw	0
   899  0045' 0081'              	movwf	?_printf+1
   900  0046' 301F               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   901  0047' 0080'              	movwf	low ((?_printf| 0+2))
   902  0048' 3080               	movlw	128
   903  0049' 0081'              	movwf	(low ((?_printf| 0+2))+1)
   904  004A' 3000               	movlw	0
   905  004B' 0084'              	movwf	?_printf+4
   906  004C' 0085'              	movwf	?_printf+5
   907  004D' 3000               	movlw	0
   908  004E' 0086'              	movwf	?_printf+6
   909  004F' 0087'              	movwf	?_printf+7
   910  0050' 3000'              	movlw	(low (main@Str| 0))& (0+255)
   911  0051' 120A' 118A' 2000' 120A' 118A' 	fcall	_printf
   912  0056'                    l2175:
   913                           
   914                           ;Main.c: 50:     UART_Write_Text(Str);
   915  0056' 3000'              	movlw	(low (main@Str| 0))& (0+255)
   916  0057' 120A' 118A' 2000' 120A' 118A' 	fcall	_UART_Write_Text
   917  005C'                    l2177:
   918                           
   919                           ;Main.c: 53:     {;Main.c: 54:         SETPOINT = Read_ADC(0);
   920  005C' 3000               	movlw	0
   921  005D' 120A' 118A' 2000' 120A' 118A' 	fcall	_Read_ADC
   922  0062' 0801'              	movf	?_Read_ADC+1,w
   923  0063' 1683               	bsf	3,5	;RP0=1, select bank1
   924  0064' 1303               	bcf	3,6	;RP1=0, select bank1
   925  0065' 0080'              	movwf	(main@SETPOINT+1)^(0+128)
   926  0066' 0800'              	movf	?_Read_ADC,w
   927  0067' 0080'              	movwf	main@SETPOINT^(0+128)
   928  0068'                    l2179:
   929                           
   930                           ;Main.c: 55:         FEEDBACK = Read_ADC(1);
   931  0068' 3001               	movlw	1
   932  0069' 120A' 118A' 2000' 120A' 118A' 	fcall	_Read_ADC
   933  006E' 0801'              	movf	?_Read_ADC+1,w
   934  006F' 1683               	bsf	3,5	;RP0=1, select bank1
   935  0070' 1303               	bcf	3,6	;RP1=0, select bank1
   936  0071' 0080'              	movwf	(main@FEEDBACK+1)^(0+128)
   937  0072' 0800'              	movf	?_Read_ADC,w
   938  0073' 0080'              	movwf	main@FEEDBACK^(0+128)
   939  0074'                    l2181:
   940                           
   941                           ;Main.c: 56:         if(SETPOINT > FEEDBACK)
   942  0074' 0800'              	movf	(main@SETPOINT+1)^(0+128),w
   943  0075' 0200'              	subwf	(main@FEEDBACK+1)^(0+128),w
   944  0076' 1D03               	skipz
   945  0077' 2800'              	goto	u2195
   946  0078' 0800'              	movf	main@SETPOINT^(0+128),w
   947  0079' 0200'              	subwf	main@FEEDBACK^(0+128),w
   948  007A'                    u2195:
   949  007A' 1803               	skipnc
   950  007B' 2800'              	goto	u2191
   951  007C' 2800'              	goto	u2190
   952  007D'                    u2191:
   953  007D' 2800'              	goto	l2189
   954  007E'                    u2190:
   955  007E'                    l2183:
   956                           
   957                           ;Main.c: 57:         {;Main.c: 58:             if(CCPR1L < 250)
   958  007E' 30FA               	movlw	250
   959  007F' 1283               	bcf	3,5	;RP0=0, select bank0
   960  0080' 1303               	bcf	3,6	;RP1=0, select bank0
   961  0081' 0215               	subwf	21,w	;volatile
   962  0082' 1803               	skipnc
   963  0083' 2800'              	goto	u2201
   964  0084' 2800'              	goto	u2200
   965  0085'                    u2201:
   966  0085' 2800'              	goto	l2197
   967  0086'                    u2200:
   968  0086'                    l2185:
   969                           
   970                           ;Main.c: 59:             {;Main.c: 60:                 CCPR1L += 1;
   971  0086' 3001               	movlw	1
   972  0087' 009F'              	movwf	??_main
   973  0088' 081F'              	movf	??_main,w
   974  0089' 0795               	addwf	21,f	;volatile
   975  008A'                    l2187:
   976                           
   977                           ;Main.c: 61:                 TMR2ON = 1;
   978  008A' 1512               	bsf	18,2	;volatile
   979  008B' 2800'              	goto	l2197
   980  008C'                    l2189:
   981  008C' 0800'              	movf	(main@FEEDBACK+1)^(0+128),w
   982  008D' 0200'              	subwf	(main@SETPOINT+1)^(0+128),w
   983  008E' 1D03               	skipz
   984  008F' 2800'              	goto	u2215
   985  0090' 0800'              	movf	main@FEEDBACK^(0+128),w
   986  0091' 0200'              	subwf	main@SETPOINT^(0+128),w
   987  0092'                    u2215:
   988  0092' 1803               	skipnc
   989  0093' 2800'              	goto	u2211
   990  0094' 2800'              	goto	u2210
   991  0095'                    u2211:
   992  0095' 2800'              	goto	l2197
   993  0096'                    u2210:
   994  0096'                    l2191:
   995                           
   996                           ;Main.c: 65:         {;Main.c: 66:             if(CCPR1L > 5)
   997  0096' 3006               	movlw	6
   998  0097' 1283               	bcf	3,5	;RP0=0, select bank0
   999  0098' 1303               	bcf	3,6	;RP1=0, select bank0
  1000  0099' 0215               	subwf	21,w	;volatile
  1001  009A' 1C03               	skipc
  1002  009B' 2800'              	goto	u2221
  1003  009C' 2800'              	goto	u2220
  1004  009D'                    u2221:
  1005  009D' 2800'              	goto	l2197
  1006  009E'                    u2220:
  1007  009E'                    l2193:
  1008                           
  1009                           ;Main.c: 67:             {;Main.c: 68:                 CCPR1L -= 1;
  1010  009E' 3001               	movlw	1
  1011  009F' 0295               	subwf	21,f	;volatile
  1012  00A0' 2800'              	goto	l2187
  1013  00A1'                    l2197:
  1014                           
  1015                           ;Main.c: 75:         _delay((unsigned long)((1)*(16000000UL/4000.0)));
  1016  00A1' 3006               	movlw	6
  1017  00A2' 1283               	bcf	3,5	;RP0=0, select bank0
  1018  00A3' 1303               	bcf	3,6	;RP1=0, select bank0
  1019  00A4' 00A0'              	movwf	??_main+1
  1020  00A5' 302F               	movlw	47
  1021  00A6' 009F'              	movwf	??_main
  1022  00A7'                    u2237:
  1023  00A7' 0B9F'              	decfsz	??_main,f
  1024  00A8' 2800'              	goto	u2237
  1025  00A9' 0BA0'              	decfsz	??_main+1,f
  1026  00AA' 2800'              	goto	u2237
  1027  00AB' 2800'              	nop2
  1028  00AC' 2800'              	goto	l2177
  1029  00AD' 120A' 118A' 2800'  	ljmp	start
  1030  00B0'                    __end_of_main:
  1031                           
  1032                           	psect	text1
  1033  0000'                    __ptext1:	
  1034 ;; *************** function _printf *****************
  1035 ;; Defined at:
  1036 ;;		line 477 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c"
  1037 ;; Parameters:    Size  Location     Type
  1038 ;;  f               1    wreg     PTR const unsigned char 
  1039 ;;		 -> main@Str(50), 
  1040 ;; Auto vars:     Size  Location     Type
  1041 ;;  f               1   24[BANK0 ] PTR const unsigned char 
  1042 ;;		 -> main@Str(50), 
  1043 ;;  idx             1   15[BANK0 ] unsigned char 
  1044 ;;  tmpval          4    0        struct .
  1045 ;;  flag            2   29[BANK0 ] unsigned short 
  1046 ;;  width           2   26[BANK0 ] int 
  1047 ;;  val             2   22[BANK0 ] unsigned int 
  1048 ;;  len             2   19[BANK0 ] unsigned int 
  1049 ;;  cp              2   17[BANK0 ] PTR const unsigned char 
  1050 ;;		 -> STR_2(7), printf@c(1), ?_printf(2), STR_1(36), 
  1051 ;;  c               1   28[BANK0 ] unsigned char 
  1052 ;;  prec            1   25[BANK0 ] char 
  1053 ;;  ap              1   21[BANK0 ] PTR void [1]
  1054 ;;		 -> ?_printf(2), 
  1055 ;; Return value:  Size  Location     Type
  1056 ;;                  2    0[BANK0 ] int 
  1057 ;; Registers used:
  1058 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1059 ;; Tracked objects:
  1060 ;;		On entry : 0/0
  1061 ;;		On exit  : 0/0
  1062 ;;		Unchanged: 0/0
  1063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1064 ;;      Params:         0       8       0       0       0
  1065 ;;      Locals:         0      20       0       0       0
  1066 ;;      Temps:          0       3       0       0       0
  1067 ;;      Totals:         0      31       0       0       0
  1068 ;;Total ram usage:       31 bytes
  1069 ;; Hardware stack levels used: 1
  1070 ;; Hardware stack levels required when called: 1
  1071 ;; This function calls:
  1072 ;;		___bmul
  1073 ;;		___lwdiv
  1074 ;;		___lwmod
  1075 ;;		___wmul
  1076 ;;		_isdigit
  1077 ;;		_putch
  1078 ;; This function is called by:
  1079 ;;		_main
  1080 ;; This function uses a non-reentrant model
  1081 ;;
  1082                           
  1083  0000'                    _printf:	
  1084                           ;psect for function _printf
  1085                           
  1086                           
  1087                           ;incstack = 0
  1088                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1089                           ;printf@f stored from wreg
  1090  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  1091  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  1092  0002' 0098'              	movwf	printf@f
  1093  0003'                    l1789:
  1094                           
  1095                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 477: printf(const
      +                           char * f, ...);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 47
      +                          8: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 479:  va_list
      +                           ap;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 512:  char c;
      +                          ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 514:  int width;;
      +                          C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 521:  signed char 
      +                          prec;
  1096  0003' 3000'              	movlw	(low (?_printf| 0))& (0+255)
  1097  0004' 0088'              	movwf	??_printf
  1098  0005' 0808'              	movf	??_printf,w
  1099  0006' 0095'              	movwf	printf@ap
  1100                           
  1101                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1102  0007' 2800'              	goto	l2099
  1103  0008'                    l1791:
  1104                           
  1105                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1106  0008' 3025               	movlw	37
  1107  0009' 061C'              	xorwf	printf@c,w
  1108  000A' 1903               	btfsc	3,2
  1109  000B' 2800'              	goto	u1521
  1110  000C' 2800'              	goto	u1520
  1111  000D'                    u1521:
  1112  000D' 2800'              	goto	l1795
  1113  000E'                    u1520:
  1114  000E'                    l1793:
  1115                           
  1116                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 558:    (putch(c) );
  1117  000E' 081C'              	movf	printf@c,w
  1118  000F' 120A' 118A' 2000' 120A' 118A' 	fcall	_putch
  1119                           
  1120                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 559:    continue;
  1121  0014' 2800'              	goto	l2099
  1122  0015'                    l1795:
  1123                           
  1124                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1125  0015' 019A'              	clrf	printf@width
  1126  0016' 019B'              	clrf	printf@width+1
  1127                           
  1128                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1129  0017' 019D'              	clrf	printf@flag
  1130  0018' 019E'              	clrf	printf@flag+1
  1131  0019' 2800'              	goto	l1807
  1132  001A'                    l237:	
  1133                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 570:    case '-':
  1134                           
  1135                           
  1136                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 571:     flag |= 
      +                          0x08;
  1137  001A' 159D'              	bsf	printf@flag,3
  1138  001B'                    l1797:
  1139                           
  1140                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 572:     f++;
  1141  001B' 3001               	movlw	1
  1142  001C' 0088'              	movwf	??_printf
  1143  001D' 0808'              	movf	??_printf,w
  1144  001E' 0798'              	addwf	printf@f,f
  1145                           
  1146                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 573:     continue
      +                          ;
  1147  001F' 2800'              	goto	l1807
  1148  0020'                    l239:	
  1149                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 577:    case ' ':
  1150                           
  1151                           
  1152                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 578:     flag |= 
      +                          0x01;
  1153  0020' 141D'              	bsf	printf@flag,0
  1154  0021' 2800'              	goto	l1797
  1155  0022'                    l240:	
  1156                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 590:    case '#':
  1157                           
  1158                           
  1159                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 591:     flag |= 
      +                          0x800;
  1160  0022' 159E'              	bsf	printf@flag+1,3
  1161  0023' 2800'              	goto	l1797
  1162  0024'                    l241:	
  1163                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 596:    case '0':
  1164                           
  1165                           
  1166                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 597:     flag |= 
      +                          0x04;
  1167  0024' 151D'              	bsf	printf@flag,2
  1168  0025' 2800'              	goto	l1797
  1169  0026'                    l1807:
  1170  0026' 0818'              	movf	printf@f,w
  1171  0027' 0084               	movwf	4
  1172  0028' 0800               	movf	0,w
  1173  0029' 0088'              	movwf	??_printf
  1174  002A' 0189'              	clrf	??_printf+1
  1175                           
  1176                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1177                           ; Switch size 1, requested type "simple"
  1178                           ; Number of cases is 1, Range of values is 0 to 0
  1179                           ; switch strategies available:
  1180                           ; Name         Instructions Cycles
  1181                           ; simple_byte            4     3 (average)
  1182                           ; direct_byte           11     8 (fixed)
  1183                           ; jumptable            260     6 (fixed)
  1184                           ;	Chosen strategy is simple_byte
  1185  002B' 0809'              	movf	??_printf+1,w
  1186  002C' 3A00               	xorlw	0	; case 0
  1187  002D' 1903               	skipnz
  1188  002E' 2800'              	goto	l2359
  1189  002F' 2800'              	goto	l243
  1190  0030'                    l2359:
  1191                           
  1192                           ; Switch size 1, requested type "simple"
  1193                           ; Number of cases is 4, Range of values is 32 to 48
  1194                           ; switch strategies available:
  1195                           ; Name         Instructions Cycles
  1196                           ; simple_byte           13     7 (average)
  1197                           ; direct_byte           62    11 (fixed)
  1198                           ; jumptable            263     9 (fixed)
  1199                           ;	Chosen strategy is simple_byte
  1200  0030' 0808'              	movf	??_printf,w
  1201  0031' 3A20               	xorlw	32	; case 32
  1202  0032' 1903               	skipnz
  1203  0033' 2800'              	goto	l239
  1204  0034' 3A03               	xorlw	3	; case 35
  1205  0035' 1903               	skipnz
  1206  0036' 2800'              	goto	l240
  1207  0037' 3A0E               	xorlw	14	; case 45
  1208  0038' 1903               	skipnz
  1209  0039' 2800'              	goto	l237
  1210  003A' 3A1D               	xorlw	29	; case 48
  1211  003B' 1903               	skipnz
  1212  003C' 2800'              	goto	l241
  1213  003D' 2800'              	goto	l243
  1214  003E'                    l243:
  1215                           
  1216                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 610:   if(flag & 
      +                          0x08)
  1217  003E' 1D9D'              	btfss	printf@flag,3
  1218  003F' 2800'              	goto	u1531
  1219  0040' 2800'              	goto	u1530
  1220  0041'                    u1531:
  1221  0041' 2800'              	goto	l1811
  1222  0042'                    u1530:
  1223  0042'                    l1809:
  1224                           
  1225                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 611:    flag &= ~
      +                          0x04;
  1226  0042' 30FB               	movlw	251
  1227  0043' 059D'              	andwf	printf@flag,f
  1228  0044' 30FF               	movlw	255
  1229  0045' 059E'              	andwf	printf@flag+1,f
  1230  0046'                    l1811:
  1231                           
  1232                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1233  0046' 0818'              	movf	printf@f,w
  1234  0047' 0084               	movwf	4
  1235  0048' 0800               	movf	0,w
  1236  0049' 120A' 118A' 2000' 120A' 118A' 	fcall	_isdigit
  1237  004E' 1C03               	btfss	3,0
  1238  004F' 2800'              	goto	u1541
  1239  0050' 2800'              	goto	u1540
  1240  0051'                    u1541:
  1241  0051' 2800'              	goto	l1823
  1242  0052'                    u1540:
  1243  0052'                    l1813:
  1244                           
  1245                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  1246  0052' 1283               	bcf	3,5	;RP0=0, select bank0
  1247  0053' 1303               	bcf	3,6	;RP1=0, select bank0
  1248  0054' 019A'              	clrf	printf@width
  1249  0055' 019B'              	clrf	printf@width+1
  1250  0056'                    l1815:
  1251                           
  1252                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  1253  0056' 300A               	movlw	10
  1254  0057' 0080'              	movwf	___wmul@multiplier
  1255  0058' 3000               	movlw	0
  1256  0059' 0081'              	movwf	___wmul@multiplier+1
  1257  005A' 1283               	bcf	3,5	;RP0=0, select bank0
  1258  005B' 1303               	bcf	3,6	;RP1=0, select bank0
  1259  005C' 081B'              	movf	printf@width+1,w
  1260  005D' 0083'              	movwf	___wmul@multiplicand+1
  1261  005E' 081A'              	movf	printf@width,w
  1262  005F' 0082'              	movwf	___wmul@multiplicand
  1263  0060' 120A' 118A' 2000' 120A' 118A' 	fcall	___wmul
  1264  0065' 0801'              	movf	?___wmul+1,w
  1265  0066' 1283               	bcf	3,5	;RP0=0, select bank0
  1266  0067' 1303               	bcf	3,6	;RP1=0, select bank0
  1267  0068' 009B'              	movwf	printf@width+1
  1268  0069' 0800'              	movf	?___wmul,w
  1269  006A' 009A'              	movwf	printf@width
  1270  006B'                    l1817:
  1271                           
  1272                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  1273  006B' 0818'              	movf	printf@f,w
  1274  006C' 0084               	movwf	4
  1275  006D' 1383               	bcf	3,7	;select IRP bank0
  1276  006E' 0800               	movf	0,w
  1277  006F' 3ED0               	addlw	208
  1278  0070' 0088'              	movwf	??_printf
  1279  0071' 30FF               	movlw	255
  1280  0072' 1803               	skipnc
  1281  0073' 3000               	movlw	0
  1282  0074' 0089'              	movwf	??_printf+1
  1283  0075' 0808'              	movf	??_printf,w
  1284  0076' 079A'              	addwf	printf@width,f
  1285  0077' 1803               	skipnc
  1286  0078' 0A9B'              	incf	printf@width+1,f
  1287  0079' 0809'              	movf	??_printf+1,w
  1288  007A' 079B'              	addwf	printf@width+1,f
  1289  007B'                    l1819:
  1290  007B' 3001               	movlw	1
  1291  007C' 0088'              	movwf	??_printf
  1292  007D' 0808'              	movf	??_printf,w
  1293  007E' 0798'              	addwf	printf@f,f
  1294  007F'                    l1821:
  1295                           
  1296                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  1297  007F' 0818'              	movf	printf@f,w
  1298  0080' 0084               	movwf	4
  1299  0081' 0800               	movf	0,w
  1300  0082' 120A' 118A' 2000' 120A' 118A' 	fcall	_isdigit
  1301  0087' 1803               	btfsc	3,0
  1302  0088' 2800'              	goto	u1551
  1303  0089' 2800'              	goto	u1550
  1304  008A'                    u1551:
  1305  008A' 2800'              	goto	l1815
  1306  008B'                    u1550:
  1307  008B' 2800'              	goto	l248
  1308  008C'                    l1823:
  1309  008C' 1283               	bcf	3,5	;RP0=0, select bank0
  1310  008D' 1303               	bcf	3,6	;RP1=0, select bank0
  1311  008E' 0818'              	movf	printf@f,w
  1312  008F' 0084               	movwf	4
  1313  0090' 302A               	movlw	42
  1314  0091' 1383               	bcf	3,7	;select IRP bank0
  1315  0092' 0600               	xorwf	0,w
  1316  0093' 1D03               	btfss	3,2
  1317  0094' 2800'              	goto	u1561
  1318  0095' 2800'              	goto	u1560
  1319  0096'                    u1561:
  1320  0096' 2800'              	goto	l248
  1321  0097'                    u1560:
  1322  0097'                    l1825:
  1323                           
  1324                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 622:    width = (
      +                          *(int *)__va_arg((*(int **)ap), (int)0));
  1325  0097' 0815'              	movf	printf@ap,w
  1326  0098' 0084               	movwf	4
  1327  0099' 0800               	movf	0,w
  1328  009A' 009A'              	movwf	printf@width
  1329  009B' 0A84               	incf	4,f
  1330  009C' 0800               	movf	0,w
  1331  009D' 009B'              	movwf	printf@width+1
  1332  009E'                    l1827:
  1333  009E' 3002               	movlw	2
  1334  009F' 0088'              	movwf	??_printf
  1335  00A0' 0808'              	movf	??_printf,w
  1336  00A1' 0795'              	addwf	printf@ap,f
  1337  00A2'                    l1829:
  1338                           
  1339                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 623:    f++;
  1340  00A2' 3001               	movlw	1
  1341  00A3' 0088'              	movwf	??_printf
  1342  00A4' 0808'              	movf	??_printf,w
  1343  00A5' 0798'              	addwf	printf@f,f
  1344  00A6'                    l248:
  1345                           
  1346                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  1347  00A6' 1283               	bcf	3,5	;RP0=0, select bank0
  1348  00A7' 1303               	bcf	3,6	;RP1=0, select bank0
  1349  00A8' 0818'              	movf	printf@f,w
  1350  00A9' 0084               	movwf	4
  1351  00AA' 302E               	movlw	46
  1352  00AB' 1383               	bcf	3,7	;select IRP bank0
  1353  00AC' 0600               	xorwf	0,w
  1354  00AD' 1D03               	btfss	3,2
  1355  00AE' 2800'              	goto	u1571
  1356  00AF' 2800'              	goto	u1570
  1357  00B0'                    u1571:
  1358  00B0' 2800'              	goto	l1857
  1359  00B1'                    u1570:
  1360  00B1'                    l1831:
  1361                           
  1362                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  1363  00B1' 171E'              	bsf	printf@flag+1,6
  1364  00B2'                    l1833:
  1365                           
  1366                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 630:    f++;
  1367  00B2' 3001               	movlw	1
  1368  00B3' 0088'              	movwf	??_printf
  1369  00B4' 0808'              	movf	??_printf,w
  1370  00B5' 0798'              	addwf	printf@f,f
  1371  00B6'                    l1835:
  1372                           
  1373                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 632:    if(*f == 
      +                          '*') {
  1374  00B6' 0818'              	movf	printf@f,w
  1375  00B7' 0084               	movwf	4
  1376  00B8' 302A               	movlw	42
  1377  00B9' 0600               	xorwf	0,w
  1378  00BA' 1D03               	btfss	3,2
  1379  00BB' 2800'              	goto	u1581
  1380  00BC' 2800'              	goto	u1580
  1381  00BD'                    u1581:
  1382  00BD' 2800'              	goto	l1849
  1383  00BE'                    u1580:
  1384  00BE'                    l1837:
  1385                           
  1386                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 633:     prec = (
      +                          *(int *)__va_arg((*(int **)ap), (int)0));
  1387  00BE' 0815'              	movf	printf@ap,w
  1388  00BF' 0084               	movwf	4
  1389  00C0' 0800               	movf	0,w
  1390  00C1' 0088'              	movwf	??_printf
  1391  00C2' 0808'              	movf	??_printf,w
  1392  00C3' 0099'              	movwf	printf@prec
  1393  00C4'                    l1839:
  1394  00C4' 3002               	movlw	2
  1395  00C5' 0088'              	movwf	??_printf
  1396  00C6' 0808'              	movf	??_printf,w
  1397  00C7' 0795'              	addwf	printf@ap,f
  1398  00C8'                    l1841:
  1399                           
  1400                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 634:     if (prec
      +                           < 0) {
  1401  00C8' 1F99'              	btfss	printf@prec,7
  1402  00C9' 2800'              	goto	u1591
  1403  00CA' 2800'              	goto	u1590
  1404  00CB'                    u1591:
  1405  00CB' 2800'              	goto	l1847
  1406  00CC'                    u1590:
  1407  00CC'                    l1843:
  1408                           
  1409                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 635:      prec = 
      +                          0;
  1410  00CC' 0199'              	clrf	printf@prec
  1411  00CD'                    l1845:
  1412                           
  1413                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 636:      flag &=
      +                           ~0x4000;
  1414  00CD' 30FF               	movlw	255
  1415  00CE' 059D'              	andwf	printf@flag,f
  1416  00CF' 30BF               	movlw	191
  1417  00D0' 059E'              	andwf	printf@flag+1,f
  1418  00D1'                    l1847:
  1419                           
  1420                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 641:     f++;
  1421  00D1' 3001               	movlw	1
  1422  00D2' 0088'              	movwf	??_printf
  1423  00D3' 0808'              	movf	??_printf,w
  1424  00D4' 0798'              	addwf	printf@f,f
  1425                           
  1426                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 642:    } else
  1427  00D5' 2800'              	goto	l1915
  1428  00D6'                    l1849:
  1429                           
  1430                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1431  00D6' 0199'              	clrf	printf@prec
  1432                           
  1433                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1434  00D7' 2800'              	goto	l254
  1435  00D8'                    l1851:
  1436                           
  1437                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  1438  00D8' 1283               	bcf	3,5	;RP0=0, select bank0
  1439  00D9' 1303               	bcf	3,6	;RP1=0, select bank0
  1440  00DA' 0819'              	movf	printf@prec,w
  1441  00DB' 0088'              	movwf	??_printf
  1442  00DC' 0808'              	movf	??_printf,w
  1443  00DD' 0080'              	movwf	___bmul@multiplicand
  1444  00DE' 300A               	movlw	10
  1445  00DF' 120A' 118A' 2000' 120A' 118A' 	fcall	___bmul
  1446  00E4' 1283               	bcf	3,5	;RP0=0, select bank0
  1447  00E5' 1303               	bcf	3,6	;RP1=0, select bank0
  1448  00E6' 0089'              	movwf	??_printf+1
  1449  00E7' 0809'              	movf	??_printf+1,w
  1450  00E8' 0099'              	movwf	printf@prec
  1451  00E9'                    l1853:
  1452                           
  1453                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  1454  00E9' 0818'              	movf	printf@f,w
  1455  00EA' 0084               	movwf	4
  1456  00EB' 1383               	bcf	3,7	;select IRP bank0
  1457  00EC' 0800               	movf	0,w
  1458  00ED' 3ED0               	addlw	-48
  1459  00EE' 0088'              	movwf	??_printf
  1460  00EF' 0808'              	movf	??_printf,w
  1461  00F0' 0799'              	addwf	printf@prec,f
  1462  00F1'                    l1855:
  1463  00F1' 3001               	movlw	1
  1464  00F2' 0088'              	movwf	??_printf
  1465  00F3' 0808'              	movf	??_printf,w
  1466  00F4' 0798'              	addwf	printf@f,f
  1467  00F5'                    l254:	
  1468                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 649:     }
  1469                           
  1470                           
  1471                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1472  00F5' 0818'              	movf	printf@f,w
  1473  00F6' 0084               	movwf	4
  1474  00F7' 0800               	movf	0,w
  1475  00F8' 120A' 118A' 2000' 120A' 118A' 	fcall	_isdigit
  1476  00FD' 1803               	btfsc	3,0
  1477  00FE' 2800'              	goto	u1601
  1478  00FF' 2800'              	goto	u1600
  1479  0100'                    u1601:
  1480  0100' 2800'              	goto	l1851
  1481  0101'                    u1600:
  1482  0101' 2800'              	goto	l1915
  1483  0102'                    l1857:
  1484                           
  1485                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  1486  0102' 0199'              	clrf	printf@prec
  1487  0103' 2800'              	goto	l1915
  1488  0104'                    l261:	
  1489                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 715:   case 'o':
  1490                           
  1491                           
  1492                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 717:    flag |= 0
      +                          x40;
  1493  0104' 171D'              	bsf	printf@flag,6
  1494                           
  1495                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 719:    break;
  1496  0105' 2800'              	goto	l1917
  1497  0106'                    l266:	
  1498                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 738:   case 'X':
  1499                           
  1500                           
  1501                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 740:    flag |= 0
      +                          x20;
  1502  0106' 169D'              	bsf	printf@flag,5
  1503  0107'                    l267:	
  1504                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 744:   case 'x':
  1505                           
  1506                           
  1507                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 747:    flag |= 0
      +                          x80;
  1508  0107' 179D'              	bsf	printf@flag,7
  1509                           
  1510                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 749:    break;
  1511  0108' 2800'              	goto	l1917
  1512  0109'                    l1859:
  1513                           
  1514                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 760:     cp = (*(
      +                          const char * *)__va_arg((*(const char * **)ap), (const char *)0));
  1515  0109' 0815'              	movf	printf@ap,w
  1516  010A' 0084               	movwf	4
  1517  010B' 0800               	movf	0,w
  1518  010C' 0091'              	movwf	printf@cp
  1519  010D' 0A84               	incf	4,f
  1520  010E' 0800               	movf	0,w
  1521  010F' 0384               	decf	4,f
  1522  0110' 0092'              	movwf	printf@cp+1
  1523  0111'                    l1861:
  1524  0111' 3002               	movlw	2
  1525  0112' 0088'              	movwf	??_printf
  1526  0113' 0808'              	movf	??_printf,w
  1527  0114' 0795'              	addwf	printf@ap,f
  1528  0115'                    l1863:
  1529                           
  1530                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 766:    if(!cp)
  1531  0115' 0811'              	movf	printf@cp,w
  1532  0116' 0412'              	iorwf	printf@cp+1,w
  1533  0117' 1D03               	btfss	3,2
  1534  0118' 2800'              	goto	u1611
  1535  0119' 2800'              	goto	u1610
  1536  011A'                    u1611:
  1537  011A' 2800'              	goto	l1867
  1538  011B'                    u1610:
  1539  011B'                    l1865:
  1540                           
  1541                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 767:     cp = "(n
      +                          ull)";
  1542  011B' 3065               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1543  011C' 0091'              	movwf	printf@cp
  1544  011D' 3080               	movlw	128
  1545  011E' 0092'              	movwf	printf@cp+1
  1546  011F'                    l1867:
  1547                           
  1548                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 771:    len = 0;
  1549  011F' 0193'              	clrf	printf@len
  1550  0120' 0194'              	clrf	printf@len+1
  1551                           
  1552                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 772:    while(cp[
      +                          len])
  1553  0121' 2800'              	goto	l1871
  1554  0122'                    l1869:
  1555                           
  1556                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 773:     len++;
  1557  0122' 3001               	movlw	1
  1558  0123' 0793'              	addwf	printf@len,f
  1559  0124' 1803               	skipnc
  1560  0125' 0A94'              	incf	printf@len+1,f
  1561  0126' 3000               	movlw	0
  1562  0127' 0794'              	addwf	printf@len+1,f
  1563  0128'                    l1871:
  1564                           
  1565                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 772:    while(cp[
      +                          len])
  1566  0128' 0813'              	movf	printf@len,w
  1567  0129' 0711'              	addwf	printf@cp,w
  1568  012A' 0084               	movwf	4
  1569  012B' 0812'              	movf	printf@cp+1,w
  1570  012C' 1803               	skipnc
  1571  012D' 0A12'              	incf	printf@cp+1,w
  1572  012E' 00FF               	movwf	btemp+1
  1573  012F' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  1574  0134' 3A00               	xorlw	0
  1575  0135' 1D03               	skipz
  1576  0136' 2800'              	goto	u1621
  1577  0137' 2800'              	goto	u1620
  1578  0138'                    u1621:
  1579  0138' 2800'              	goto	l1869
  1580  0139'                    u1620:
  1581  0139'                    l1873:
  1582                           
  1583                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 779:    if(prec &
      +                          & (prec < ((int)len)))
  1584  0139' 0819'              	movf	printf@prec,w
  1585  013A' 1903               	btfsc	3,2
  1586  013B' 2800'              	goto	u1631
  1587  013C' 2800'              	goto	u1630
  1588  013D'                    u1631:
  1589  013D' 2800'              	goto	l274
  1590  013E'                    u1630:
  1591  013E'                    l1875:
  1592  013E' 0819'              	movf	printf@prec,w
  1593  013F' 0088'              	movwf	??_printf
  1594  0140' 0189'              	clrf	??_printf+1
  1595  0141' 1B88'              	btfsc	??_printf,7
  1596  0142' 0389'              	decf	??_printf+1,f
  1597  0143' 0809'              	movf	??_printf+1,w
  1598  0144' 3A80               	xorlw	128
  1599  0145' 008A'              	movwf	??_printf+2
  1600  0146' 0814'              	movf	printf@len+1,w
  1601  0147' 3A80               	xorlw	128
  1602  0148' 020A'              	subwf	??_printf+2,w
  1603  0149' 1D03               	skipz
  1604  014A' 2800'              	goto	u1645
  1605  014B' 0813'              	movf	printf@len,w
  1606  014C' 0208'              	subwf	??_printf,w
  1607  014D'                    u1645:
  1608  014D' 1803               	skipnc
  1609  014E' 2800'              	goto	u1641
  1610  014F' 2800'              	goto	u1640
  1611  0150'                    u1641:
  1612  0150' 2800'              	goto	l274
  1613  0151'                    u1640:
  1614  0151'                    l1877:
  1615                           
  1616                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 780:     len = (u
      +                          nsigned char)prec;
  1617  0151' 1283               	bcf	3,5	;RP0=0, select bank0
  1618  0152' 1303               	bcf	3,6	;RP1=0, select bank0
  1619  0153' 0819'              	movf	printf@prec,w
  1620  0154' 0088'              	movwf	??_printf
  1621  0155' 0189'              	clrf	??_printf+1
  1622  0156' 0808'              	movf	??_printf,w
  1623  0157' 0093'              	movwf	printf@len
  1624  0158' 0809'              	movf	??_printf+1,w
  1625  0159' 0094'              	movwf	printf@len+1
  1626  015A'                    l274:
  1627                           
  1628                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 783:    if(((unsi
      +                          gned)width) > len)
  1629  015A' 1283               	bcf	3,5	;RP0=0, select bank0
  1630  015B' 1303               	bcf	3,6	;RP1=0, select bank0
  1631  015C' 081B'              	movf	printf@width+1,w
  1632  015D' 0214'              	subwf	printf@len+1,w
  1633  015E' 1D03               	skipz
  1634  015F' 2800'              	goto	u1655
  1635  0160' 081A'              	movf	printf@width,w
  1636  0161' 0213'              	subwf	printf@len,w
  1637  0162'                    u1655:
  1638  0162' 1803               	skipnc
  1639  0163' 2800'              	goto	u1651
  1640  0164' 2800'              	goto	u1650
  1641  0165'                    u1651:
  1642  0165' 2800'              	goto	l1881
  1643  0166'                    u1650:
  1644  0166'                    l1879:
  1645                           
  1646                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 784:     width -=
      +                           len;
  1647  0166' 0813'              	movf	printf@len,w
  1648  0167' 029A'              	subwf	printf@width,f
  1649  0168' 0814'              	movf	printf@len+1,w
  1650  0169' 1C03               	skipc
  1651  016A' 039B'              	decf	printf@width+1,f
  1652  016B' 029B'              	subwf	printf@width+1,f
  1653  016C' 2800'              	goto	l1883
  1654  016D'                    l1881:
  1655                           
  1656                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 786:     width = 
      +                          0;
  1657  016D' 019A'              	clrf	printf@width
  1658  016E' 019B'              	clrf	printf@width+1
  1659  016F'                    l1883:
  1660                           
  1661                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 788:    if(!(flag
      +                           & 0x08))
  1662  016F' 199D'              	btfsc	printf@flag,3
  1663  0170' 2800'              	goto	u1661
  1664  0171' 2800'              	goto	u1660
  1665  0172'                    u1661:
  1666  0172' 2800'              	goto	l1895
  1667  0173'                    u1660:
  1668  0173' 2800'              	goto	l1889
  1669  0174'                    l1887:
  1670                           
  1671                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 791:      (putch(
      +                          ' ') );
  1672  0174' 3020               	movlw	32
  1673  0175' 120A' 118A' 2000' 120A' 118A' 	fcall	_putch
  1674  017A'                    l1889:
  1675                           
  1676                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 790:     while(wi
      +                          dth--)
  1677  017A' 30FF               	movlw	255
  1678  017B' 1283               	bcf	3,5	;RP0=0, select bank0
  1679  017C' 1303               	bcf	3,6	;RP1=0, select bank0
  1680  017D' 079A'              	addwf	printf@width,f
  1681  017E' 1803               	skipnc
  1682  017F' 0A9B'              	incf	printf@width+1,f
  1683  0180' 30FF               	movlw	255
  1684  0181' 079B'              	addwf	printf@width+1,f
  1685  0182' 0A1A'              	incf	printf@width,w
  1686  0183' 1D03               	skipz
  1687  0184' 2800'              	goto	u1671
  1688  0185' 0A1B'              	incf	printf@width+1,w
  1689  0186' 1D03               	btfss	3,2
  1690  0187' 2800'              	goto	u1671
  1691  0188' 2800'              	goto	u1670
  1692  0189'                    u1671:
  1693  0189' 2800'              	goto	l1887
  1694  018A'                    u1670:
  1695  018A' 2800'              	goto	l1895
  1696  018B'                    l1891:
  1697                           
  1698                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 794:     (putch(*
      +                          cp++) );
  1699  018B' 0812'              	movf	printf@cp+1,w
  1700  018C' 00FF               	movwf	btemp+1
  1701  018D' 0811'              	movf	printf@cp,w
  1702  018E' 0084               	movwf	4
  1703  018F' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  1704  0194' 120A' 118A' 2000' 120A' 118A' 	fcall	_putch
  1705  0199'                    l1893:
  1706  0199' 3001               	movlw	1
  1707  019A' 1283               	bcf	3,5	;RP0=0, select bank0
  1708  019B' 1303               	bcf	3,6	;RP1=0, select bank0
  1709  019C' 0791'              	addwf	printf@cp,f
  1710  019D' 1803               	skipnc
  1711  019E' 0A92'              	incf	printf@cp+1,f
  1712  019F' 3000               	movlw	0
  1713  01A0' 0792'              	addwf	printf@cp+1,f
  1714  01A1'                    l1895:
  1715                           
  1716                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 793:    while(len
      +                          --)
  1717  01A1' 3001               	movlw	1
  1718  01A2' 0293'              	subwf	printf@len,f
  1719  01A3' 3000               	movlw	0
  1720  01A4' 1C03               	skipc
  1721  01A5' 0394'              	decf	printf@len+1,f
  1722  01A6' 0294'              	subwf	printf@len+1,f
  1723  01A7' 0A13'              	incf	printf@len,w
  1724  01A8' 1D03               	skipz
  1725  01A9' 2800'              	goto	u1681
  1726  01AA' 0A14'              	incf	printf@len+1,w
  1727  01AB' 1D03               	btfss	3,2
  1728  01AC' 2800'              	goto	u1681
  1729  01AD' 2800'              	goto	u1680
  1730  01AE'                    u1681:
  1731  01AE' 2800'              	goto	l1891
  1732  01AF'                    u1680:
  1733  01AF'                    l283:
  1734                           
  1735                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 796:    if(flag &
      +                           0x08)
  1736  01AF' 1D9D'              	btfss	printf@flag,3
  1737  01B0' 2800'              	goto	u1691
  1738  01B1' 2800'              	goto	u1690
  1739  01B2'                    u1691:
  1740  01B2' 2800'              	goto	l2099
  1741  01B3'                    u1690:
  1742  01B3' 2800'              	goto	l1901
  1743  01B4'                    l1899:
  1744                           
  1745                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 798:      (putch(
      +                          ' ') );
  1746  01B4' 3020               	movlw	32
  1747  01B5' 120A' 118A' 2000' 120A' 118A' 	fcall	_putch
  1748  01BA'                    l1901:
  1749                           
  1750                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 797:     while(wi
      +                          dth--)
  1751  01BA' 30FF               	movlw	255
  1752  01BB' 1283               	bcf	3,5	;RP0=0, select bank0
  1753  01BC' 1303               	bcf	3,6	;RP1=0, select bank0
  1754  01BD' 079A'              	addwf	printf@width,f
  1755  01BE' 1803               	skipnc
  1756  01BF' 0A9B'              	incf	printf@width+1,f
  1757  01C0' 30FF               	movlw	255
  1758  01C1' 079B'              	addwf	printf@width+1,f
  1759  01C2' 0A1A'              	incf	printf@width,w
  1760  01C3' 1D03               	skipz
  1761  01C4' 2800'              	goto	u1701
  1762  01C5' 0A1B'              	incf	printf@width+1,w
  1763  01C6' 1D03               	btfss	3,2
  1764  01C7' 2800'              	goto	u1701
  1765  01C8' 2800'              	goto	u1700
  1766  01C9'                    u1701:
  1767  01C9' 2800'              	goto	l1899
  1768  01CA'                    u1700:
  1769  01CA' 2800'              	goto	l2099
  1770  01CB'                    l1903:
  1771                           
  1772                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 825:    c = (char
      +                          )(*(int *)__va_arg((*(int **)ap), (int)0));
  1773  01CB' 0815'              	movf	printf@ap,w
  1774  01CC' 0084               	movwf	4
  1775  01CD' 0800               	movf	0,w
  1776  01CE' 0088'              	movwf	??_printf
  1777  01CF' 0808'              	movf	??_printf,w
  1778  01D0' 009C'              	movwf	printf@c
  1779  01D1'                    l1905:
  1780  01D1' 3002               	movlw	2
  1781  01D2' 0088'              	movwf	??_printf
  1782  01D3' 0808'              	movf	??_printf,w
  1783  01D4' 0795'              	addwf	printf@ap,f
  1784  01D5'                    l1907:
  1785                           
  1786                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 831:    cp = (cha
      +                          r *)&c;
  1787  01D5' 3000'              	movlw	(low (printf@c| 0))& (0+255)
  1788  01D6' 0091'              	movwf	printf@cp
  1789  01D7' 3000               	movlw	0
  1790  01D8' 0092'              	movwf	printf@cp+1
  1791  01D9'                    l1909:
  1792                           
  1793                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 832:    len = 1;
  1794  01D9' 3001               	movlw	1
  1795  01DA' 0093'              	movwf	printf@len
  1796  01DB' 3000               	movlw	0
  1797  01DC' 0094'              	movwf	printf@len+1
  1798                           
  1799                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 833:    goto dost
      +                          ring;
  1800  01DD' 2800'              	goto	l1873
  1801  01DE'                    l1911:
  1802                           
  1803                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          xC0;
  1804  01DE' 30C0               	movlw	192
  1805  01DF' 049D'              	iorwf	printf@flag,f
  1806  01E0' 3000               	movlw	0
  1807  01E1' 049E'              	iorwf	printf@flag+1,f
  1808                           
  1809                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 845:    break;
  1810  01E2' 2800'              	goto	l1917
  1811  01E3'                    l1915:
  1812  01E3' 1283               	bcf	3,5	;RP0=0, select bank0
  1813  01E4' 1303               	bcf	3,6	;RP1=0, select bank0
  1814  01E5' 0818'              	movf	printf@f,w
  1815  01E6' 0084               	movwf	4
  1816  01E7' 3001               	movlw	1
  1817  01E8' 0798'              	addwf	printf@f,f
  1818  01E9' 1383               	bcf	3,7	;select IRP bank0
  1819  01EA' 0800               	movf	0,w
  1820  01EB' 009C'              	movwf	printf@c
  1821  01EC' 0088'              	movwf	??_printf
  1822  01ED' 0189'              	clrf	??_printf+1
  1823                           
  1824                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1825                           ; Switch size 1, requested type "simple"
  1826                           ; Number of cases is 1, Range of values is 0 to 0
  1827                           ; switch strategies available:
  1828                           ; Name         Instructions Cycles
  1829                           ; simple_byte            4     3 (average)
  1830                           ; direct_byte           11     8 (fixed)
  1831                           ; jumptable            260     6 (fixed)
  1832                           ;	Chosen strategy is simple_byte
  1833  01EE' 0809'              	movf	??_printf+1,w
  1834  01EF' 3A00               	xorlw	0	; case 0
  1835  01F0' 1903               	skipnz
  1836  01F1' 2800'              	goto	l2361
  1837  01F2' 2800'              	goto	l1907
  1838  01F3'                    l2361:
  1839                           
  1840                           ; Switch size 1, requested type "simple"
  1841                           ; Number of cases is 10, Range of values is 0 to 120
  1842                           ; switch strategies available:
  1843                           ; Name         Instructions Cycles
  1844                           ; simple_byte           31    16 (average)
  1845                           ; jumptable            260     6 (fixed)
  1846                           ;	Chosen strategy is simple_byte
  1847  01F3' 0808'              	movf	??_printf,w
  1848  01F4' 3A00               	xorlw	0	; case 0
  1849  01F5' 1903               	skipnz
  1850  01F6' 2800'              	goto	l369
  1851  01F7' 3A58               	xorlw	88	; case 88
  1852  01F8' 1903               	skipnz
  1853  01F9' 2800'              	goto	l266
  1854  01FA' 3A3B               	xorlw	59	; case 99
  1855  01FB' 1903               	skipnz
  1856  01FC' 2800'              	goto	l1903
  1857  01FD' 3A07               	xorlw	7	; case 100
  1858  01FE' 1903               	skipnz
  1859  01FF' 2800'              	goto	l1917
  1860  0200' 3A0D               	xorlw	13	; case 105
  1861  0201' 1903               	skipnz
  1862  0202' 2800'              	goto	l1917
  1863  0203' 3A06               	xorlw	6	; case 111
  1864  0204' 1903               	skipnz
  1865  0205' 2800'              	goto	l261
  1866  0206' 3A1F               	xorlw	31	; case 112
  1867  0207' 1903               	skipnz
  1868  0208' 2800'              	goto	l266
  1869  0209' 3A03               	xorlw	3	; case 115
  1870  020A' 1903               	skipnz
  1871  020B' 2800'              	goto	l1859
  1872  020C' 3A06               	xorlw	6	; case 117
  1873  020D' 1903               	skipnz
  1874  020E' 2800'              	goto	l1911
  1875  020F' 3A0D               	xorlw	13	; case 120
  1876  0210' 1903               	skipnz
  1877  0211' 2800'              	goto	l267
  1878  0212' 2800'              	goto	l1907
  1879  0213'                    l1917:
  1880                           
  1881                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1277:   if((flag 
      +                          & (0xC0)) == 0x00)
  1882  0213' 30C0               	movlw	192
  1883  0214' 051D'              	andwf	printf@flag,w
  1884  0215' 0088'              	movwf	??_printf
  1885  0216' 3000               	movlw	0
  1886  0217' 051E'              	andwf	printf@flag+1,w
  1887  0218' 0089'              	movwf	??_printf+1
  1888  0219' 0808'              	movf	??_printf,w
  1889  021A' 0409'              	iorwf	??_printf+1,w
  1890  021B' 1D03               	btfss	3,2
  1891  021C' 2800'              	goto	u1711
  1892  021D' 2800'              	goto	u1710
  1893  021E'                    u1711:
  1894  021E' 2800'              	goto	l1929
  1895  021F'                    u1710:
  1896  021F'                    l1919:
  1897                           
  1898                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1899  021F' 0815'              	movf	printf@ap,w
  1900  0220' 0084               	movwf	4
  1901  0221' 0800               	movf	0,w
  1902  0222' 0096'              	movwf	printf@val
  1903  0223' 0A84               	incf	4,f
  1904  0224' 0800               	movf	0,w
  1905  0225' 0097'              	movwf	printf@val+1
  1906  0226'                    l1921:
  1907  0226' 3002               	movlw	2
  1908  0227' 0088'              	movwf	??_printf
  1909  0228' 0808'              	movf	??_printf,w
  1910  0229' 0795'              	addwf	printf@ap,f
  1911  022A'                    l1923:
  1912                           
  1913                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1914  022A' 1F97'              	btfss	printf@val+1,7
  1915  022B' 2800'              	goto	u1721
  1916  022C' 2800'              	goto	u1720
  1917  022D'                    u1721:
  1918  022D' 2800'              	goto	l1933
  1919  022E'                    u1720:
  1920  022E'                    l1925:
  1921                           
  1922                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1923  022E' 3003               	movlw	3
  1924  022F' 049D'              	iorwf	printf@flag,f
  1925  0230' 3000               	movlw	0
  1926  0231' 049E'              	iorwf	printf@flag+1,f
  1927  0232'                    l1927:
  1928                           
  1929                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1930  0232' 0996'              	comf	printf@val,f
  1931  0233' 0997'              	comf	printf@val+1,f
  1932  0234' 0A96'              	incf	printf@val,f
  1933  0235' 1903               	skipnz
  1934  0236' 0A97'              	incf	printf@val+1,f
  1935  0237' 2800'              	goto	l1933
  1936  0238'                    l1929:
  1937                           
  1938                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1939  0238' 0815'              	movf	printf@ap,w
  1940  0239' 0084               	movwf	4
  1941  023A' 0800               	movf	0,w
  1942  023B' 0096'              	movwf	printf@val
  1943  023C' 0A84               	incf	4,f
  1944  023D' 0800               	movf	0,w
  1945  023E' 0097'              	movwf	printf@val+1
  1946  023F'                    l1931:
  1947  023F' 3002               	movlw	2
  1948  0240' 0088'              	movwf	??_printf
  1949  0241' 0808'              	movf	??_printf,w
  1950  0242' 0795'              	addwf	printf@ap,f
  1951  0243'                    l1933:
  1952                           
  1953                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
  1954  0243' 0819'              	movf	printf@prec,w
  1955  0244' 1D03               	btfss	3,2
  1956  0245' 2800'              	goto	u1731
  1957  0246' 2800'              	goto	u1730
  1958  0247'                    u1731:
  1959  0247' 2800'              	goto	l1971
  1960  0248'                    u1730:
  1961  0248'                    l1935:
  1962  0248' 0816'              	movf	printf@val,w
  1963  0249' 0417'              	iorwf	printf@val+1,w
  1964  024A' 1D03               	btfss	3,2
  1965  024B' 2800'              	goto	u1741
  1966  024C' 2800'              	goto	u1740
  1967  024D'                    u1741:
  1968  024D' 2800'              	goto	l1971
  1969  024E'                    u1740:
  1970  024E'                    l1937:
  1971                           
  1972                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  1973  024E' 3001               	movlw	1
  1974  024F' 0088'              	movwf	??_printf
  1975  0250' 0808'              	movf	??_printf,w
  1976  0251' 0799'              	addwf	printf@prec,f
  1977  0252' 2800'              	goto	l1971
  1978  0253'                    l297:	
  1979                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1328:   case 0xC0
      +                          :
  1980                           
  1981                           
  1982                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1983  0253' 019C'              	clrf	printf@c
  1984  0254' 0A9C'              	incf	printf@c,f
  1985  0255'                    l1939:
  1986  0255' 3005               	movlw	5
  1987  0256' 061C'              	xorwf	printf@c,w
  1988  0257' 1D03               	btfss	3,2
  1989  0258' 2800'              	goto	u1751
  1990  0259' 2800'              	goto	u1750
  1991  025A'                    u1751:
  1992  025A' 2800'              	goto	l1943
  1993  025B'                    u1750:
  1994  025B' 2800'              	goto	l1973
  1995  025C'                    l1943:
  1996                           
  1997                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1998  025C' 081C'              	movf	printf@c,w
  1999  025D' 0088'              	movwf	??_printf
  2000  025E' 0708'              	addwf	??_printf,w
  2001  025F' 3E0D               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2002  0260' 0084               	movwf	4
  2003  0261' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2004  0266' 0089'              	movwf	??_printf+1
  2005  0267' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2006  026C' 008A'              	movwf	??_printf+2
  2007  026D' 080A'              	movf	??_printf+2,w
  2008  026E' 0217'              	subwf	printf@val+1,w
  2009  026F' 1D03               	skipz
  2010  0270' 2800'              	goto	u1765
  2011  0271' 0809'              	movf	??_printf+1,w
  2012  0272' 0216'              	subwf	printf@val,w
  2013  0273'                    u1765:
  2014  0273' 1803               	skipnc
  2015  0274' 2800'              	goto	u1761
  2016  0275' 2800'              	goto	u1760
  2017  0276'                    u1761:
  2018  0276' 2800'              	goto	l1947
  2019  0277'                    u1760:
  2020  0277' 2800'              	goto	l1973
  2021  0278'                    l1947:
  2022  0278' 3001               	movlw	1
  2023  0279' 0088'              	movwf	??_printf
  2024  027A' 0808'              	movf	??_printf,w
  2025  027B' 079C'              	addwf	printf@c,f
  2026  027C' 3005               	movlw	5
  2027  027D' 061C'              	xorwf	printf@c,w
  2028  027E' 1D03               	btfss	3,2
  2029  027F' 2800'              	goto	u1771
  2030  0280' 2800'              	goto	u1770
  2031  0281'                    u1771:
  2032  0281' 2800'              	goto	l1943
  2033  0282'                    u1770:
  2034  0282' 2800'              	goto	l1973
  2035  0283'                    l302:	
  2036                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1340:   case 0x80
      +                          :
  2037                           
  2038                           
  2039                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1342:    for(c = 
      +                          1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  2040  0283' 019C'              	clrf	printf@c
  2041  0284' 0A9C'              	incf	printf@c,f
  2042  0285'                    l1949:
  2043  0285' 3004               	movlw	4
  2044  0286' 061C'              	xorwf	printf@c,w
  2045  0287' 1D03               	btfss	3,2
  2046  0288' 2800'              	goto	u1781
  2047  0289' 2800'              	goto	u1780
  2048  028A'                    u1781:
  2049  028A' 2800'              	goto	l1953
  2050  028B'                    u1780:
  2051  028B' 2800'              	goto	l1973
  2052  028C'                    l1953:
  2053                           
  2054                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1343:     if(val 
      +                          < hexpowers[c])
  2055  028C' 081C'              	movf	printf@c,w
  2056  028D' 0088'              	movwf	??_printf
  2057  028E' 0708'              	addwf	??_printf,w
  2058  028F' 3E17               	addlw	low ((_hexpowers-__stringbase)| (0+32768))
  2059  0290' 0084               	movwf	4
  2060  0291' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2061  0296' 0089'              	movwf	??_printf+1
  2062  0297' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2063  029C' 008A'              	movwf	??_printf+2
  2064  029D' 080A'              	movf	??_printf+2,w
  2065  029E' 0217'              	subwf	printf@val+1,w
  2066  029F' 1D03               	skipz
  2067  02A0' 2800'              	goto	u1795
  2068  02A1' 0809'              	movf	??_printf+1,w
  2069  02A2' 0216'              	subwf	printf@val,w
  2070  02A3'                    u1795:
  2071  02A3' 1803               	skipnc
  2072  02A4' 2800'              	goto	u1791
  2073  02A5' 2800'              	goto	u1790
  2074  02A6'                    u1791:
  2075  02A6' 2800'              	goto	l1957
  2076  02A7'                    u1790:
  2077  02A7' 2800'              	goto	l1973
  2078  02A8'                    l1957:
  2079  02A8' 3001               	movlw	1
  2080  02A9' 0088'              	movwf	??_printf
  2081  02AA' 0808'              	movf	??_printf,w
  2082  02AB' 079C'              	addwf	printf@c,f
  2083  02AC' 3004               	movlw	4
  2084  02AD' 061C'              	xorwf	printf@c,w
  2085  02AE' 1D03               	btfss	3,2
  2086  02AF' 2800'              	goto	u1801
  2087  02B0' 2800'              	goto	u1800
  2088  02B1'                    u1801:
  2089  02B1' 2800'              	goto	l1953
  2090  02B2'                    u1800:
  2091  02B2' 2800'              	goto	l1973
  2092  02B3'                    l306:	
  2093                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1352:   case 0x40
      +                          :
  2094                           
  2095                           
  2096                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1354:    for(c = 
      +                          1 ; c != sizeof octpowers/sizeof octpowers[0] ; c++)
  2097  02B3' 019C'              	clrf	printf@c
  2098  02B4' 0A9C'              	incf	printf@c,f
  2099  02B5'                    l1959:
  2100  02B5' 3006               	movlw	6
  2101  02B6' 061C'              	xorwf	printf@c,w
  2102  02B7' 1D03               	btfss	3,2
  2103  02B8' 2800'              	goto	u1811
  2104  02B9' 2800'              	goto	u1810
  2105  02BA'                    u1811:
  2106  02BA' 2800'              	goto	l1963
  2107  02BB'                    u1810:
  2108  02BB' 2800'              	goto	l1973
  2109  02BC'                    l1963:
  2110                           
  2111                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1355:     if(val 
      +                          < octpowers[c])
  2112  02BC' 081C'              	movf	printf@c,w
  2113  02BD' 0088'              	movwf	??_printf
  2114  02BE' 0708'              	addwf	??_printf,w
  2115  02BF' 3E01               	addlw	low ((_octpowers-__stringbase)| (0+32768))
  2116  02C0' 0084               	movwf	4
  2117  02C1' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2118  02C6' 0089'              	movwf	??_printf+1
  2119  02C7' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2120  02CC' 008A'              	movwf	??_printf+2
  2121  02CD' 080A'              	movf	??_printf+2,w
  2122  02CE' 0217'              	subwf	printf@val+1,w
  2123  02CF' 1D03               	skipz
  2124  02D0' 2800'              	goto	u1825
  2125  02D1' 0809'              	movf	??_printf+1,w
  2126  02D2' 0216'              	subwf	printf@val,w
  2127  02D3'                    u1825:
  2128  02D3' 1803               	skipnc
  2129  02D4' 2800'              	goto	u1821
  2130  02D5' 2800'              	goto	u1820
  2131  02D6'                    u1821:
  2132  02D6' 2800'              	goto	l1967
  2133  02D7'                    u1820:
  2134  02D7' 2800'              	goto	l1973
  2135  02D8'                    l1967:
  2136  02D8' 3001               	movlw	1
  2137  02D9' 0088'              	movwf	??_printf
  2138  02DA' 0808'              	movf	??_printf,w
  2139  02DB' 079C'              	addwf	printf@c,f
  2140  02DC' 3006               	movlw	6
  2141  02DD' 061C'              	xorwf	printf@c,w
  2142  02DE' 1D03               	btfss	3,2
  2143  02DF' 2800'              	goto	u1831
  2144  02E0' 2800'              	goto	u1830
  2145  02E1'                    u1831:
  2146  02E1' 2800'              	goto	l1963
  2147  02E2'                    u1830:
  2148  02E2' 2800'              	goto	l1973
  2149  02E3'                    l1971:
  2150  02E3' 081D'              	movf	printf@flag,w
  2151  02E4' 39C0               	andlw	192
  2152  02E5' 0088'              	movwf	??_printf
  2153  02E6' 0189'              	clrf	??_printf+1
  2154                           
  2155                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2156                           ; Switch size 1, requested type "simple"
  2157                           ; Number of cases is 1, Range of values is 0 to 0
  2158                           ; switch strategies available:
  2159                           ; Name         Instructions Cycles
  2160                           ; simple_byte            4     3 (average)
  2161                           ; direct_byte           11     8 (fixed)
  2162                           ; jumptable            260     6 (fixed)
  2163                           ;	Chosen strategy is simple_byte
  2164  02E7' 0809'              	movf	??_printf+1,w
  2165  02E8' 3A00               	xorlw	0	; case 0
  2166  02E9' 1903               	skipnz
  2167  02EA' 2800'              	goto	l2363
  2168  02EB' 2800'              	goto	l1973
  2169  02EC'                    l2363:
  2170                           
  2171                           ; Switch size 1, requested type "simple"
  2172                           ; Number of cases is 4, Range of values is 0 to 192
  2173                           ; switch strategies available:
  2174                           ; Name         Instructions Cycles
  2175                           ; simple_byte           13     7 (average)
  2176                           ; jumptable            260     6 (fixed)
  2177                           ;	Chosen strategy is simple_byte
  2178  02EC' 0808'              	movf	??_printf,w
  2179  02ED' 3A00               	xorlw	0	; case 0
  2180  02EE' 1903               	skipnz
  2181  02EF' 2800'              	goto	l297
  2182  02F0' 3A40               	xorlw	64	; case 64
  2183  02F1' 1903               	skipnz
  2184  02F2' 2800'              	goto	l306
  2185  02F3' 3AC0               	xorlw	192	; case 128
  2186  02F4' 1903               	skipnz
  2187  02F5' 2800'              	goto	l302
  2188  02F6' 3A40               	xorlw	64	; case 192
  2189  02F7' 1903               	skipnz
  2190  02F8' 2800'              	goto	l297
  2191  02F9' 2800'              	goto	l1973
  2192  02FA'                    l1973:
  2193                           
  2194                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  2195  02FA' 0819'              	movf	printf@prec,w
  2196  02FB' 0088'              	movwf	??_printf
  2197  02FC' 0189'              	clrf	??_printf+1
  2198  02FD' 1B88'              	btfsc	??_printf,7
  2199  02FE' 0389'              	decf	??_printf+1,f
  2200  02FF' 0809'              	movf	??_printf+1,w
  2201  0300' 3A80               	xorlw	128
  2202  0301' 3C80               	sublw	128
  2203  0302' 1D03               	skipz
  2204  0303' 2800'              	goto	u1845
  2205  0304' 0808'              	movf	??_printf,w
  2206  0305' 021C'              	subwf	printf@c,w
  2207  0306'                    u1845:
  2208  0306' 1803               	skipnc
  2209  0307' 2800'              	goto	u1841
  2210  0308' 2800'              	goto	u1840
  2211  0309'                    u1841:
  2212  0309' 2800'              	goto	l1977
  2213  030A'                    u1840:
  2214  030A'                    l1975:
  2215                           
  2216                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
  2217  030A' 1283               	bcf	3,5	;RP0=0, select bank0
  2218  030B' 1303               	bcf	3,6	;RP1=0, select bank0
  2219  030C' 0819'              	movf	printf@prec,w
  2220  030D' 0088'              	movwf	??_printf
  2221  030E' 0808'              	movf	??_printf,w
  2222  030F' 009C'              	movwf	printf@c
  2223  0310' 2800'              	goto	l1981
  2224  0311'                    l1977:
  2225  0311' 1283               	bcf	3,5	;RP0=0, select bank0
  2226  0312' 1303               	bcf	3,6	;RP1=0, select bank0
  2227  0313' 0819'              	movf	printf@prec,w
  2228  0314' 0088'              	movwf	??_printf
  2229  0315' 0189'              	clrf	??_printf+1
  2230  0316' 1B88'              	btfsc	??_printf,7
  2231  0317' 0389'              	decf	??_printf+1,f
  2232  0318' 0809'              	movf	??_printf+1,w
  2233  0319' 3A80               	xorlw	128
  2234  031A' 008A'              	movwf	??_printf+2
  2235  031B' 3080               	movlw	128
  2236  031C' 020A'              	subwf	??_printf+2,w
  2237  031D' 1D03               	skipz
  2238  031E' 2800'              	goto	u1855
  2239  031F' 081C'              	movf	printf@c,w
  2240  0320' 0208'              	subwf	??_printf,w
  2241  0321'                    u1855:
  2242  0321' 1803               	skipnc
  2243  0322' 2800'              	goto	u1851
  2244  0323' 2800'              	goto	u1850
  2245  0324'                    u1851:
  2246  0324' 2800'              	goto	l1981
  2247  0325'                    u1850:
  2248  0325'                    l1979:
  2249                           
  2250                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
  2251  0325' 1283               	bcf	3,5	;RP0=0, select bank0
  2252  0326' 1303               	bcf	3,6	;RP1=0, select bank0
  2253  0327' 081C'              	movf	printf@c,w
  2254  0328' 0088'              	movwf	??_printf
  2255  0329' 0808'              	movf	??_printf,w
  2256  032A' 0099'              	movwf	printf@prec
  2257  032B'                    l1981:
  2258                           
  2259                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
  2260  032B' 1283               	bcf	3,5	;RP0=0, select bank0
  2261  032C' 1303               	bcf	3,6	;RP1=0, select bank0
  2262  032D' 081A'              	movf	printf@width,w
  2263  032E' 041B'              	iorwf	printf@width+1,w
  2264  032F' 1903               	btfsc	3,2
  2265  0330' 2800'              	goto	u1861
  2266  0331' 2800'              	goto	u1860
  2267  0332'                    u1861:
  2268  0332' 2800'              	goto	l1987
  2269  0333'                    u1860:
  2270  0333'                    l1983:
  2271  0333' 3003               	movlw	3
  2272  0334' 051D'              	andwf	printf@flag,w
  2273  0335' 0088'              	movwf	??_printf
  2274  0336' 3000               	movlw	0
  2275  0337' 051E'              	andwf	printf@flag+1,w
  2276  0338' 0089'              	movwf	??_printf+1
  2277  0339' 0808'              	movf	??_printf,w
  2278  033A' 0409'              	iorwf	??_printf+1,w
  2279  033B' 1903               	btfsc	3,2
  2280  033C' 2800'              	goto	u1871
  2281  033D' 2800'              	goto	u1870
  2282  033E'                    u1871:
  2283  033E' 2800'              	goto	l1987
  2284  033F'                    u1870:
  2285  033F'                    l1985:
  2286                           
  2287                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1372:    width--;
  2288  033F' 30FF               	movlw	255
  2289  0340' 079A'              	addwf	printf@width,f
  2290  0341' 1803               	skipnc
  2291  0342' 0A9B'              	incf	printf@width+1,f
  2292  0343' 30FF               	movlw	255
  2293  0344' 079B'              	addwf	printf@width+1,f
  2294  0345'                    l1987:
  2295                           
  2296                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1374:   if(flag &
      +                           0x4000) {
  2297  0345' 1F1E'              	btfss	printf@flag+1,6
  2298  0346' 2800'              	goto	u1881
  2299  0347' 2800'              	goto	u1880
  2300  0348'                    u1881:
  2301  0348' 2800'              	goto	l1995
  2302  0349'                    u1880:
  2303  0349'                    l1989:
  2304                           
  2305                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1375:    if(width
      +                           > prec)
  2306  0349' 0819'              	movf	printf@prec,w
  2307  034A' 0088'              	movwf	??_printf
  2308  034B' 0189'              	clrf	??_printf+1
  2309  034C' 1B88'              	btfsc	??_printf,7
  2310  034D' 0389'              	decf	??_printf+1,f
  2311  034E' 0809'              	movf	??_printf+1,w
  2312  034F' 3A80               	xorlw	128
  2313  0350' 008A'              	movwf	??_printf+2
  2314  0351' 081B'              	movf	printf@width+1,w
  2315  0352' 3A80               	xorlw	128
  2316  0353' 020A'              	subwf	??_printf+2,w
  2317  0354' 1D03               	skipz
  2318  0355' 2800'              	goto	u1895
  2319  0356' 081A'              	movf	printf@width,w
  2320  0357' 0208'              	subwf	??_printf,w
  2321  0358'                    u1895:
  2322  0358' 1803               	skipnc
  2323  0359' 2800'              	goto	u1891
  2324  035A' 2800'              	goto	u1890
  2325  035B'                    u1891:
  2326  035B' 2800'              	goto	l1993
  2327  035C'                    u1890:
  2328  035C'                    l1991:
  2329                           
  2330                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1376:     width -
      +                          = prec;
  2331  035C' 1283               	bcf	3,5	;RP0=0, select bank0
  2332  035D' 1303               	bcf	3,6	;RP1=0, select bank0
  2333  035E' 0819'              	movf	printf@prec,w
  2334  035F' 0088'              	movwf	??_printf
  2335  0360' 0189'              	clrf	??_printf+1
  2336  0361' 1B88'              	btfsc	??_printf,7
  2337  0362' 0389'              	decf	??_printf+1,f
  2338  0363' 0808'              	movf	??_printf,w
  2339  0364' 029A'              	subwf	printf@width,f
  2340  0365' 0809'              	movf	??_printf+1,w
  2341  0366' 1C03               	skipc
  2342  0367' 039B'              	decf	printf@width+1,f
  2343  0368' 029B'              	subwf	printf@width+1,f
  2344  0369' 2800'              	goto	l1995
  2345  036A'                    l1993:
  2346                           
  2347                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1378:     width =
      +                           0;
  2348  036A' 1283               	bcf	3,5	;RP0=0, select bank0
  2349  036B' 1303               	bcf	3,6	;RP1=0, select bank0
  2350  036C' 019A'              	clrf	printf@width
  2351  036D' 019B'              	clrf	printf@width+1
  2352  036E'                    l1995:
  2353                           
  2354                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1383:   if((flag 
      +                          & (
  2355  036E' 30C4               	movlw	196
  2356  036F' 051D'              	andwf	printf@flag,w
  2357  0370' 0088'              	movwf	??_printf
  2358  0371' 3008               	movlw	8
  2359  0372' 051E'              	andwf	printf@flag+1,w
  2360  0373' 0089'              	movwf	??_printf+1
  2361  0374' 3040               	movlw	64
  2362  0375' 0608'              	xorwf	??_printf,w
  2363  0376' 3008               	movlw	8
  2364  0377' 1903               	skipnz
  2365  0378' 0609'              	xorwf	??_printf+1,w
  2366  0379' 1D03               	btfss	3,2
  2367  037A' 2800'              	goto	u1901
  2368  037B' 2800'              	goto	u1900
  2369  037C'                    u1901:
  2370  037C' 2800'              	goto	l2001
  2371  037D'                    u1900:
  2372  037D'                    l1997:
  2373                           
  2374                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1387:        (0xC
      +                          0)|0x800)) == (0x40|0x800)) {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\commo
      +                          n\doprnt.c: 1388:    if(width)
  2375  037D' 081A'              	movf	printf@width,w
  2376  037E' 041B'              	iorwf	printf@width+1,w
  2377  037F' 1903               	btfsc	3,2
  2378  0380' 2800'              	goto	u1911
  2379  0381' 2800'              	goto	u1910
  2380  0382'                    u1911:
  2381  0382' 2800'              	goto	l2009
  2382  0383'                    u1910:
  2383  0383'                    l1999:
  2384                           
  2385                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1389:     width--
      +                          ;
  2386  0383' 30FF               	movlw	255
  2387  0384' 079A'              	addwf	printf@width,f
  2388  0385' 1803               	skipnc
  2389  0386' 0A9B'              	incf	printf@width+1,f
  2390  0387' 30FF               	movlw	255
  2391  0388' 079B'              	addwf	printf@width+1,f
  2392  0389' 2800'              	goto	l2009
  2393  038A'                    l2001:
  2394                           
  2395                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1394:   if((flag 
      +                          & ((0xC0)|0x800)) == (0x80|0x800)) {
  2396  038A' 30C0               	movlw	192
  2397  038B' 051D'              	andwf	printf@flag,w
  2398  038C' 0088'              	movwf	??_printf
  2399  038D' 3008               	movlw	8
  2400  038E' 051E'              	andwf	printf@flag+1,w
  2401  038F' 0089'              	movwf	??_printf+1
  2402  0390' 3080               	movlw	128
  2403  0391' 0608'              	xorwf	??_printf,w
  2404  0392' 3008               	movlw	8
  2405  0393' 1903               	skipnz
  2406  0394' 0609'              	xorwf	??_printf+1,w
  2407  0395' 1D03               	btfss	3,2
  2408  0396' 2800'              	goto	u1921
  2409  0397' 2800'              	goto	u1920
  2410  0398'                    u1921:
  2411  0398' 2800'              	goto	l2009
  2412  0399'                    u1920:
  2413  0399'                    l2003:
  2414                           
  2415                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1398:    if(width
      +                           > 2)
  2416  0399' 081B'              	movf	printf@width+1,w
  2417  039A' 3A80               	xorlw	128
  2418  039B' 00FF               	movwf	btemp+1
  2419  039C' 3080               	movlw	128
  2420  039D' 027F               	subwf	btemp+1,w
  2421  039E' 1D03               	skipz
  2422  039F' 2800'              	goto	u1935
  2423  03A0' 3003               	movlw	3
  2424  03A1' 021A'              	subwf	printf@width,w
  2425  03A2'                    u1935:
  2426  03A2' 1C03               	skipc
  2427  03A3' 2800'              	goto	u1931
  2428  03A4' 2800'              	goto	u1930
  2429  03A5'                    u1931:
  2430  03A5' 2800'              	goto	l2007
  2431  03A6'                    u1930:
  2432  03A6'                    l2005:
  2433                           
  2434                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1399:     width -
      +                          = 2;
  2435  03A6' 30FE               	movlw	254
  2436  03A7' 1283               	bcf	3,5	;RP0=0, select bank0
  2437  03A8' 1303               	bcf	3,6	;RP1=0, select bank0
  2438  03A9' 079A'              	addwf	printf@width,f
  2439  03AA' 1803               	skipnc
  2440  03AB' 0A9B'              	incf	printf@width+1,f
  2441  03AC' 30FF               	movlw	255
  2442  03AD' 079B'              	addwf	printf@width+1,f
  2443  03AE' 2800'              	goto	l2009
  2444  03AF'                    l2007:
  2445                           
  2446                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1401:     width =
      +                           0;
  2447  03AF' 1283               	bcf	3,5	;RP0=0, select bank0
  2448  03B0' 1303               	bcf	3,6	;RP1=0, select bank0
  2449  03B1' 019A'              	clrf	printf@width
  2450  03B2' 019B'              	clrf	printf@width+1
  2451  03B3'                    l2009:
  2452                           
  2453                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  2454  03B3' 081B'              	movf	printf@width+1,w
  2455  03B4' 3A80               	xorlw	128
  2456  03B5' 3C80               	sublw	128
  2457  03B6' 1D03               	skipz
  2458  03B7' 2800'              	goto	u1945
  2459  03B8' 081A'              	movf	printf@width,w
  2460  03B9' 021C'              	subwf	printf@c,w
  2461  03BA'                    u1945:
  2462  03BA' 1803               	skipnc
  2463  03BB' 2800'              	goto	u1941
  2464  03BC' 2800'              	goto	u1940
  2465  03BD'                    u1941:
  2466  03BD' 2800'              	goto	l2013
  2467  03BE'                    u1940:
  2468  03BE'                    l2011:
  2469                           
  2470                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  2471  03BE' 1283               	bcf	3,5	;RP0=0, select bank0
  2472  03BF' 1303               	bcf	3,6	;RP1=0, select bank0
  2473  03C0' 081C'              	movf	printf@c,w
  2474  03C1' 0088'              	movwf	??_printf
  2475  03C2' 0189'              	clrf	??_printf+1
  2476  03C3' 0808'              	movf	??_printf,w
  2477  03C4' 029A'              	subwf	printf@width,f
  2478  03C5' 0809'              	movf	??_printf+1,w
  2479  03C6' 1C03               	skipc
  2480  03C7' 039B'              	decf	printf@width+1,f
  2481  03C8' 029B'              	subwf	printf@width+1,f
  2482  03C9' 2800'              	goto	l2015
  2483  03CA'                    l2013:
  2484                           
  2485                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  2486  03CA' 1283               	bcf	3,5	;RP0=0, select bank0
  2487  03CB' 1303               	bcf	3,6	;RP1=0, select bank0
  2488  03CC' 019A'              	clrf	printf@width
  2489  03CD' 019B'              	clrf	printf@width+1
  2490  03CE'                    l2015:
  2491                           
  2492                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1413:   if(flag &
      +                           0x04) {
  2493  03CE' 1D1D'              	btfss	printf@flag,2
  2494  03CF' 2800'              	goto	u1951
  2495  03D0' 2800'              	goto	u1950
  2496  03D1'                    u1951:
  2497  03D1' 2800'              	goto	l2041
  2498  03D2'                    u1950:
  2499  03D2'                    l2017:
  2500                           
  2501                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1418:    if(flag 
      +                          & 0x03)
  2502  03D2' 3003               	movlw	3
  2503  03D3' 051D'              	andwf	printf@flag,w
  2504  03D4' 0088'              	movwf	??_printf
  2505  03D5' 3000               	movlw	0
  2506  03D6' 051E'              	andwf	printf@flag+1,w
  2507  03D7' 0089'              	movwf	??_printf+1
  2508  03D8' 0808'              	movf	??_printf,w
  2509  03D9' 0409'              	iorwf	??_printf+1,w
  2510  03DA' 1903               	btfsc	3,2
  2511  03DB' 2800'              	goto	u1961
  2512  03DC' 2800'              	goto	u1960
  2513  03DD'                    u1961:
  2514  03DD' 2800'              	goto	l326
  2515  03DE'                    u1960:
  2516  03DE'                    l2019:
  2517                           
  2518                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1419:     (putch(
      +                          '-') );
  2519  03DE' 302D               	movlw	45
  2520  03DF' 120A' 118A' 2000' 120A' 118A' 	fcall	_putch
  2521  03E4' 2800'              	goto	l2035
  2522  03E5'                    l326:	
  2523                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1422:    else
  2524                           
  2525                           
  2526                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1425:    if(flag 
      +                          & 0x01)
  2527  03E5' 1C1D'              	btfss	printf@flag,0
  2528  03E6' 2800'              	goto	u1971
  2529  03E7' 2800'              	goto	u1970
  2530  03E8'                    u1971:
  2531  03E8' 2800'              	goto	l2023
  2532  03E9'                    u1970:
  2533  03E9'                    l2021:
  2534                           
  2535                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1426:     (putch(
      +                          ' ') );
  2536  03E9' 3020               	movlw	32
  2537  03EA' 120A' 118A' 2000' 120A' 118A' 	fcall	_putch
  2538  03EF' 2800'              	goto	l2035
  2539  03F0'                    l2023:
  2540  03F0' 30C0               	movlw	192
  2541  03F1' 051D'              	andwf	printf@flag,w
  2542  03F2' 0088'              	movwf	??_printf
  2543  03F3' 3008               	movlw	8
  2544  03F4' 051E'              	andwf	printf@flag+1,w
  2545  03F5' 0089'              	movwf	??_printf+1
  2546  03F6' 3080               	movlw	128
  2547  03F7' 0608'              	xorwf	??_printf,w
  2548  03F8' 3008               	movlw	8
  2549  03F9' 1903               	skipnz
  2550  03FA' 0609'              	xorwf	??_printf+1,w
  2551  03FB' 1D03               	btfss	3,2
  2552  03FC' 2800'              	goto	u1981
  2553  03FD' 2800'              	goto	u1980
  2554  03FE'                    u1981:
  2555  03FE' 2800'              	goto	l2035
  2556  03FF'                    u1980:
  2557  03FF'                    l2025:
  2558                           
  2559                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1430:     (putch(
      +                          '0') );
  2560  03FF' 3030               	movlw	48
  2561  0400' 120A' 118A' 2000' 120A' 118A' 	fcall	_putch
  2562  0405'                    l2027:
  2563                           
  2564                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1432:     (putch(
      +                          flag & 0x20 ? 'X' : 'x') );
  2565  0405' 1283               	bcf	3,5	;RP0=0, select bank0
  2566  0406' 1303               	bcf	3,6	;RP1=0, select bank0
  2567  0407' 1A9D'              	btfsc	printf@flag,5
  2568  0408' 2800'              	goto	u1991
  2569  0409' 2800'              	goto	u1990
  2570  040A'                    u1991:
  2571  040A' 2800'              	goto	l2031
  2572  040B'                    u1990:
  2573  040B'                    l2029:
  2574  040B' 3078               	movlw	120
  2575  040C' 008B'              	movwf	_printf$323
  2576  040D' 3000               	movlw	0
  2577  040E' 008C'              	movwf	_printf$323+1
  2578  040F' 2800'              	goto	l2033
  2579  0410'                    l2031:
  2580  0410' 3058               	movlw	88
  2581  0411' 008B'              	movwf	_printf$323
  2582  0412' 3000               	movlw	0
  2583  0413' 008C'              	movwf	_printf$323+1
  2584  0414'                    l2033:
  2585  0414' 080B'              	movf	_printf$323,w
  2586  0415' 120A' 118A' 2000' 120A' 118A' 	fcall	_putch
  2587  041A'                    l2035:
  2588                           
  2589                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1441:    if(width
      +                          )
  2590  041A' 1283               	bcf	3,5	;RP0=0, select bank0
  2591  041B' 1303               	bcf	3,6	;RP1=0, select bank0
  2592  041C' 081A'              	movf	printf@width,w
  2593  041D' 041B'              	iorwf	printf@width+1,w
  2594  041E' 1903               	btfsc	3,2
  2595  041F' 2800'              	goto	u2001
  2596  0420' 2800'              	goto	u2000
  2597  0421'                    u2001:
  2598  0421' 2800'              	goto	l2091
  2599  0422'                    u2000:
  2600  0422'                    l2037:
  2601                           
  2602                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1443:      (putch
      +                          ('0') );
  2603  0422' 3030               	movlw	48
  2604  0423' 120A' 118A' 2000' 120A' 118A' 	fcall	_putch
  2605  0428'                    l2039:
  2606  0428' 30FF               	movlw	255
  2607  0429' 1283               	bcf	3,5	;RP0=0, select bank0
  2608  042A' 1303               	bcf	3,6	;RP1=0, select bank0
  2609  042B' 079A'              	addwf	printf@width,f
  2610  042C' 1803               	skipnc
  2611  042D' 0A9B'              	incf	printf@width+1,f
  2612  042E' 30FF               	movlw	255
  2613  042F' 079B'              	addwf	printf@width+1,f
  2614  0430' 081A'              	movf	printf@width,w
  2615  0431' 041B'              	iorwf	printf@width+1,w
  2616  0432' 1D03               	btfss	3,2
  2617  0433' 2800'              	goto	u2011
  2618  0434' 2800'              	goto	u2010
  2619  0435'                    u2011:
  2620  0435' 2800'              	goto	l2037
  2621  0436'                    u2010:
  2622  0436' 2800'              	goto	l2091
  2623  0437'                    l2041:
  2624                           
  2625                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1450:    if(width
  2626  0437' 081A'              	movf	printf@width,w
  2627  0438' 041B'              	iorwf	printf@width+1,w
  2628  0439' 1903               	btfsc	3,2
  2629  043A' 2800'              	goto	u2021
  2630  043B' 2800'              	goto	u2020
  2631  043C'                    u2021:
  2632  043C' 2800'              	goto	l2049
  2633  043D'                    u2020:
  2634  043D'                    l2043:
  2635  043D' 199D'              	btfsc	printf@flag,3
  2636  043E' 2800'              	goto	u2031
  2637  043F' 2800'              	goto	u2030
  2638  0440'                    u2031:
  2639  0440' 2800'              	goto	l2049
  2640  0441'                    u2030:
  2641  0441'                    l2045:
  2642                           
  2643                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1456:      (putch
      +                          (' ') );
  2644  0441' 3020               	movlw	32
  2645  0442' 120A' 118A' 2000' 120A' 118A' 	fcall	_putch
  2646  0447'                    l2047:
  2647  0447' 30FF               	movlw	255
  2648  0448' 1283               	bcf	3,5	;RP0=0, select bank0
  2649  0449' 1303               	bcf	3,6	;RP1=0, select bank0
  2650  044A' 079A'              	addwf	printf@width,f
  2651  044B' 1803               	skipnc
  2652  044C' 0A9B'              	incf	printf@width+1,f
  2653  044D' 30FF               	movlw	255
  2654  044E' 079B'              	addwf	printf@width+1,f
  2655  044F' 081A'              	movf	printf@width,w
  2656  0450' 041B'              	iorwf	printf@width+1,w
  2657  0451' 1D03               	btfss	3,2
  2658  0452' 2800'              	goto	u2041
  2659  0453' 2800'              	goto	u2040
  2660  0454'                    u2041:
  2661  0454' 2800'              	goto	l2045
  2662  0455'                    u2040:
  2663  0455'                    l2049:
  2664                           
  2665                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
  2666  0455' 3003               	movlw	3
  2667  0456' 051D'              	andwf	printf@flag,w
  2668  0457' 0088'              	movwf	??_printf
  2669  0458' 3000               	movlw	0
  2670  0459' 051E'              	andwf	printf@flag+1,w
  2671  045A' 0089'              	movwf	??_printf+1
  2672  045B' 0808'              	movf	??_printf,w
  2673  045C' 0409'              	iorwf	??_printf+1,w
  2674  045D' 1903               	btfsc	3,2
  2675  045E' 2800'              	goto	u2051
  2676  045F' 2800'              	goto	u2050
  2677  0460'                    u2051:
  2678  0460' 2800'              	goto	l342
  2679  0461'                    u2050:
  2680  0461'                    l2051:
  2681                           
  2682                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1465:     (putch(
      +                          '-') );
  2683  0461' 302D               	movlw	45
  2684  0462' 120A' 118A' 2000' 120A' 118A' 	fcall	_putch
  2685  0467' 2800'              	goto	l2055
  2686  0468'                    l342:	
  2687                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1469:    else if(
      +                          flag & 0x01)
  2688                           
  2689  0468' 1C1D'              	btfss	printf@flag,0
  2690  0469' 2800'              	goto	u2061
  2691  046A' 2800'              	goto	u2060
  2692  046B'                    u2061:
  2693  046B' 2800'              	goto	l2055
  2694  046C'                    u2060:
  2695  046C'                    l2053:
  2696                           
  2697                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1470:     (putch(
      +                          ' ') );
  2698  046C' 3020               	movlw	32
  2699  046D' 120A' 118A' 2000' 120A' 118A' 	fcall	_putch
  2700  0472'                    l2055:
  2701                           
  2702                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1474:    if((flag
      +                           & ((0xC0)|0x800)) == (0x40|0x800))
  2703  0472' 30C0               	movlw	192
  2704  0473' 1283               	bcf	3,5	;RP0=0, select bank0
  2705  0474' 1303               	bcf	3,6	;RP1=0, select bank0
  2706  0475' 051D'              	andwf	printf@flag,w
  2707  0476' 0088'              	movwf	??_printf
  2708  0477' 3008               	movlw	8
  2709  0478' 051E'              	andwf	printf@flag+1,w
  2710  0479' 0089'              	movwf	??_printf+1
  2711  047A' 3040               	movlw	64
  2712  047B' 0608'              	xorwf	??_printf,w
  2713  047C' 3008               	movlw	8
  2714  047D' 1903               	skipnz
  2715  047E' 0609'              	xorwf	??_printf+1,w
  2716  047F' 1D03               	btfss	3,2
  2717  0480' 2800'              	goto	u2071
  2718  0481' 2800'              	goto	u2070
  2719  0482'                    u2071:
  2720  0482' 2800'              	goto	l2059
  2721  0483'                    u2070:
  2722  0483'                    l2057:
  2723                           
  2724                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1475:     (putch(
      +                          '0') );
  2725  0483' 3030               	movlw	48
  2726  0484' 120A' 118A' 2000' 120A' 118A' 	fcall	_putch
  2727  0489' 2800'              	goto	l2091
  2728  048A'                    l2059:
  2729                           
  2730                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1480:    if((flag
      +                           & ((0xC0)|0x800)) == (0x80|0x800)) {
  2731  048A' 30C0               	movlw	192
  2732  048B' 051D'              	andwf	printf@flag,w
  2733  048C' 0088'              	movwf	??_printf
  2734  048D' 3008               	movlw	8
  2735  048E' 051E'              	andwf	printf@flag+1,w
  2736  048F' 0089'              	movwf	??_printf+1
  2737  0490' 3080               	movlw	128
  2738  0491' 0608'              	xorwf	??_printf,w
  2739  0492' 3008               	movlw	8
  2740  0493' 1903               	skipnz
  2741  0494' 0609'              	xorwf	??_printf+1,w
  2742  0495' 1D03               	btfss	3,2
  2743  0496' 2800'              	goto	u2081
  2744  0497' 2800'              	goto	u2080
  2745  0498'                    u2081:
  2746  0498' 2800'              	goto	l338
  2747  0499'                    u2080:
  2748  0499'                    l2061:
  2749                           
  2750                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1484:     (putch(
      +                          '0') );
  2751  0499' 3030               	movlw	48
  2752  049A' 120A' 118A' 2000' 120A' 118A' 	fcall	_putch
  2753  049F'                    l2063:
  2754                           
  2755                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1486:     (putch(
      +                          flag & 0x20 ? 'X' : 'x') );
  2756  049F' 1283               	bcf	3,5	;RP0=0, select bank0
  2757  04A0' 1303               	bcf	3,6	;RP1=0, select bank0
  2758  04A1' 1A9D'              	btfsc	printf@flag,5
  2759  04A2' 2800'              	goto	u2091
  2760  04A3' 2800'              	goto	u2090
  2761  04A4'                    u2091:
  2762  04A4' 2800'              	goto	l2067
  2763  04A5'                    u2090:
  2764  04A5'                    l2065:
  2765  04A5' 3078               	movlw	120
  2766  04A6' 008D'              	movwf	_printf$324
  2767  04A7' 3000               	movlw	0
  2768  04A8' 008E'              	movwf	_printf$324+1
  2769  04A9' 2800'              	goto	l2069
  2770  04AA'                    l2067:
  2771  04AA' 3058               	movlw	88
  2772  04AB' 008D'              	movwf	_printf$324
  2773  04AC' 3000               	movlw	0
  2774  04AD' 008E'              	movwf	_printf$324+1
  2775  04AE'                    l2069:
  2776  04AE' 080D'              	movf	_printf$324,w
  2777  04AF' 120A' 118A' 2000' 120A' 118A' 	fcall	_putch
  2778  04B4' 2800'              	goto	l2091
  2779  04B5'                    l338:	
  2780                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1495:   }
  2781                           
  2782                           
  2783                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2784  04B5' 2800'              	goto	l2091
  2785  04B6'                    l2071:
  2786                           
  2787                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1515:     c = (va
      +                          l / dpowers[(unsigned char)prec]) % 10 + '0';
  2788  04B6' 300A               	movlw	10
  2789  04B7' 0088'              	movwf	___lwmod@divisor
  2790  04B8' 3000               	movlw	0
  2791  04B9' 0089'              	movwf	___lwmod@divisor+1
  2792  04BA' 0819'              	movf	printf@prec,w
  2793  04BB' 0088'              	movwf	??_printf
  2794  04BC' 0708'              	addwf	??_printf,w
  2795  04BD' 3E0D               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2796  04BE' 0084               	movwf	4
  2797  04BF' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2798  04C4' 0080'              	movwf	___lwdiv@divisor
  2799  04C5' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2800  04CA' 0081'              	movwf	___lwdiv@divisor+1
  2801  04CB' 0817'              	movf	printf@val+1,w
  2802  04CC' 0083'              	movwf	___lwdiv@dividend+1
  2803  04CD' 0816'              	movf	printf@val,w
  2804  04CE' 0082'              	movwf	___lwdiv@dividend
  2805  04CF' 120A' 118A' 2000' 120A' 118A' 	fcall	___lwdiv
  2806  04D4' 0801'              	movf	?___lwdiv+1,w
  2807  04D5' 008B'              	movwf	___lwmod@dividend+1
  2808  04D6' 0800'              	movf	?___lwdiv,w
  2809  04D7' 008A'              	movwf	___lwmod@dividend
  2810  04D8' 120A' 118A' 2000' 120A' 118A' 	fcall	___lwmod
  2811  04DD' 0808'              	movf	?___lwmod,w
  2812  04DE' 3E30               	addlw	48
  2813  04DF' 1283               	bcf	3,5	;RP0=0, select bank0
  2814  04E0' 1303               	bcf	3,6	;RP1=0, select bank0
  2815  04E1' 0089'              	movwf	??_printf+1
  2816  04E2' 0809'              	movf	??_printf+1,w
  2817  04E3' 009C'              	movwf	printf@c
  2818                           
  2819                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1517:     break;
  2820  04E4' 2800'              	goto	l2089
  2821  04E5'                    l2073:
  2822                           
  2823                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1525:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1526:     unsigned char 
      +                          idx = (val / hexpowers[(unsigned char)prec]) & 0xF;
  2824  04E5' 0819'              	movf	printf@prec,w
  2825  04E6' 0088'              	movwf	??_printf
  2826  04E7' 0708'              	addwf	??_printf,w
  2827  04E8' 3E17               	addlw	low ((_hexpowers-__stringbase)| (0+32768))
  2828  04E9' 0084               	movwf	4
  2829  04EA' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2830  04EF' 0080'              	movwf	___lwdiv@divisor
  2831  04F0' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2832  04F5' 0081'              	movwf	___lwdiv@divisor+1
  2833  04F6' 0817'              	movf	printf@val+1,w
  2834  04F7' 0083'              	movwf	___lwdiv@dividend+1
  2835  04F8' 0816'              	movf	printf@val,w
  2836  04F9' 0082'              	movwf	___lwdiv@dividend
  2837  04FA' 120A' 118A' 2000' 120A' 118A' 	fcall	___lwdiv
  2838  04FF' 0800'              	movf	?___lwdiv,w
  2839  0500' 390F               	andlw	15
  2840  0501' 1283               	bcf	3,5	;RP0=0, select bank0
  2841  0502' 1303               	bcf	3,6	;RP1=0, select bank0
  2842  0503' 0089'              	movwf	??_printf+1
  2843  0504' 0809'              	movf	??_printf+1,w
  2844  0505' 008F'              	movwf	printf@idx
  2845  0506'                    l2075:
  2846                           
  2847                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1528:     c = (fl
      +                          ag & 0x20 ? "0123456789ABCDEF" : "0123456789abcdef")[idx];
  2848  0506' 1A9D'              	btfsc	printf@flag,5
  2849  0507' 2800'              	goto	u2101
  2850  0508' 2800'              	goto	u2100
  2851  0509'                    u2101:
  2852  0509' 2800'              	goto	l2079
  2853  050A'                    u2100:
  2854  050A'                    l2077:
  2855  050A' 3054               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2856  050B' 0088'              	movwf	??_printf
  2857  050C' 0808'              	movf	??_printf,w
  2858  050D' 0090'              	movwf	_printf$330
  2859  050E' 2800'              	goto	l2081
  2860  050F'                    l2079:
  2861  050F' 3043               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2862  0510' 0088'              	movwf	??_printf
  2863  0511' 0808'              	movf	??_printf,w
  2864  0512' 0090'              	movwf	_printf$330
  2865  0513'                    l2081:
  2866  0513' 080F'              	movf	printf@idx,w
  2867  0514' 0710'              	addwf	_printf$330,w
  2868  0515' 0084               	movwf	4
  2869  0516' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2870  051B' 0088'              	movwf	??_printf
  2871  051C' 0808'              	movf	??_printf,w
  2872  051D' 009C'              	movwf	printf@c
  2873                           
  2874                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1534:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1536:     break;
  2875  051E' 2800'              	goto	l2089
  2876  051F'                    l2083:
  2877                           
  2878                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1544:     c = ((v
      +                          al / octpowers[(unsigned char)prec]) & 07) + '0';
  2879  051F' 0819'              	movf	printf@prec,w
  2880  0520' 0088'              	movwf	??_printf
  2881  0521' 0708'              	addwf	??_printf,w
  2882  0522' 3E01               	addlw	low ((_octpowers-__stringbase)| (0+32768))
  2883  0523' 0084               	movwf	4
  2884  0524' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2885  0529' 0080'              	movwf	___lwdiv@divisor
  2886  052A' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2887  052F' 0081'              	movwf	___lwdiv@divisor+1
  2888  0530' 0817'              	movf	printf@val+1,w
  2889  0531' 0083'              	movwf	___lwdiv@dividend+1
  2890  0532' 0816'              	movf	printf@val,w
  2891  0533' 0082'              	movwf	___lwdiv@dividend
  2892  0534' 120A' 118A' 2000' 120A' 118A' 	fcall	___lwdiv
  2893  0539' 0800'              	movf	?___lwdiv,w
  2894  053A' 3907               	andlw	7
  2895  053B' 3E30               	addlw	48
  2896  053C' 1283               	bcf	3,5	;RP0=0, select bank0
  2897  053D' 1303               	bcf	3,6	;RP1=0, select bank0
  2898  053E' 0089'              	movwf	??_printf+1
  2899  053F' 0809'              	movf	??_printf+1,w
  2900  0540' 009C'              	movwf	printf@c
  2901                           
  2902                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1546:     break;
  2903  0541' 2800'              	goto	l2089
  2904  0542'                    l2087:
  2905  0542' 081D'              	movf	printf@flag,w
  2906  0543' 39C0               	andlw	192
  2907  0544' 0088'              	movwf	??_printf
  2908  0545' 0189'              	clrf	??_printf+1
  2909                           
  2910                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2911                           ; Switch size 1, requested type "simple"
  2912                           ; Number of cases is 1, Range of values is 0 to 0
  2913                           ; switch strategies available:
  2914                           ; Name         Instructions Cycles
  2915                           ; simple_byte            4     3 (average)
  2916                           ; direct_byte           11     8 (fixed)
  2917                           ; jumptable            260     6 (fixed)
  2918                           ;	Chosen strategy is simple_byte
  2919  0546' 0809'              	movf	??_printf+1,w
  2920  0547' 3A00               	xorlw	0	; case 0
  2921  0548' 1903               	skipnz
  2922  0549' 2800'              	goto	l2365
  2923  054A' 2800'              	goto	l2089
  2924  054B'                    l2365:
  2925                           
  2926                           ; Switch size 1, requested type "simple"
  2927                           ; Number of cases is 4, Range of values is 0 to 192
  2928                           ; switch strategies available:
  2929                           ; Name         Instructions Cycles
  2930                           ; simple_byte           13     7 (average)
  2931                           ; jumptable            260     6 (fixed)
  2932                           ;	Chosen strategy is simple_byte
  2933  054B' 0808'              	movf	??_printf,w
  2934  054C' 3A00               	xorlw	0	; case 0
  2935  054D' 1903               	skipnz
  2936  054E' 2800'              	goto	l2071
  2937  054F' 3A40               	xorlw	64	; case 64
  2938  0550' 1903               	skipnz
  2939  0551' 2800'              	goto	l2083
  2940  0552' 3AC0               	xorlw	192	; case 128
  2941  0553' 1903               	skipnz
  2942  0554' 2800'              	goto	l2073
  2943  0555' 3A40               	xorlw	64	; case 192
  2944  0556' 1903               	skipnz
  2945  0557' 2800'              	goto	l2071
  2946  0558' 2800'              	goto	l2089
  2947  0559'                    l2089:
  2948                           
  2949                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1550:    (putch(c
      +                          ) );
  2950  0559' 081C'              	movf	printf@c,w
  2951  055A' 120A' 118A' 2000' 120A' 118A' 	fcall	_putch
  2952  055F'                    l2091:
  2953                           
  2954                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2955  055F' 30FF               	movlw	255
  2956  0560' 1283               	bcf	3,5	;RP0=0, select bank0
  2957  0561' 1303               	bcf	3,6	;RP1=0, select bank0
  2958  0562' 0088'              	movwf	??_printf
  2959  0563' 0808'              	movf	??_printf,w
  2960  0564' 0799'              	addwf	printf@prec,f
  2961  0565' 0A19'              	incf	printf@prec,w
  2962  0566' 1D03               	btfss	3,2
  2963  0567' 2800'              	goto	u2111
  2964  0568' 2800'              	goto	u2110
  2965  0569'                    u2111:
  2966  0569' 2800'              	goto	l2087
  2967  056A'                    u2110:
  2968  056A'                    l364:
  2969                           
  2970                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1554:   if((flag 
      +                          & 0x08) && width > 0)
  2971  056A' 1D9D'              	btfss	printf@flag,3
  2972  056B' 2800'              	goto	u2121
  2973  056C' 2800'              	goto	u2120
  2974  056D'                    u2121:
  2975  056D' 2800'              	goto	l2099
  2976  056E'                    u2120:
  2977  056E'                    l2093:
  2978  056E' 081B'              	movf	printf@width+1,w
  2979  056F' 3A80               	xorlw	128
  2980  0570' 00FF               	movwf	btemp+1
  2981  0571' 3080               	movlw	128
  2982  0572' 027F               	subwf	btemp+1,w
  2983  0573' 1D03               	skipz
  2984  0574' 2800'              	goto	u2135
  2985  0575' 3001               	movlw	1
  2986  0576' 021A'              	subwf	printf@width,w
  2987  0577'                    u2135:
  2988  0577' 1C03               	skipc
  2989  0578' 2800'              	goto	u2131
  2990  0579' 2800'              	goto	u2130
  2991  057A'                    u2131:
  2992  057A' 2800'              	goto	l2099
  2993  057B'                    u2130:
  2994  057B'                    l2095:
  2995                           
  2996                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1556:     (putch(
      +                          ' ') );
  2997  057B' 3020               	movlw	32
  2998  057C' 120A' 118A' 2000' 120A' 118A' 	fcall	_putch
  2999  0581'                    l2097:
  3000  0581' 30FF               	movlw	255
  3001  0582' 1283               	bcf	3,5	;RP0=0, select bank0
  3002  0583' 1303               	bcf	3,6	;RP1=0, select bank0
  3003  0584' 079A'              	addwf	printf@width,f
  3004  0585' 1803               	skipnc
  3005  0586' 0A9B'              	incf	printf@width+1,f
  3006  0587' 30FF               	movlw	255
  3007  0588' 079B'              	addwf	printf@width+1,f
  3008  0589' 081A'              	movf	printf@width,w
  3009  058A' 041B'              	iorwf	printf@width+1,w
  3010  058B' 1D03               	btfss	3,2
  3011  058C' 2800'              	goto	u2141
  3012  058D' 2800'              	goto	u2140
  3013  058E'                    u2141:
  3014  058E' 2800'              	goto	l2095
  3015  058F'                    u2140:
  3016  058F'                    l2099:
  3017                           
  3018                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3019  058F' 1283               	bcf	3,5	;RP0=0, select bank0
  3020  0590' 1303               	bcf	3,6	;RP1=0, select bank0
  3021  0591' 0818'              	movf	printf@f,w
  3022  0592' 0084               	movwf	4
  3023  0593' 3001               	movlw	1
  3024  0594' 0798'              	addwf	printf@f,f
  3025  0595' 1383               	bcf	3,7	;select IRP bank0
  3026  0596' 0800               	movf	0,w
  3027  0597' 0088'              	movwf	??_printf
  3028  0598' 0808'              	movf	??_printf,w
  3029  0599' 009C'              	movwf	printf@c
  3030  059A' 081C'              	movf	printf@c,w
  3031  059B' 1D03               	btfss	3,2
  3032  059C' 2800'              	goto	u2151
  3033  059D' 2800'              	goto	u2150
  3034  059E'                    u2151:
  3035  059E' 2800'              	goto	l1791
  3036  059F'                    u2150:
  3037  059F'                    l369:
  3038  059F' 0008               	return
  3039  05A0'                    __end_of_printf:
  3040                           
  3041                           	psect	text2
  3042  0000'                    __ptext2:	
  3043 ;; *************** function _putch *****************
  3044 ;; Defined at:
  3045 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\putch.c"
  3046 ;; Parameters:    Size  Location     Type
  3047 ;;  c               1    wreg     unsigned char 
  3048 ;; Auto vars:     Size  Location     Type
  3049 ;;  c               1    0[COMMON] unsigned char 
  3050 ;; Return value:  Size  Location     Type
  3051 ;;                  1    wreg      void 
  3052 ;; Registers used:
  3053 ;;		wreg
  3054 ;; Tracked objects:
  3055 ;;		On entry : 0/0
  3056 ;;		On exit  : 0/0
  3057 ;;		Unchanged: 0/0
  3058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3059 ;;      Params:         0       0       0       0       0
  3060 ;;      Locals:         0       0       0       0       0
  3061 ;;      Temps:          0       0       0       0       0
  3062 ;;      Totals:         0       0       0       0       0
  3063 ;;Total ram usage:        0 bytes
  3064 ;; Hardware stack levels used: 1
  3065 ;; This function calls:
  3066 ;;		Nothing
  3067 ;; This function is called by:
  3068 ;;		_printf
  3069 ;; This function uses a non-reentrant model
  3070 ;;
  3071                           
  3072  0000'                    _putch:	
  3073                           ;psect for function _putch
  3074                           
  3075  0000'                    l835:	
  3076                           ;incstack = 0
  3077                           ; Regs used in _putch: [wreg]
  3078                           
  3079  0000' 0008               	return
  3080  0001'                    __end_of_putch:
  3081                           
  3082                           	psect	text3
  3083  0000'                    __ptext3:	
  3084 ;; *************** function _isdigit *****************
  3085 ;; Defined at:
  3086 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\isdigit.c"
  3087 ;; Parameters:    Size  Location     Type
  3088 ;;  c               1    wreg     unsigned char 
  3089 ;; Auto vars:     Size  Location     Type
  3090 ;;  c               1    1[COMMON] unsigned char 
  3091 ;; Return value:  Size  Location     Type
  3092 ;;		None               void
  3093 ;; Registers used:
  3094 ;;		wreg, status,2, status,0
  3095 ;; Tracked objects:
  3096 ;;		On entry : 0/0
  3097 ;;		On exit  : 0/0
  3098 ;;		Unchanged: 0/0
  3099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3100 ;;      Params:         0       0       0       0       0
  3101 ;;      Locals:         2       0       0       0       0
  3102 ;;      Temps:          0       0       0       0       0
  3103 ;;      Totals:         2       0       0       0       0
  3104 ;;Total ram usage:        2 bytes
  3105 ;; Hardware stack levels used: 1
  3106 ;; This function calls:
  3107 ;;		Nothing
  3108 ;; This function is called by:
  3109 ;;		_printf
  3110 ;; This function uses a non-reentrant model
  3111 ;;
  3112                           
  3113  0000'                    _isdigit:	
  3114                           ;psect for function _isdigit
  3115                           
  3116                           
  3117                           ;incstack = 0
  3118                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3119                           ;isdigit@c stored from wreg
  3120  0000' 0081'              	movwf	isdigit@c
  3121  0001'                    l1639:
  3122  0001' 0180'              	clrf	_isdigit$613
  3123  0002'                    l1641:
  3124  0002' 303A               	movlw	58
  3125  0003' 0201'              	subwf	isdigit@c,w
  3126  0004' 1803               	skipnc
  3127  0005' 2800'              	goto	u1151
  3128  0006' 2800'              	goto	u1150
  3129  0007'                    u1151:
  3130  0007' 2800'              	goto	l1647
  3131  0008'                    u1150:
  3132  0008'                    l1643:
  3133  0008' 3030               	movlw	48
  3134  0009' 0201'              	subwf	isdigit@c,w
  3135  000A' 1C03               	skipc
  3136  000B' 2800'              	goto	u1161
  3137  000C' 2800'              	goto	u1160
  3138  000D'                    u1161:
  3139  000D' 2800'              	goto	l1647
  3140  000E'                    u1160:
  3141  000E'                    l1645:
  3142  000E' 0180'              	clrf	_isdigit$613
  3143  000F' 0A80'              	incf	_isdigit$613,f
  3144  0010'                    l1647:
  3145  0010' 0C00'              	rrf	_isdigit$613,w
  3146  0011'                    l826:
  3147  0011' 0008               	return
  3148  0012'                    __end_of_isdigit:
  3149                           
  3150                           	psect	text4
  3151  0000'                    __ptext4:	
  3152 ;; *************** function ___wmul *****************
  3153 ;; Defined at:
  3154 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\Umul16.c"
  3155 ;; Parameters:    Size  Location     Type
  3156 ;;  multiplier      2    0[COMMON] unsigned int 
  3157 ;;  multiplicand    2    2[COMMON] unsigned int 
  3158 ;; Auto vars:     Size  Location     Type
  3159 ;;  product         2    4[COMMON] unsigned int 
  3160 ;; Return value:  Size  Location     Type
  3161 ;;                  2    0[COMMON] unsigned int 
  3162 ;; Registers used:
  3163 ;;		wreg, status,2, status,0
  3164 ;; Tracked objects:
  3165 ;;		On entry : 0/0
  3166 ;;		On exit  : 0/0
  3167 ;;		Unchanged: 0/0
  3168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3169 ;;      Params:         4       0       0       0       0
  3170 ;;      Locals:         2       0       0       0       0
  3171 ;;      Temps:          0       0       0       0       0
  3172 ;;      Totals:         6       0       0       0       0
  3173 ;;Total ram usage:        6 bytes
  3174 ;; Hardware stack levels used: 1
  3175 ;; This function calls:
  3176 ;;		Nothing
  3177 ;; This function is called by:
  3178 ;;		_printf
  3179 ;; This function uses a non-reentrant model
  3180 ;;
  3181                           
  3182  0000'                    ___wmul:	
  3183                           ;psect for function ___wmul
  3184                           
  3185  0000'                    l1651:	
  3186                           ;incstack = 0
  3187                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3188                           
  3189  0000' 0184'              	clrf	___wmul@product
  3190  0001' 0185'              	clrf	___wmul@product+1
  3191  0002'                    l1653:
  3192  0002' 1C00'              	btfss	___wmul@multiplier,0
  3193  0003' 2800'              	goto	u1171
  3194  0004' 2800'              	goto	u1170
  3195  0005'                    u1171:
  3196  0005' 2800'              	goto	l373
  3197  0006'                    u1170:
  3198  0006'                    l1655:
  3199  0006' 0802'              	movf	___wmul@multiplicand,w
  3200  0007' 0784'              	addwf	___wmul@product,f
  3201  0008' 1803               	skipnc
  3202  0009' 0A85'              	incf	___wmul@product+1,f
  3203  000A' 0803'              	movf	___wmul@multiplicand+1,w
  3204  000B' 0785'              	addwf	___wmul@product+1,f
  3205  000C'                    l373:
  3206  000C' 3001               	movlw	1
  3207  000D'                    u1185:
  3208  000D' 1003               	clrc
  3209  000E' 0D82'              	rlf	___wmul@multiplicand,f
  3210  000F' 0D83'              	rlf	___wmul@multiplicand+1,f
  3211  0010' 3EFF               	addlw	-1
  3212  0011' 1D03               	skipz
  3213  0012' 2800'              	goto	u1185
  3214  0013'                    l1657:
  3215  0013' 3001               	movlw	1
  3216  0014'                    u1195:
  3217  0014' 1003               	clrc
  3218  0015' 0C81'              	rrf	___wmul@multiplier+1,f
  3219  0016' 0C80'              	rrf	___wmul@multiplier,f
  3220  0017' 3EFF               	addlw	-1
  3221  0018' 1D03               	skipz
  3222  0019' 2800'              	goto	u1195
  3223  001A'                    l1659:
  3224  001A' 0800'              	movf	___wmul@multiplier,w
  3225  001B' 0401'              	iorwf	___wmul@multiplier+1,w
  3226  001C' 1D03               	btfss	3,2
  3227  001D' 2800'              	goto	u1201
  3228  001E' 2800'              	goto	u1200
  3229  001F'                    u1201:
  3230  001F' 2800'              	goto	l1653
  3231  0020'                    u1200:
  3232  0020'                    l1661:
  3233  0020' 0805'              	movf	___wmul@product+1,w
  3234  0021' 0081'              	movwf	?___wmul+1
  3235  0022' 0804'              	movf	___wmul@product,w
  3236  0023' 0080'              	movwf	?___wmul
  3237  0024'                    l375:
  3238  0024' 0008               	return
  3239  0025'                    __end_of___wmul:
  3240                           
  3241                           	psect	text5
  3242  0000'                    __ptext5:	
  3243 ;; *************** function ___lwmod *****************
  3244 ;; Defined at:
  3245 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\lwmod.c"
  3246 ;; Parameters:    Size  Location     Type
  3247 ;;  divisor         2    8[COMMON] unsigned int 
  3248 ;;  dividend        2   10[COMMON] unsigned int 
  3249 ;; Auto vars:     Size  Location     Type
  3250 ;;  counter         1   13[COMMON] unsigned char 
  3251 ;; Return value:  Size  Location     Type
  3252 ;;                  2    8[COMMON] unsigned int 
  3253 ;; Registers used:
  3254 ;;		wreg, status,2, status,0
  3255 ;; Tracked objects:
  3256 ;;		On entry : 0/0
  3257 ;;		On exit  : 0/0
  3258 ;;		Unchanged: 0/0
  3259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3260 ;;      Params:         4       0       0       0       0
  3261 ;;      Locals:         1       0       0       0       0
  3262 ;;      Temps:          1       0       0       0       0
  3263 ;;      Totals:         6       0       0       0       0
  3264 ;;Total ram usage:        6 bytes
  3265 ;; Hardware stack levels used: 1
  3266 ;; This function calls:
  3267 ;;		Nothing
  3268 ;; This function is called by:
  3269 ;;		_printf
  3270 ;; This function uses a non-reentrant model
  3271 ;;
  3272                           
  3273  0000'                    ___lwmod:	
  3274                           ;psect for function ___lwmod
  3275                           
  3276  0000'                    l1729:	
  3277                           ;incstack = 0
  3278                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3279                           
  3280  0000' 0808'              	movf	___lwmod@divisor,w
  3281  0001' 0409'              	iorwf	___lwmod@divisor+1,w
  3282  0002' 1903               	btfsc	3,2
  3283  0003' 2800'              	goto	u1371
  3284  0004' 2800'              	goto	u1370
  3285  0005'                    u1371:
  3286  0005' 2800'              	goto	l1747
  3287  0006'                    u1370:
  3288  0006'                    l1731:
  3289  0006' 018D'              	clrf	___lwmod@counter
  3290  0007' 0A8D'              	incf	___lwmod@counter,f
  3291  0008' 2800'              	goto	l1737
  3292  0009'                    l1733:
  3293  0009' 3001               	movlw	1
  3294  000A'                    u1385:
  3295  000A' 1003               	clrc
  3296  000B' 0D88'              	rlf	___lwmod@divisor,f
  3297  000C' 0D89'              	rlf	___lwmod@divisor+1,f
  3298  000D' 3EFF               	addlw	-1
  3299  000E' 1D03               	skipz
  3300  000F' 2800'              	goto	u1385
  3301  0010'                    l1735:
  3302  0010' 3001               	movlw	1
  3303  0011' 008C'              	movwf	??___lwmod
  3304  0012' 080C'              	movf	??___lwmod,w
  3305  0013' 078D'              	addwf	___lwmod@counter,f
  3306  0014'                    l1737:
  3307  0014' 1F89'              	btfss	___lwmod@divisor+1,7
  3308  0015' 2800'              	goto	u1391
  3309  0016' 2800'              	goto	u1390
  3310  0017'                    u1391:
  3311  0017' 2800'              	goto	l1733
  3312  0018'                    u1390:
  3313  0018'                    l1739:
  3314  0018' 0809'              	movf	___lwmod@divisor+1,w
  3315  0019' 020B'              	subwf	___lwmod@dividend+1,w
  3316  001A' 1D03               	skipz
  3317  001B' 2800'              	goto	u1405
  3318  001C' 0808'              	movf	___lwmod@divisor,w
  3319  001D' 020A'              	subwf	___lwmod@dividend,w
  3320  001E'                    u1405:
  3321  001E' 1C03               	skipc
  3322  001F' 2800'              	goto	u1401
  3323  0020' 2800'              	goto	u1400
  3324  0021'                    u1401:
  3325  0021' 2800'              	goto	l1743
  3326  0022'                    u1400:
  3327  0022'                    l1741:
  3328  0022' 0808'              	movf	___lwmod@divisor,w
  3329  0023' 028A'              	subwf	___lwmod@dividend,f
  3330  0024' 0809'              	movf	___lwmod@divisor+1,w
  3331  0025' 1C03               	skipc
  3332  0026' 038B'              	decf	___lwmod@dividend+1,f
  3333  0027' 028B'              	subwf	___lwmod@dividend+1,f
  3334  0028'                    l1743:
  3335  0028' 3001               	movlw	1
  3336  0029'                    u1415:
  3337  0029' 1003               	clrc
  3338  002A' 0C89'              	rrf	___lwmod@divisor+1,f
  3339  002B' 0C88'              	rrf	___lwmod@divisor,f
  3340  002C' 3EFF               	addlw	-1
  3341  002D' 1D03               	skipz
  3342  002E' 2800'              	goto	u1415
  3343  002F'                    l1745:
  3344  002F' 3001               	movlw	1
  3345  0030' 028D'              	subwf	___lwmod@counter,f
  3346  0031' 1D03               	btfss	3,2
  3347  0032' 2800'              	goto	u1421
  3348  0033' 2800'              	goto	u1420
  3349  0034'                    u1421:
  3350  0034' 2800'              	goto	l1739
  3351  0035'                    u1420:
  3352  0035'                    l1747:
  3353  0035' 080B'              	movf	___lwmod@dividend+1,w
  3354  0036' 0089'              	movwf	?___lwmod+1
  3355  0037' 080A'              	movf	___lwmod@dividend,w
  3356  0038' 0088'              	movwf	?___lwmod
  3357  0039'                    l655:
  3358  0039' 0008               	return
  3359  003A'                    __end_of___lwmod:
  3360                           
  3361                           	psect	text6
  3362  0000'                    __ptext6:	
  3363 ;; *************** function ___lwdiv *****************
  3364 ;; Defined at:
  3365 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\lwdiv.c"
  3366 ;; Parameters:    Size  Location     Type
  3367 ;;  divisor         2    0[COMMON] unsigned int 
  3368 ;;  dividend        2    2[COMMON] unsigned int 
  3369 ;; Auto vars:     Size  Location     Type
  3370 ;;  quotient        2    5[COMMON] unsigned int 
  3371 ;;  counter         1    7[COMMON] unsigned char 
  3372 ;; Return value:  Size  Location     Type
  3373 ;;                  2    0[COMMON] unsigned int 
  3374 ;; Registers used:
  3375 ;;		wreg, status,2, status,0
  3376 ;; Tracked objects:
  3377 ;;		On entry : 0/0
  3378 ;;		On exit  : 0/0
  3379 ;;		Unchanged: 0/0
  3380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3381 ;;      Params:         4       0       0       0       0
  3382 ;;      Locals:         3       0       0       0       0
  3383 ;;      Temps:          1       0       0       0       0
  3384 ;;      Totals:         8       0       0       0       0
  3385 ;;Total ram usage:        8 bytes
  3386 ;; Hardware stack levels used: 1
  3387 ;; This function calls:
  3388 ;;		Nothing
  3389 ;; This function is called by:
  3390 ;;		_printf
  3391 ;; This function uses a non-reentrant model
  3392 ;;
  3393                           
  3394  0000'                    ___lwdiv:	
  3395                           ;psect for function ___lwdiv
  3396                           
  3397  0000'                    l1703:	
  3398                           ;incstack = 0
  3399                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3400                           
  3401  0000' 0185'              	clrf	___lwdiv@quotient
  3402  0001' 0186'              	clrf	___lwdiv@quotient+1
  3403  0002'                    l1705:
  3404  0002' 0800'              	movf	___lwdiv@divisor,w
  3405  0003' 0401'              	iorwf	___lwdiv@divisor+1,w
  3406  0004' 1903               	btfsc	3,2
  3407  0005' 2800'              	goto	u1301
  3408  0006' 2800'              	goto	u1300
  3409  0007'                    u1301:
  3410  0007' 2800'              	goto	l1725
  3411  0008'                    u1300:
  3412  0008'                    l1707:
  3413  0008' 0187'              	clrf	___lwdiv@counter
  3414  0009' 0A87'              	incf	___lwdiv@counter,f
  3415  000A' 2800'              	goto	l1713
  3416  000B'                    l1709:
  3417  000B' 3001               	movlw	1
  3418  000C'                    u1315:
  3419  000C' 1003               	clrc
  3420  000D' 0D80'              	rlf	___lwdiv@divisor,f
  3421  000E' 0D81'              	rlf	___lwdiv@divisor+1,f
  3422  000F' 3EFF               	addlw	-1
  3423  0010' 1D03               	skipz
  3424  0011' 2800'              	goto	u1315
  3425  0012'                    l1711:
  3426  0012' 3001               	movlw	1
  3427  0013' 0084'              	movwf	??___lwdiv
  3428  0014' 0804'              	movf	??___lwdiv,w
  3429  0015' 0787'              	addwf	___lwdiv@counter,f
  3430  0016'                    l1713:
  3431  0016' 1F81'              	btfss	___lwdiv@divisor+1,7
  3432  0017' 2800'              	goto	u1321
  3433  0018' 2800'              	goto	u1320
  3434  0019'                    u1321:
  3435  0019' 2800'              	goto	l1709
  3436  001A'                    u1320:
  3437  001A'                    l1715:
  3438  001A' 3001               	movlw	1
  3439  001B'                    u1335:
  3440  001B' 1003               	clrc
  3441  001C' 0D85'              	rlf	___lwdiv@quotient,f
  3442  001D' 0D86'              	rlf	___lwdiv@quotient+1,f
  3443  001E' 3EFF               	addlw	-1
  3444  001F' 1D03               	skipz
  3445  0020' 2800'              	goto	u1335
  3446  0021' 0801'              	movf	___lwdiv@divisor+1,w
  3447  0022' 0203'              	subwf	___lwdiv@dividend+1,w
  3448  0023' 1D03               	skipz
  3449  0024' 2800'              	goto	u1345
  3450  0025' 0800'              	movf	___lwdiv@divisor,w
  3451  0026' 0202'              	subwf	___lwdiv@dividend,w
  3452  0027'                    u1345:
  3453  0027' 1C03               	skipc
  3454  0028' 2800'              	goto	u1341
  3455  0029' 2800'              	goto	u1340
  3456  002A'                    u1341:
  3457  002A' 2800'              	goto	l1721
  3458  002B'                    u1340:
  3459  002B'                    l1717:
  3460  002B' 0800'              	movf	___lwdiv@divisor,w
  3461  002C' 0282'              	subwf	___lwdiv@dividend,f
  3462  002D' 0801'              	movf	___lwdiv@divisor+1,w
  3463  002E' 1C03               	skipc
  3464  002F' 0383'              	decf	___lwdiv@dividend+1,f
  3465  0030' 0283'              	subwf	___lwdiv@dividend+1,f
  3466  0031'                    l1719:
  3467  0031' 1405'              	bsf	___lwdiv@quotient,0
  3468  0032'                    l1721:
  3469  0032' 3001               	movlw	1
  3470  0033'                    u1355:
  3471  0033' 1003               	clrc
  3472  0034' 0C81'              	rrf	___lwdiv@divisor+1,f
  3473  0035' 0C80'              	rrf	___lwdiv@divisor,f
  3474  0036' 3EFF               	addlw	-1
  3475  0037' 1D03               	skipz
  3476  0038' 2800'              	goto	u1355
  3477  0039'                    l1723:
  3478  0039' 3001               	movlw	1
  3479  003A' 0287'              	subwf	___lwdiv@counter,f
  3480  003B' 1D03               	btfss	3,2
  3481  003C' 2800'              	goto	u1361
  3482  003D' 2800'              	goto	u1360
  3483  003E'                    u1361:
  3484  003E' 2800'              	goto	l1715
  3485  003F'                    u1360:
  3486  003F'                    l1725:
  3487  003F' 0806'              	movf	___lwdiv@quotient+1,w
  3488  0040' 0081'              	movwf	?___lwdiv+1
  3489  0041' 0805'              	movf	___lwdiv@quotient,w
  3490  0042' 0080'              	movwf	?___lwdiv
  3491  0043'                    l645:
  3492  0043' 0008               	return
  3493  0044'                    __end_of___lwdiv:
  3494                           
  3495                           	psect	text7
  3496  0000'                    __ptext7:	
  3497 ;; *************** function ___bmul *****************
  3498 ;; Defined at:
  3499 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\Umul8.c"
  3500 ;; Parameters:    Size  Location     Type
  3501 ;;  multiplier      1    wreg     unsigned char 
  3502 ;;  multiplicand    1    0[COMMON] unsigned char 
  3503 ;; Auto vars:     Size  Location     Type
  3504 ;;  multiplier      1    3[COMMON] unsigned char 
  3505 ;;  product         1    2[COMMON] unsigned char 
  3506 ;; Return value:  Size  Location     Type
  3507 ;;                  1    wreg      unsigned char 
  3508 ;; Registers used:
  3509 ;;		wreg, status,2, status,0
  3510 ;; Tracked objects:
  3511 ;;		On entry : 0/0
  3512 ;;		On exit  : 0/0
  3513 ;;		Unchanged: 0/0
  3514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3515 ;;      Params:         1       0       0       0       0
  3516 ;;      Locals:         2       0       0       0       0
  3517 ;;      Temps:          1       0       0       0       0
  3518 ;;      Totals:         4       0       0       0       0
  3519 ;;Total ram usage:        4 bytes
  3520 ;; Hardware stack levels used: 1
  3521 ;; This function calls:
  3522 ;;		Nothing
  3523 ;; This function is called by:
  3524 ;;		_printf
  3525 ;; This function uses a non-reentrant model
  3526 ;;
  3527                           
  3528  0000'                    ___bmul:	
  3529                           ;psect for function ___bmul
  3530                           
  3531                           
  3532                           ;incstack = 0
  3533                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3534                           ;___bmul@multiplier stored from wreg
  3535  0000' 0083'              	movwf	___bmul@multiplier
  3536  0001'                    l1665:
  3537  0001' 0182'              	clrf	___bmul@product
  3538  0002'                    l1667:
  3539  0002' 1C03'              	btfss	___bmul@multiplier,0
  3540  0003' 2800'              	goto	u1211
  3541  0004' 2800'              	goto	u1210
  3542  0005'                    u1211:
  3543  0005' 2800'              	goto	l1671
  3544  0006'                    u1210:
  3545  0006'                    l1669:
  3546  0006' 0800'              	movf	___bmul@multiplicand,w
  3547  0007' 0081'              	movwf	??___bmul
  3548  0008' 0801'              	movf	??___bmul,w
  3549  0009' 0782'              	addwf	___bmul@product,f
  3550  000A'                    l1671:
  3551  000A' 1003               	clrc
  3552  000B' 0D80'              	rlf	___bmul@multiplicand,f
  3553  000C'                    l1673:
  3554  000C' 1003               	clrc
  3555  000D' 0C83'              	rrf	___bmul@multiplier,f
  3556  000E' 0803'              	movf	___bmul@multiplier,w
  3557  000F' 1D03               	btfss	3,2
  3558  0010' 2800'              	goto	u1221
  3559  0011' 2800'              	goto	u1220
  3560  0012'                    u1221:
  3561  0012' 2800'              	goto	l1667
  3562  0013'                    u1220:
  3563  0013'                    l1675:
  3564  0013' 0802'              	movf	___bmul@product,w
  3565  0014'                    l399:
  3566  0014' 0008               	return
  3567  0015'                    __end_of___bmul:
  3568                           
  3569                           	psect	text8
  3570  0000'                    __ptext8:	
  3571 ;; *************** function _memset *****************
  3572 ;; Defined at:
  3573 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\memset.c"
  3574 ;; Parameters:    Size  Location     Type
  3575 ;;  p1              1    wreg     PTR void 
  3576 ;;		 -> main@Str(50), 
  3577 ;;  c               2    0[COMMON] int 
  3578 ;;  n               2    2[COMMON] unsigned int 
  3579 ;; Auto vars:     Size  Location     Type
  3580 ;;  p1              1    5[COMMON] PTR void 
  3581 ;;		 -> main@Str(50), 
  3582 ;;  p               1    6[COMMON] PTR unsigned char 
  3583 ;;		 -> main@Str(50), 
  3584 ;; Return value:  Size  Location     Type
  3585 ;;                  1    wreg      PTR void 
  3586 ;; Registers used:
  3587 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3588 ;; Tracked objects:
  3589 ;;		On entry : 0/0
  3590 ;;		On exit  : 0/0
  3591 ;;		Unchanged: 0/0
  3592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3593 ;;      Params:         4       0       0       0       0
  3594 ;;      Locals:         2       0       0       0       0
  3595 ;;      Temps:          1       0       0       0       0
  3596 ;;      Totals:         7       0       0       0       0
  3597 ;;Total ram usage:        7 bytes
  3598 ;; Hardware stack levels used: 1
  3599 ;; This function calls:
  3600 ;;		Nothing
  3601 ;; This function is called by:
  3602 ;;		_main
  3603 ;; This function uses a non-reentrant model
  3604 ;;
  3605                           
  3606  0000'                    _memset:	
  3607                           ;psect for function _memset
  3608                           
  3609                           
  3610                           ;incstack = 0
  3611                           ; Regs used in _memset: [wreg-fsr0h+status,2+status,0]
  3612                           ;memset@p1 stored from wreg
  3613  0000' 0085'              	movwf	memset@p1
  3614  0001'                    l1781:
  3615  0001' 0805'              	movf	memset@p1,w
  3616  0002' 0084'              	movwf	??_memset
  3617  0003' 0804'              	movf	??_memset,w
  3618  0004' 0086'              	movwf	memset@p
  3619  0005' 2800'              	goto	l1787
  3620  0006'                    l1783:
  3621  0006' 0800'              	movf	memset@c,w
  3622  0007' 0084'              	movwf	??_memset
  3623  0008' 0806'              	movf	memset@p,w
  3624  0009' 0084               	movwf	4
  3625  000A' 0804'              	movf	??_memset,w
  3626  000B' 1383               	bcf	3,7	;select IRP bank0
  3627  000C' 0080               	movwf	0
  3628  000D'                    l1785:
  3629  000D' 3001               	movlw	1
  3630  000E' 0084'              	movwf	??_memset
  3631  000F' 0804'              	movf	??_memset,w
  3632  0010' 0786'              	addwf	memset@p,f
  3633  0011'                    l1787:
  3634  0011' 3001               	movlw	1
  3635  0012' 0282'              	subwf	memset@n,f
  3636  0013' 3000               	movlw	0
  3637  0014' 1C03               	skipc
  3638  0015' 0383'              	decf	memset@n+1,f
  3639  0016' 0283'              	subwf	memset@n+1,f
  3640  0017' 0A02'              	incf	memset@n,w
  3641  0018' 1D03               	skipz
  3642  0019' 2800'              	goto	u1511
  3643  001A' 0A03'              	incf	memset@n+1,w
  3644  001B' 1D03               	btfss	3,2
  3645  001C' 2800'              	goto	u1511
  3646  001D' 2800'              	goto	u1510
  3647  001E'                    u1511:
  3648  001E' 2800'              	goto	l1783
  3649  001F'                    u1510:
  3650  001F'                    l832:
  3651  001F' 0008               	return
  3652  0020'                    __end_of_memset:
  3653                           
  3654                           	psect	text9
  3655  0000'                    __ptext9:	
  3656 ;; *************** function _UART_Write_Text *****************
  3657 ;; Defined at:
  3658 ;;		line 41 in file "UART/Uart.c"
  3659 ;; Parameters:    Size  Location     Type
  3660 ;;  text            1    wreg     PTR unsigned char 
  3661 ;;		 -> main@Str(50), 
  3662 ;; Auto vars:     Size  Location     Type
  3663 ;;  text            1    4[COMMON] PTR unsigned char 
  3664 ;;		 -> main@Str(50), 
  3665 ;;  i               2    2[COMMON] int 
  3666 ;; Return value:  Size  Location     Type
  3667 ;;                  1    wreg      void 
  3668 ;; Registers used:
  3669 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3670 ;; Tracked objects:
  3671 ;;		On entry : 0/0
  3672 ;;		On exit  : 0/0
  3673 ;;		Unchanged: 0/0
  3674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3675 ;;      Params:         0       0       0       0       0
  3676 ;;      Locals:         3       0       0       0       0
  3677 ;;      Temps:          1       0       0       0       0
  3678 ;;      Totals:         4       0       0       0       0
  3679 ;;Total ram usage:        4 bytes
  3680 ;; Hardware stack levels used: 1
  3681 ;; Hardware stack levels required when called: 1
  3682 ;; This function calls:
  3683 ;;		_UART_Write
  3684 ;; This function is called by:
  3685 ;;		_main
  3686 ;; This function uses a non-reentrant model
  3687 ;;
  3688                           
  3689  0000'                    _UART_Write_Text:	
  3690                           ;psect for function _UART_Write_Text
  3691                           
  3692                           
  3693                           ;incstack = 0
  3694                           ; Regs used in _UART_Write_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3695                           ;UART_Write_Text@text stored from wreg
  3696  0000' 0084'              	movwf	UART_Write_Text@text
  3697  0001'                    l2133:
  3698                           
  3699                           ;UART/Uart.c: 41: void UART_Write_Text(char *text);UART/Uart.c: 42: {;UART/Uart.c: 43:  
      +                           for(int i=0;text[i]!='\0';i++)
  3700  0001' 0182'              	clrf	UART_Write_Text@i
  3701  0002' 0183'              	clrf	UART_Write_Text@i+1
  3702  0003' 2800'              	goto	l2139
  3703  0004'                    l2135:
  3704                           
  3705                           ;UART/Uart.c: 44:     UART_Write(text[i]);
  3706  0004' 0802'              	movf	UART_Write_Text@i,w
  3707  0005' 0704'              	addwf	UART_Write_Text@text,w
  3708  0006' 0081'              	movwf	??_UART_Write_Text
  3709  0007' 0801'              	movf	??_UART_Write_Text,w
  3710  0008' 0084               	movwf	4
  3711  0009' 0800               	movf	0,w
  3712  000A' 120A' 118A' 2000' 120A' 118A' 	fcall	_UART_Write
  3713  000F'                    l2137:
  3714  000F' 3001               	movlw	1
  3715  0010' 0782'              	addwf	UART_Write_Text@i,f
  3716  0011' 1803               	skipnc
  3717  0012' 0A83'              	incf	UART_Write_Text@i+1,f
  3718  0013' 3000               	movlw	0
  3719  0014' 0783'              	addwf	UART_Write_Text@i+1,f
  3720  0015'                    l2139:
  3721  0015' 0802'              	movf	UART_Write_Text@i,w
  3722  0016' 0704'              	addwf	UART_Write_Text@text,w
  3723  0017' 0081'              	movwf	??_UART_Write_Text
  3724  0018' 0801'              	movf	??_UART_Write_Text,w
  3725  0019' 0084               	movwf	4
  3726  001A' 1383               	bcf	3,7	;select IRP bank0
  3727  001B' 0800               	movf	0,w
  3728  001C' 1D03               	btfss	3,2
  3729  001D' 2800'              	goto	u2161
  3730  001E' 2800'              	goto	u2160
  3731  001F'                    u2161:
  3732  001F' 2800'              	goto	l2135
  3733  0020'                    u2160:
  3734  0020'                    l118:
  3735  0020' 0008               	return
  3736  0021'                    __end_of_UART_Write_Text:
  3737                           
  3738                           	psect	text10
  3739  0000'                    __ptext10:	
  3740 ;; *************** function _UART_Write *****************
  3741 ;; Defined at:
  3742 ;;		line 31 in file "UART/Uart.c"
  3743 ;; Parameters:    Size  Location     Type
  3744 ;;  data            1    wreg     unsigned char 
  3745 ;; Auto vars:     Size  Location     Type
  3746 ;;  data            1    0[COMMON] unsigned char 
  3747 ;; Return value:  Size  Location     Type
  3748 ;;                  1    wreg      void 
  3749 ;; Registers used:
  3750 ;;		wreg
  3751 ;; Tracked objects:
  3752 ;;		On entry : 0/0
  3753 ;;		On exit  : 0/0
  3754 ;;		Unchanged: 0/0
  3755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3756 ;;      Params:         0       0       0       0       0
  3757 ;;      Locals:         1       0       0       0       0
  3758 ;;      Temps:          0       0       0       0       0
  3759 ;;      Totals:         1       0       0       0       0
  3760 ;;Total ram usage:        1 bytes
  3761 ;; Hardware stack levels used: 1
  3762 ;; This function calls:
  3763 ;;		Nothing
  3764 ;; This function is called by:
  3765 ;;		_UART_Write_Text
  3766 ;; This function uses a non-reentrant model
  3767 ;;
  3768                           
  3769  0000'                    _UART_Write:	
  3770                           ;psect for function _UART_Write
  3771                           
  3772                           
  3773                           ;incstack = 0
  3774                           ; Regs used in _UART_Write: [wreg]
  3775                           ;UART_Write@data stored from wreg
  3776  0000' 0080'              	movwf	UART_Write@data
  3777  0001'                    l1635:
  3778  0001'                    l103:	
  3779                           ;UART/Uart.c: 31: void UART_Write(char data);UART/Uart.c: 32: {;UART/Uart.c: 33:     whi
      +                          le (TXIF == 0);
  3780                           
  3781  0001' 1283               	bcf	3,5	;RP0=0, select bank0
  3782  0002' 1303               	bcf	3,6	;RP1=0, select bank0
  3783  0003' 1E0C               	btfss	12,4	;volatile
  3784  0004' 2800'              	goto	u1131
  3785  0005' 2800'              	goto	u1130
  3786  0006'                    u1131:
  3787  0006' 2800'              	goto	l103
  3788  0007'                    u1130:
  3789  0007'                    l1637:
  3790                           
  3791                           ;UART/Uart.c: 34:     TXREG = data;
  3792  0007' 0800'              	movf	UART_Write@data,w
  3793  0008' 0099               	movwf	25	;volatile
  3794  0009'                    l106:	
  3795                           ;UART/Uart.c: 35:     while(TRMT==0);
  3796                           
  3797  0009' 1683               	bsf	3,5	;RP0=1, select bank1
  3798  000A' 1303               	bcf	3,6	;RP1=0, select bank1
  3799  000B' 1C98               	btfss	24,1	;volatile
  3800  000C' 2800'              	goto	u1141
  3801  000D' 2800'              	goto	u1140
  3802  000E'                    u1141:
  3803  000E' 2800'              	goto	l106
  3804  000F'                    u1140:
  3805  000F'                    l109:
  3806  000F' 0008               	return
  3807  0010'                    __end_of_UART_Write:
  3808                           
  3809                           	psect	text11
  3810  0000'                    __ptext11:	
  3811 ;; *************** function _UART_Init *****************
  3812 ;; Defined at:
  3813 ;;		line 6 in file "UART/Uart.c"
  3814 ;; Parameters:    Size  Location     Type
  3815 ;;  baudrate        4    0[BANK0 ] const long 
  3816 ;; Auto vars:     Size  Location     Type
  3817 ;;  x               2   16[BANK0 ] unsigned int 
  3818 ;; Return value:  Size  Location     Type
  3819 ;;                  1    wreg      unsigned char 
  3820 ;; Registers used:
  3821 ;;		wreg, status,2, status,0, pclath, cstack
  3822 ;; Tracked objects:
  3823 ;;		On entry : 0/0
  3824 ;;		On exit  : 0/0
  3825 ;;		Unchanged: 0/0
  3826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3827 ;;      Params:         0       4       0       0       0
  3828 ;;      Locals:         0       2       0       0       0
  3829 ;;      Temps:          0      12       0       0       0
  3830 ;;      Totals:         0      18       0       0       0
  3831 ;;Total ram usage:       18 bytes
  3832 ;; Hardware stack levels used: 1
  3833 ;; Hardware stack levels required when called: 1
  3834 ;; This function calls:
  3835 ;;		___lldiv
  3836 ;; This function is called by:
  3837 ;;		_main
  3838 ;; This function uses a non-reentrant model
  3839 ;;
  3840                           
  3841  0000'                    _UART_Init:	
  3842                           ;psect for function _UART_Init
  3843                           
  3844  0000'                    l1753:	
  3845                           ;incstack = 0
  3846                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  3847                           
  3848                           
  3849                           ;UART/Uart.c: 6: char UART_Init(const long int baudrate);UART/Uart.c: 7: {;UART/Uart.c: 
      +                          8:   uint16_t x;;UART/Uart.c: 10:   TRISC=0x80;
  3850  0000' 3080               	movlw	128
  3851  0001' 1683               	bsf	3,5	;RP0=1, select bank1
  3852  0002' 1303               	bcf	3,6	;RP1=0, select bank1
  3853  0003' 0087               	movwf	7	;volatile
  3854  0004'                    l1755:
  3855                           
  3856                           ;UART/Uart.c: 12:   x = (16000000UL - baudrate*64)/(baudrate*64);
  3857  0004' 1283               	bcf	3,5	;RP0=0, select bank0
  3858  0005' 1303               	bcf	3,6	;RP1=0, select bank0
  3859  0006' 0800'              	movf	UART_Init@baudrate,w
  3860  0007' 0084'              	movwf	??_UART_Init
  3861  0008' 0801'              	movf	UART_Init@baudrate+1,w
  3862  0009' 0085'              	movwf	??_UART_Init+1
  3863  000A' 0802'              	movf	UART_Init@baudrate+2,w
  3864  000B' 0086'              	movwf	??_UART_Init+2
  3865  000C' 0803'              	movf	UART_Init@baudrate+3,w
  3866  000D' 0087'              	movwf	??_UART_Init+3
  3867  000E' 3006               	movlw	6
  3868  000F'                    u1435:
  3869  000F' 1003               	clrc
  3870  0010' 0D84'              	rlf	??_UART_Init,f
  3871  0011' 0D85'              	rlf	??_UART_Init+1,f
  3872  0012' 0D86'              	rlf	??_UART_Init+2,f
  3873  0013' 0D87'              	rlf	??_UART_Init+3,f
  3874  0014'                    u1430:
  3875  0014' 3EFF               	addlw	-1
  3876  0015' 1D03               	skipz
  3877  0016' 2800'              	goto	u1435
  3878  0017' 0807'              	movf	??_UART_Init+3,w
  3879  0018' 0083'              	movwf	___lldiv@divisor+3
  3880  0019' 0806'              	movf	??_UART_Init+2,w
  3881  001A' 0082'              	movwf	___lldiv@divisor+2
  3882  001B' 0805'              	movf	??_UART_Init+1,w
  3883  001C' 0081'              	movwf	___lldiv@divisor+1
  3884  001D' 0804'              	movf	??_UART_Init,w
  3885  001E' 0080'              	movwf	___lldiv@divisor
  3886  001F' 0800'              	movf	UART_Init@baudrate,w
  3887  0020' 0088'              	movwf	??_UART_Init+4
  3888  0021' 0801'              	movf	UART_Init@baudrate+1,w
  3889  0022' 0089'              	movwf	??_UART_Init+5
  3890  0023' 0802'              	movf	UART_Init@baudrate+2,w
  3891  0024' 008A'              	movwf	??_UART_Init+6
  3892  0025' 0803'              	movf	UART_Init@baudrate+3,w
  3893  0026' 008B'              	movwf	??_UART_Init+7
  3894  0027' 3006               	movlw	6
  3895  0028'                    u1445:
  3896  0028' 1003               	clrc
  3897  0029' 0D88'              	rlf	??_UART_Init+4,f
  3898  002A' 0D89'              	rlf	??_UART_Init+5,f
  3899  002B' 0D8A'              	rlf	??_UART_Init+6,f
  3900  002C' 0D8B'              	rlf	??_UART_Init+7,f
  3901  002D'                    u1440:
  3902  002D' 3EFF               	addlw	-1
  3903  002E' 1D03               	skipz
  3904  002F' 2800'              	goto	u1445
  3905  0030' 3000               	movlw	0
  3906  0031' 008C'              	movwf	??_UART_Init+8
  3907  0032' 3024               	movlw	36
  3908  0033' 008D'              	movwf	??_UART_Init+9
  3909  0034' 30F4               	movlw	244
  3910  0035' 008E'              	movwf	??_UART_Init+10
  3911  0036' 3000               	movlw	0
  3912  0037' 008F'              	movwf	??_UART_Init+11
  3913  0038' 0808'              	movf	??_UART_Init+4,w
  3914  0039' 028C'              	subwf	??_UART_Init+8,f
  3915  003A' 0809'              	movf	??_UART_Init+5,w
  3916  003B' 1C03               	skipc
  3917  003C' 0F09'              	incfsz	??_UART_Init+5,w
  3918  003D' 2800'              	goto	u1451
  3919  003E' 2800'              	goto	u1452
  3920  003F'                    u1451:
  3921  003F' 028D'              	subwf	??_UART_Init+9,f
  3922  0040'                    u1452:
  3923  0040' 080A'              	movf	??_UART_Init+6,w
  3924  0041' 1C03               	skipc
  3925  0042' 0F0A'              	incfsz	??_UART_Init+6,w
  3926  0043' 2800'              	goto	u1453
  3927  0044' 2800'              	goto	u1454
  3928  0045'                    u1453:
  3929  0045' 028E'              	subwf	??_UART_Init+10,f
  3930  0046'                    u1454:
  3931  0046' 080B'              	movf	??_UART_Init+7,w
  3932  0047' 1C03               	skipc
  3933  0048' 0F0B'              	incfsz	??_UART_Init+7,w
  3934  0049' 2800'              	goto	u1455
  3935  004A' 2800'              	goto	u1456
  3936  004B'                    u1455:
  3937  004B' 028F'              	subwf	??_UART_Init+11,f
  3938  004C'                    u1456:
  3939  004C' 080F'              	movf	??_UART_Init+11,w
  3940  004D' 0087'              	movwf	___lldiv@dividend+3
  3941  004E' 080E'              	movf	??_UART_Init+10,w
  3942  004F' 0086'              	movwf	___lldiv@dividend+2
  3943  0050' 080D'              	movf	??_UART_Init+9,w
  3944  0051' 0085'              	movwf	___lldiv@dividend+1
  3945  0052' 080C'              	movf	??_UART_Init+8,w
  3946  0053' 0084'              	movwf	___lldiv@dividend
  3947  0054' 120A' 118A' 2000' 120A' 118A' 	fcall	___lldiv
  3948  0059' 0801'              	movf	?___lldiv+1,w
  3949  005A' 1283               	bcf	3,5	;RP0=0, select bank0
  3950  005B' 1303               	bcf	3,6	;RP1=0, select bank0
  3951  005C' 0091'              	movwf	UART_Init@x+1
  3952  005D' 0800'              	movf	?___lldiv,w
  3953  005E' 0090'              	movwf	UART_Init@x
  3954  005F'                    l1757:
  3955                           
  3956                           ;UART/Uart.c: 13:   if(x>255)
  3957  005F' 3001               	movlw	1
  3958  0060' 0211'              	subwf	UART_Init@x+1,w
  3959  0061' 3000               	movlw	0
  3960  0062' 1903               	skipnz
  3961  0063' 0210'              	subwf	UART_Init@x,w
  3962  0064' 1C03               	skipc
  3963  0065' 2800'              	goto	u1461
  3964  0066' 2800'              	goto	u1460
  3965  0067'                    u1461:
  3966  0067' 2800'              	goto	l1763
  3967  0068'                    u1460:
  3968  0068'                    l1759:
  3969                           
  3970                           ;UART/Uart.c: 14:   {;UART/Uart.c: 15:     x = (16000000UL - baudrate*16)/(baudrate*16);
  3971  0068' 0800'              	movf	UART_Init@baudrate,w
  3972  0069' 0084'              	movwf	??_UART_Init
  3973  006A' 0801'              	movf	UART_Init@baudrate+1,w
  3974  006B' 0085'              	movwf	??_UART_Init+1
  3975  006C' 0802'              	movf	UART_Init@baudrate+2,w
  3976  006D' 0086'              	movwf	??_UART_Init+2
  3977  006E' 0803'              	movf	UART_Init@baudrate+3,w
  3978  006F' 0087'              	movwf	??_UART_Init+3
  3979  0070' 3004               	movlw	4
  3980  0071'                    u1475:
  3981  0071' 1003               	clrc
  3982  0072' 0D84'              	rlf	??_UART_Init,f
  3983  0073' 0D85'              	rlf	??_UART_Init+1,f
  3984  0074' 0D86'              	rlf	??_UART_Init+2,f
  3985  0075' 0D87'              	rlf	??_UART_Init+3,f
  3986  0076'                    u1470:
  3987  0076' 3EFF               	addlw	-1
  3988  0077' 1D03               	skipz
  3989  0078' 2800'              	goto	u1475
  3990  0079' 0807'              	movf	??_UART_Init+3,w
  3991  007A' 0083'              	movwf	___lldiv@divisor+3
  3992  007B' 0806'              	movf	??_UART_Init+2,w
  3993  007C' 0082'              	movwf	___lldiv@divisor+2
  3994  007D' 0805'              	movf	??_UART_Init+1,w
  3995  007E' 0081'              	movwf	___lldiv@divisor+1
  3996  007F' 0804'              	movf	??_UART_Init,w
  3997  0080' 0080'              	movwf	___lldiv@divisor
  3998  0081' 0800'              	movf	UART_Init@baudrate,w
  3999  0082' 0088'              	movwf	??_UART_Init+4
  4000  0083' 0801'              	movf	UART_Init@baudrate+1,w
  4001  0084' 0089'              	movwf	??_UART_Init+5
  4002  0085' 0802'              	movf	UART_Init@baudrate+2,w
  4003  0086' 008A'              	movwf	??_UART_Init+6
  4004  0087' 0803'              	movf	UART_Init@baudrate+3,w
  4005  0088' 008B'              	movwf	??_UART_Init+7
  4006  0089' 3004               	movlw	4
  4007  008A'                    u1485:
  4008  008A' 1003               	clrc
  4009  008B' 0D88'              	rlf	??_UART_Init+4,f
  4010  008C' 0D89'              	rlf	??_UART_Init+5,f
  4011  008D' 0D8A'              	rlf	??_UART_Init+6,f
  4012  008E' 0D8B'              	rlf	??_UART_Init+7,f
  4013  008F'                    u1480:
  4014  008F' 3EFF               	addlw	-1
  4015  0090' 1D03               	skipz
  4016  0091' 2800'              	goto	u1485
  4017  0092' 3000               	movlw	0
  4018  0093' 008C'              	movwf	??_UART_Init+8
  4019  0094' 3024               	movlw	36
  4020  0095' 008D'              	movwf	??_UART_Init+9
  4021  0096' 30F4               	movlw	244
  4022  0097' 008E'              	movwf	??_UART_Init+10
  4023  0098' 3000               	movlw	0
  4024  0099' 008F'              	movwf	??_UART_Init+11
  4025  009A' 0808'              	movf	??_UART_Init+4,w
  4026  009B' 028C'              	subwf	??_UART_Init+8,f
  4027  009C' 0809'              	movf	??_UART_Init+5,w
  4028  009D' 1C03               	skipc
  4029  009E' 0F09'              	incfsz	??_UART_Init+5,w
  4030  009F' 2800'              	goto	u1491
  4031  00A0' 2800'              	goto	u1492
  4032  00A1'                    u1491:
  4033  00A1' 028D'              	subwf	??_UART_Init+9,f
  4034  00A2'                    u1492:
  4035  00A2' 080A'              	movf	??_UART_Init+6,w
  4036  00A3' 1C03               	skipc
  4037  00A4' 0F0A'              	incfsz	??_UART_Init+6,w
  4038  00A5' 2800'              	goto	u1493
  4039  00A6' 2800'              	goto	u1494
  4040  00A7'                    u1493:
  4041  00A7' 028E'              	subwf	??_UART_Init+10,f
  4042  00A8'                    u1494:
  4043  00A8' 080B'              	movf	??_UART_Init+7,w
  4044  00A9' 1C03               	skipc
  4045  00AA' 0F0B'              	incfsz	??_UART_Init+7,w
  4046  00AB' 2800'              	goto	u1495
  4047  00AC' 2800'              	goto	u1496
  4048  00AD'                    u1495:
  4049  00AD' 028F'              	subwf	??_UART_Init+11,f
  4050  00AE'                    u1496:
  4051  00AE' 080F'              	movf	??_UART_Init+11,w
  4052  00AF' 0087'              	movwf	___lldiv@dividend+3
  4053  00B0' 080E'              	movf	??_UART_Init+10,w
  4054  00B1' 0086'              	movwf	___lldiv@dividend+2
  4055  00B2' 080D'              	movf	??_UART_Init+9,w
  4056  00B3' 0085'              	movwf	___lldiv@dividend+1
  4057  00B4' 080C'              	movf	??_UART_Init+8,w
  4058  00B5' 0084'              	movwf	___lldiv@dividend
  4059  00B6' 120A' 118A' 2000' 120A' 118A' 	fcall	___lldiv
  4060  00BB' 0801'              	movf	?___lldiv+1,w
  4061  00BC' 1283               	bcf	3,5	;RP0=0, select bank0
  4062  00BD' 1303               	bcf	3,6	;RP1=0, select bank0
  4063  00BE' 0091'              	movwf	UART_Init@x+1
  4064  00BF' 0800'              	movf	?___lldiv,w
  4065  00C0' 0090'              	movwf	UART_Init@x
  4066  00C1'                    l1761:
  4067                           
  4068                           ;UART/Uart.c: 16:     BRGH = 1;
  4069  00C1' 1683               	bsf	3,5	;RP0=1, select bank1
  4070  00C2' 1303               	bcf	3,6	;RP1=0, select bank1
  4071  00C3' 1518               	bsf	24,2	;volatile
  4072  00C4'                    l1763:
  4073                           
  4074                           ;UART/Uart.c: 18:   if(x<256)
  4075  00C4' 3001               	movlw	1
  4076  00C5' 1283               	bcf	3,5	;RP0=0, select bank0
  4077  00C6' 0211'              	subwf	UART_Init@x+1,w
  4078  00C7' 3000               	movlw	0
  4079  00C8' 1903               	skipnz
  4080  00C9' 0210'              	subwf	UART_Init@x,w
  4081  00CA' 1803               	skipnc
  4082  00CB' 2800'              	goto	u1501
  4083  00CC' 2800'              	goto	u1500
  4084  00CD'                    u1501:
  4085  00CD' 2800'              	goto	l100
  4086  00CE'                    u1500:
  4087  00CE'                    l1765:
  4088                           
  4089                           ;UART/Uart.c: 19:   {;UART/Uart.c: 20:     SPBRG = x;
  4090  00CE' 0810'              	movf	UART_Init@x,w
  4091  00CF' 1683               	bsf	3,5	;RP0=1, select bank1
  4092  00D0' 1303               	bcf	3,6	;RP1=0, select bank1
  4093  00D1' 0099               	movwf	25	;volatile
  4094  00D2'                    l1767:
  4095                           
  4096                           ;UART/Uart.c: 21:     SYNC = 0;
  4097  00D2' 1218               	bcf	24,4	;volatile
  4098  00D3'                    l1769:
  4099                           
  4100                           ;UART/Uart.c: 22:     SPEN = 1;
  4101  00D3' 1283               	bcf	3,5	;RP0=0, select bank0
  4102  00D4' 1303               	bcf	3,6	;RP1=0, select bank0
  4103  00D5' 1798               	bsf	24,7	;volatile
  4104  00D6'                    l1771:
  4105                           
  4106                           ;UART/Uart.c: 23:     TRISC7 = 1;
  4107  00D6' 1683               	bsf	3,5	;RP0=1, select bank1
  4108  00D7' 1303               	bcf	3,6	;RP1=0, select bank1
  4109  00D8' 1787               	bsf	7,7	;volatile
  4110  00D9'                    l1773:
  4111                           
  4112                           ;UART/Uart.c: 24:     TRISC6 = 1;
  4113  00D9' 1707               	bsf	7,6	;volatile
  4114  00DA'                    l1775:
  4115                           
  4116                           ;UART/Uart.c: 25:     CREN = 1;
  4117  00DA' 1283               	bcf	3,5	;RP0=0, select bank0
  4118  00DB' 1303               	bcf	3,6	;RP1=0, select bank0
  4119  00DC' 1618               	bsf	24,4	;volatile
  4120  00DD'                    l1777:
  4121                           
  4122                           ;UART/Uart.c: 26:     TXEN = 1;
  4123  00DD' 1683               	bsf	3,5	;RP0=1, select bank1
  4124  00DE' 1303               	bcf	3,6	;RP1=0, select bank1
  4125  00DF' 1698               	bsf	24,5	;volatile
  4126  00E0'                    l100:
  4127  00E0' 0008               	return
  4128  00E1'                    __end_of_UART_Init:
  4129                           
  4130                           	psect	text12
  4131  0000'                    __ptext12:	
  4132 ;; *************** function ___lldiv *****************
  4133 ;; Defined at:
  4134 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\__lldiv.c"
  4135 ;; Parameters:    Size  Location     Type
  4136 ;;  divisor         4    0[COMMON] unsigned long 
  4137 ;;  dividend        4    4[COMMON] unsigned long 
  4138 ;; Auto vars:     Size  Location     Type
  4139 ;;  quotient        4    9[COMMON] unsigned long 
  4140 ;;  counter         1   13[COMMON] unsigned char 
  4141 ;; Return value:  Size  Location     Type
  4142 ;;                  4    0[COMMON] unsigned long 
  4143 ;; Registers used:
  4144 ;;		wreg, status,2, status,0
  4145 ;; Tracked objects:
  4146 ;;		On entry : 0/0
  4147 ;;		On exit  : 0/0
  4148 ;;		Unchanged: 0/0
  4149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4150 ;;      Params:         8       0       0       0       0
  4151 ;;      Locals:         5       0       0       0       0
  4152 ;;      Temps:          1       0       0       0       0
  4153 ;;      Totals:        14       0       0       0       0
  4154 ;;Total ram usage:       14 bytes
  4155 ;; Hardware stack levels used: 1
  4156 ;; This function calls:
  4157 ;;		Nothing
  4158 ;; This function is called by:
  4159 ;;		_UART_Init
  4160 ;; This function uses a non-reentrant model
  4161 ;;
  4162                           
  4163  0000'                    ___lldiv:	
  4164                           ;psect for function ___lldiv
  4165                           
  4166  0000'                    l1679:	
  4167                           ;incstack = 0
  4168                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  4169                           
  4170  0000' 3000               	movlw	0
  4171  0001' 008C'              	movwf	___lldiv@quotient+3
  4172  0002' 3000               	movlw	0
  4173  0003' 008B'              	movwf	___lldiv@quotient+2
  4174  0004' 3000               	movlw	0
  4175  0005' 008A'              	movwf	___lldiv@quotient+1
  4176  0006' 3000               	movlw	0
  4177  0007' 0089'              	movwf	___lldiv@quotient
  4178  0008' 0803'              	movf	___lldiv@divisor+3,w
  4179  0009' 0402'              	iorwf	___lldiv@divisor+2,w
  4180  000A' 0401'              	iorwf	___lldiv@divisor+1,w
  4181  000B' 0400'              	iorwf	___lldiv@divisor,w
  4182  000C' 1903               	skipnz
  4183  000D' 2800'              	goto	u1231
  4184  000E' 2800'              	goto	u1230
  4185  000F'                    u1231:
  4186  000F' 2800'              	goto	l1699
  4187  0010'                    u1230:
  4188  0010'                    l1681:
  4189  0010' 018D'              	clrf	___lldiv@counter
  4190  0011' 0A8D'              	incf	___lldiv@counter,f
  4191  0012' 2800'              	goto	l1685
  4192  0013'                    l1683:
  4193  0013' 3001               	movlw	1
  4194  0014' 0088'              	movwf	??___lldiv
  4195  0015'                    u1245:
  4196  0015' 1003               	clrc
  4197  0016' 0D80'              	rlf	___lldiv@divisor,f
  4198  0017' 0D81'              	rlf	___lldiv@divisor+1,f
  4199  0018' 0D82'              	rlf	___lldiv@divisor+2,f
  4200  0019' 0D83'              	rlf	___lldiv@divisor+3,f
  4201  001A' 0B88'              	decfsz	??___lldiv,f
  4202  001B' 2800'              	goto	u1245
  4203  001C' 3001               	movlw	1
  4204  001D' 0088'              	movwf	??___lldiv
  4205  001E' 0808'              	movf	??___lldiv,w
  4206  001F' 078D'              	addwf	___lldiv@counter,f
  4207  0020'                    l1685:
  4208  0020' 1F83'              	btfss	___lldiv@divisor+3,7
  4209  0021' 2800'              	goto	u1251
  4210  0022' 2800'              	goto	u1250
  4211  0023'                    u1251:
  4212  0023' 2800'              	goto	l1683
  4213  0024'                    u1250:
  4214  0024'                    l1687:
  4215  0024' 3001               	movlw	1
  4216  0025' 0088'              	movwf	??___lldiv
  4217  0026'                    u1265:
  4218  0026' 1003               	clrc
  4219  0027' 0D89'              	rlf	___lldiv@quotient,f
  4220  0028' 0D8A'              	rlf	___lldiv@quotient+1,f
  4221  0029' 0D8B'              	rlf	___lldiv@quotient+2,f
  4222  002A' 0D8C'              	rlf	___lldiv@quotient+3,f
  4223  002B' 0B88'              	decfsz	??___lldiv,f
  4224  002C' 2800'              	goto	u1265
  4225  002D'                    l1689:
  4226  002D' 0803'              	movf	___lldiv@divisor+3,w
  4227  002E' 0207'              	subwf	___lldiv@dividend+3,w
  4228  002F' 1D03               	skipz
  4229  0030' 2800'              	goto	u1275
  4230  0031' 0802'              	movf	___lldiv@divisor+2,w
  4231  0032' 0206'              	subwf	___lldiv@dividend+2,w
  4232  0033' 1D03               	skipz
  4233  0034' 2800'              	goto	u1275
  4234  0035' 0801'              	movf	___lldiv@divisor+1,w
  4235  0036' 0205'              	subwf	___lldiv@dividend+1,w
  4236  0037' 1D03               	skipz
  4237  0038' 2800'              	goto	u1275
  4238  0039' 0800'              	movf	___lldiv@divisor,w
  4239  003A' 0204'              	subwf	___lldiv@dividend,w
  4240  003B'                    u1275:
  4241  003B' 1C03               	skipc
  4242  003C' 2800'              	goto	u1271
  4243  003D' 2800'              	goto	u1270
  4244  003E'                    u1271:
  4245  003E' 2800'              	goto	l1695
  4246  003F'                    u1270:
  4247  003F'                    l1691:
  4248  003F' 0800'              	movf	___lldiv@divisor,w
  4249  0040' 0284'              	subwf	___lldiv@dividend,f
  4250  0041' 0801'              	movf	___lldiv@divisor+1,w
  4251  0042' 1C03               	skipc
  4252  0043' 0F01'              	incfsz	___lldiv@divisor+1,w
  4253  0044' 0285'              	subwf	___lldiv@dividend+1,f
  4254  0045' 0802'              	movf	___lldiv@divisor+2,w
  4255  0046' 1C03               	skipc
  4256  0047' 0F02'              	incfsz	___lldiv@divisor+2,w
  4257  0048' 0286'              	subwf	___lldiv@dividend+2,f
  4258  0049' 0803'              	movf	___lldiv@divisor+3,w
  4259  004A' 1C03               	skipc
  4260  004B' 0F03'              	incfsz	___lldiv@divisor+3,w
  4261  004C' 0287'              	subwf	___lldiv@dividend+3,f
  4262  004D'                    l1693:
  4263  004D' 1409'              	bsf	___lldiv@quotient,0
  4264  004E'                    l1695:
  4265  004E' 3001               	movlw	1
  4266  004F'                    u1285:
  4267  004F' 1003               	clrc
  4268  0050' 0C83'              	rrf	___lldiv@divisor+3,f
  4269  0051' 0C82'              	rrf	___lldiv@divisor+2,f
  4270  0052' 0C81'              	rrf	___lldiv@divisor+1,f
  4271  0053' 0C80'              	rrf	___lldiv@divisor,f
  4272  0054' 3EFF               	addlw	-1
  4273  0055' 1D03               	skipz
  4274  0056' 2800'              	goto	u1285
  4275  0057'                    l1697:
  4276  0057' 3001               	movlw	1
  4277  0058' 028D'              	subwf	___lldiv@counter,f
  4278  0059' 1D03               	btfss	3,2
  4279  005A' 2800'              	goto	u1291
  4280  005B' 2800'              	goto	u1290
  4281  005C'                    u1291:
  4282  005C' 2800'              	goto	l1687
  4283  005D'                    u1290:
  4284  005D'                    l1699:
  4285  005D' 080C'              	movf	___lldiv@quotient+3,w
  4286  005E' 0083'              	movwf	?___lldiv+3
  4287  005F' 080B'              	movf	___lldiv@quotient+2,w
  4288  0060' 0082'              	movwf	?___lldiv+2
  4289  0061' 080A'              	movf	___lldiv@quotient+1,w
  4290  0062' 0081'              	movwf	?___lldiv+1
  4291  0063' 0809'              	movf	___lldiv@quotient,w
  4292  0064' 0080'              	movwf	?___lldiv
  4293  0065'                    l409:
  4294  0065' 0008               	return
  4295  0066'                    __end_of___lldiv:
  4296                           
  4297                           	psect	text13
  4298  0000'                    __ptext13:	
  4299 ;; *************** function _Read_ADC *****************
  4300 ;; Defined at:
  4301 ;;		line 13 in file "ADC/ADC.c"
  4302 ;; Parameters:    Size  Location     Type
  4303 ;;  channel         1    wreg     unsigned char 
  4304 ;; Auto vars:     Size  Location     Type
  4305 ;;  channel         1    5[COMMON] unsigned char 
  4306 ;;  val             2    3[COMMON] int 
  4307 ;; Return value:  Size  Location     Type
  4308 ;;                  2    0[COMMON] unsigned int 
  4309 ;; Registers used:
  4310 ;;		wreg, status,2, status,0
  4311 ;; Tracked objects:
  4312 ;;		On entry : 0/0
  4313 ;;		On exit  : 0/0
  4314 ;;		Unchanged: 0/0
  4315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4316 ;;      Params:         2       0       0       0       0
  4317 ;;      Locals:         3       0       0       0       0
  4318 ;;      Temps:          1       0       0       0       0
  4319 ;;      Totals:         6       0       0       0       0
  4320 ;;Total ram usage:        6 bytes
  4321 ;; Hardware stack levels used: 1
  4322 ;; This function calls:
  4323 ;;		Nothing
  4324 ;; This function is called by:
  4325 ;;		_main
  4326 ;; This function uses a non-reentrant model
  4327 ;;
  4328                           
  4329  0000'                    _Read_ADC:	
  4330                           ;psect for function _Read_ADC
  4331                           
  4332                           
  4333                           ;incstack = 0
  4334                           ; Regs used in _Read_ADC: [wreg+status,2+status,0]
  4335                           ;Read_ADC@channel stored from wreg
  4336  0000' 0085'              	movwf	Read_ADC@channel
  4337  0001'                    l2141:
  4338                           
  4339                           ;ADC/ADC.c: 13: uint16_t Read_ADC(char channel);ADC/ADC.c: 14: {;ADC/ADC.c: 15:     int 
      +                          val;;ADC/ADC.c: 16:     ADCON1 = 0x80;
  4340  0001' 3080               	movlw	128
  4341  0002' 1683               	bsf	3,5	;RP0=1, select bank1
  4342  0003' 1303               	bcf	3,6	;RP1=0, select bank1
  4343  0004' 009F               	movwf	31	;volatile
  4344  0005'                    l2143:
  4345                           
  4346                           ;ADC/ADC.c: 17:     ADCON0 = 0x81 | channel << 3;
  4347  0005' 0805'              	movf	Read_ADC@channel,w
  4348  0006' 0082'              	movwf	??_Read_ADC
  4349  0007' 3002               	movlw	2
  4350  0008'                    u2175:
  4351  0008' 1003               	clrc
  4352  0009' 0D82'              	rlf	??_Read_ADC,f
  4353  000A' 3EFF               	addlw	-1
  4354  000B' 1D03               	skipz
  4355  000C' 2800'              	goto	u2175
  4356  000D' 1003               	clrc
  4357  000E' 0D02'              	rlf	??_Read_ADC,w
  4358  000F' 3881               	iorlw	129
  4359  0010' 1283               	bcf	3,5	;RP0=0, select bank0
  4360  0011' 1303               	bcf	3,6	;RP1=0, select bank0
  4361  0012' 009F               	movwf	31	;volatile
  4362  0013'                    l2145:
  4363                           
  4364                           ;ADC/ADC.c: 18:     _delay((unsigned long)((50)*(16000000UL/4000000.0)));
  4365  0013' 3042               	movlw	66
  4366  0014' 0082'              	movwf	??_Read_ADC
  4367  0015'                    u2247:
  4368  0015' 0B82'              	decfsz	??_Read_ADC,f
  4369  0016' 2800'              	goto	u2247
  4370  0017' 0000               	nop
  4371  0018'                    l2147:
  4372                           
  4373                           ;ADC/ADC.c: 19:     GO_nDONE = 1;
  4374  0018' 1283               	bcf	3,5	;RP0=0, select bank0
  4375  0019' 1303               	bcf	3,6	;RP1=0, select bank0
  4376  001A' 151F               	bsf	31,2	;volatile
  4377  001B'                    l64:	
  4378                           ;ADC/ADC.c: 20:     while(GO_nDONE)
  4379                           
  4380                           
  4381                           ;ADC/ADC.c: 20:     while(GO_nDONE)
  4382  001B' 191F               	btfsc	31,2	;volatile
  4383  001C' 2800'              	goto	u2181
  4384  001D' 2800'              	goto	u2180
  4385  001E'                    u2181:
  4386  001E' 2800'              	goto	l64
  4387  001F'                    u2180:
  4388  001F'                    l2149:
  4389                           
  4390                           ;ADC/ADC.c: 22:     val = (ADRESH<<8) | ADRESL;
  4391  001F' 081E               	movf	30,w	;volatile
  4392  0020' 0084'              	movwf	Read_ADC@val+1
  4393  0021' 1683               	bsf	3,5	;RP0=1, select bank1
  4394  0022' 1303               	bcf	3,6	;RP1=0, select bank1
  4395  0023' 081E               	movf	30,w	;volatile
  4396  0024' 0083'              	movwf	Read_ADC@val
  4397                           
  4398                           ;ADC/ADC.c: 23:     return (val);
  4399  0025' 0804'              	movf	Read_ADC@val+1,w
  4400  0026' 0081'              	movwf	?_Read_ADC+1
  4401  0027' 0803'              	movf	Read_ADC@val,w
  4402  0028' 0080'              	movwf	?_Read_ADC
  4403  0029'                    l67:
  4404  0029' 0008               	return
  4405  002A'                    __end_of_Read_ADC:
  4406                           
  4407                           	psect	text14
  4408  0000'                    __ptext14:	
  4409 ;; *************** function _ADC_Init *****************
  4410 ;; Defined at:
  4411 ;;		line 6 in file "ADC/ADC.c"
  4412 ;; Parameters:    Size  Location     Type
  4413 ;;		None
  4414 ;; Auto vars:     Size  Location     Type
  4415 ;;		None
  4416 ;; Return value:  Size  Location     Type
  4417 ;;                  1    wreg      void 
  4418 ;; Registers used:
  4419 ;;		wreg
  4420 ;; Tracked objects:
  4421 ;;		On entry : 0/0
  4422 ;;		On exit  : 0/0
  4423 ;;		Unchanged: 0/0
  4424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4425 ;;      Params:         0       0       0       0       0
  4426 ;;      Locals:         0       0       0       0       0
  4427 ;;      Temps:          0       0       0       0       0
  4428 ;;      Totals:         0       0       0       0       0
  4429 ;;Total ram usage:        0 bytes
  4430 ;; Hardware stack levels used: 1
  4431 ;; This function calls:
  4432 ;;		Nothing
  4433 ;; This function is called by:
  4434 ;;		_main
  4435 ;; This function uses a non-reentrant model
  4436 ;;
  4437                           
  4438  0000'                    _ADC_Init:	
  4439                           ;psect for function _ADC_Init
  4440                           
  4441  0000'                    l1751:	
  4442                           ;incstack = 0
  4443                           ; Regs used in _ADC_Init: [wreg]
  4444                           
  4445                           
  4446                           ;ADC/ADC.c: 8:     TRISA = 0XEF;
  4447  0000' 30EF               	movlw	239
  4448  0001' 1683               	bsf	3,5	;RP0=1, select bank1
  4449  0002' 1303               	bcf	3,6	;RP1=0, select bank1
  4450  0003' 0085               	movwf	5	;volatile
  4451                           
  4452                           ;ADC/ADC.c: 9:     TRISE = 0X07;
  4453  0004' 3007               	movlw	7
  4454  0005' 0089               	movwf	9	;volatile
  4455                           
  4456                           ;ADC/ADC.c: 10:     ADCON1 = 0X80;
  4457  0006' 3080               	movlw	128
  4458  0007' 009F               	movwf	31	;volatile
  4459  0008'                    l61:
  4460  0008' 0008               	return
  4461  0009'                    __end_of_ADC_Init:
  4462  007E                     btemp	set	126	;btemp
  4463  007E                     wtemp0	set	126
  4464                           
  4465                           	psect	config
  4466                           
  4467                           ;Config register CONFIG @ 0x2007
  4468                           ;	Oscillator Selection bits
  4469                           ;	FOSC = HS, HS oscillator
  4470                           ;	Watchdog Timer Enable bit
  4471                           ;	WDTE = OFF, WDT disabled
  4472                           ;	Power-up Timer Enable bit
  4473                           ;	PWRTE = OFF, PWRT disabled
  4474                           ;	Brown-out Reset Enable bit
  4475                           ;	BOREN = OFF, BOR disabled
  4476                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  4477                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  4478                           ;	Data EEPROM Memory Code Protection bit
  4479                           ;	CPD = OFF, Data EEPROM code protection off
  4480                           ;	Flash Program Memory Write Enable bits
  4481                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  4482                           ;	In-Circuit Debugger Mode bit
  4483                           ;	DEBUG = 0x1, unprogrammed default
  4484                           ;	Flash Program Memory Code Protection bit
  4485                           ;	CP = OFF, Code protection off
  4486  2007                     	org	8199
  4487  2007  3F3A               	dw	16186

Data Sizes:
    Strings     77
    Constant    30
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     33      33
    BANK1            80     54      54
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    memset@p1	PTR void  size(1) Largest target is 50
		 -> main@Str(BANK1[50]), 

    memset@p	PTR unsigned char  size(1) Largest target is 50
		 -> main@Str(BANK1[50]), 

    printf$330	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_4(CODE[17]), STR_3(CODE[17]), 

    printf@cp	PTR const unsigned char  size(2) Largest target is 36
		 -> STR_2(CODE[7]), printf@c(BANK0[1]), ?_printf(BANK0[2]), STR_1(CODE[36]), 

    printf@f	PTR const unsigned char  size(1) Largest target is 50
		 -> main@Str(BANK1[50]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    UART_Write_Text@text	PTR unsigned char  size(1) Largest target is 50
		 -> main@Str(BANK1[50]), 

    sp__memset	PTR void  size(1) Largest target is 50
		 -> main@Str(BANK1[50]), 


Critical Paths under _main in COMMON

    _printf->___lwmod
    ___lwmod->___lwdiv
    _UART_Write_Text->_UART_Write
    _UART_Init->___lldiv

Critical Paths under _main in BANK0

    _main->_printf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                56    56      0    5311
                                             31 BANK0      2     2      0
                                              0 BANK1     54    54      0
                           _ADC_Init
                     _LCD_Initialize
                           _Read_ADC
                          _UART_Init
                    _UART_Write_Text
                             _memset
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              35    27      8    3925
                                              0 BANK0     31    23      8
                             ___bmul
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     618
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     168
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _memset                                               7     3      4     281
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) _UART_Write_Text                                      4     4      0     145
                                              1 COMMON     4     4      0
                         _UART_Write
 ---------------------------------------------------------------------------------
 (2) _UART_Write                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           18    14      4     698
                                              0 BANK0     18    14      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _Read_ADC                                             6     4      2      45
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (1) _LCD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _LCD_Initialize
   _Read_ADC
   _UART_Init
     ___lldiv
   _UART_Write_Text
     _UART_Write
   _memset
   _printf
     ___bmul
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit
     _putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     21      21       5       41.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     36      36       7       67.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Wed Jan 04 16:31:04 2023

         _LCD_Initialize 0000*                       pc 0002           ___bmul@product 0002  
                     l61 0008                       l64 001B                       l67 0029  
                     fsr 0004      ___wmul@multiplicand 0002                      l100 00E0  
                    l103 0001                      l106 0009                      l109 000F  
                    l118 0020                      l302 0283                      l240 0022  
                    l241 0024                      l306 02B3                      l243 003E  
                    l261 0104                      l237 001A                      l342 0468  
                    l326 03E5                      l254 00F5                      l239 0020  
                    l248 00A6                      l409 0065                      l338 04B5  
                    l274 015A                      l266 0106                      l283 01AF  
                    l267 0107                      l364 056A                      l373 000C  
                    l375 0024                      l297 0253                      l369 059F  
                    l645 0043                      l399 0014                      l655 0039  
                    l832 001F                      l826 0011                      l835 0000  
                    _PR2 0092                      fsr0 0004                      indf 0000  
                   l2001 038A                     l2011 03BE                     l2003 0399  
                   l2021 03E9                     l2013 03CA                     l2005 03A6  
                   l2031 0410                     l2023 03F0                     l2015 03CE  
                   l2007 03AF                     l2033 0414                     l2025 03FF  
                   l2017 03D2                     l2041 0437                     l2009 03B3  
                   l2051 0461                     l2043 043D                     l2027 0405  
                   l2035 041A                     l2019 03DE                     l2141 0001  
                   l2133 0001                     l2061 0499                     l2053 046C  
                   l2045 0441                     l2037 0422                     l2029 040B  
                   l2143 0005                     l2135 0004                     l2071 04B6  
                   l2063 049F                     l2055 0472                     l2047 0447  
                   l2039 0428                     l2145 0013                     l2137 000F  
                   l2081 0513                     l2073 04E5                     l2065 04A5  
                   l2057 0483                     l2049 0455                     l2161 001E  
                   l2153 0000                     l2147 0018                     l2139 0015  
                   l2083 051F                     l2075 0506                     l2067 04AA  
                   l2059 048A                     l2091 055F                     l2171 0033  
                   l2163 0026                     l2155 0005                     l2149 001F  
                   l2093 056E                     l2077 050A                     l2069 04AE  
                   l2181 0074                     l2173 0040                     l2165 002A  
                   l2157 000A                     l1711 0012                     l1703 0000  
                   l2095 057B                     l2087 0542                     l2079 050F  
                   l2191 0096                     l2183 007E                     l2175 0056  
                   l2167 002E                     l2159 000F                     l1721 0032  
                   l1713 0016                     l1705 0002                     l1641 0002  
                   l2097 0581                     l2089 0559                     l2361 01F3  
                   l2193 009E                     l2185 0086                     l2177 005C  
                   l2169 0032                     l1635 0001                     l1723 0039  
                   l1715 001A                     l1707 0008                     l1731 0006  
                   l1651 0000                     l1643 0008                     l2363 02EC  
                   l1811 0046                     l2099 058F                     l2187 008A  
                   l2179 0068                     l1637 0007                     l1717 002B  
                   l1709 000B                     l1725 003F                     l1741 0022  
                   l1733 0009                     l1661 0020                     l1653 0002  
                   l1645 000E                     l2365 054B                     l1901 01BA  
                   l1821 007F                     l1813 0052                     l2197 00A1  
                   l2189 008C                     l1751 0000                     l1671 000A  
                   l1719 0031                     l1743 0028                     l1735 0010  
                   l1655 0006                     l1647 0010                     l1639 0001  
                   l1911 01DE                     l1903 01CB                     l1831 00B1  
                   l1815 0056                     l1823 008C                     l2359 0030  
                   l1807 0026                     l1681 0010                     l1761 00C1  
                   l1753 0000                     l1673 000C                     l1665 0001  
                   l1745 002F                     l1737 0014                     l1729 0000  
                   l1657 0013                     l1921 0226                     l1905 01D1  
                   l1841 00C8                     l1833 00B2                     l1825 0097  
                   l1817 006B                     l1809 0042                     l1691 003F  
                   l1683 0013                     l1771 00D6                     l1763 00C4  
                   l1755 0004                     l1675 0013                     l1667 0002  
                   l1739 0018                     l1747 0035                     l1659 001A  
                   l1931 023F                     l1923 022A                     l1907 01D5  
                   l1851 00D8                     l1915 01E3                     l1843 00CC  
                   l1835 00B6                     l1827 009E                     l1819 007B  
                   l1693 004D                     l1685 0020                     l1773 00D9  
                   l1765 00CE                     l1757 005F                     l1781 0001  
                   l1669 0006                     l1925 022E                     l1933 0243  
                   l1909 01D9                     l1861 0111                     l1917 0213  
                   l1853 00E9                     l1845 00CD                     l1837 00BE  
                   l1829 00A2                     l1695 004E                     l1687 0024  
                   l1679 0000                     l1775 00DA                     l1767 00D2  
                   l1759 0068                     l1783 0006                     l1943 025C  
                   l1935 0248                     l1927 0232                     l1919 021F  
                   l1871 0128                     l1863 0115                     l1855 00F1  
                   l1847 00D1                     l1839 00C4                     l1791 0008  
                   l1697 0057                     l1689 002D                     l1777 00DD  
                   l1769 00D3                     l1785 000D                     l1953 028C  
                   l1937 024E                     l1929 0238                     l1881 016D  
                   l1873 0139                     l1865 011B                     l1849 00D6  
                   l1857 0102                     l1793 000E                     l1699 005D  
                   l1787 0011                     l1963 02BC                     l1947 0278  
                   l1939 0255                     l1971 02E3                     l1891 018B  
                   l1883 016F                     l1875 013E                     l1867 011F  
                   l1859 0109                     l1795 0015                     l1981 032B  
                   l1957 02A8                     l1949 0285                     l1973 02FA  
                   l1893 0199                     l1877 0151                     l1869 0122  
                   l1797 001B                     l1789 0003                     l1991 035C  
                   l1983 0333                     l1975 030A                     l1967 02D8  
                   l1959 02B5                     l1887 0174                     l1895 01A1  
                   l1879 0166                     l1993 036A                     l1985 033F  
                   l1977 0311                     l1889 017A                     l1995 036E  
                   l1987 0345                     l1979 0325                     l1899 01B4  
                   l1997 037D                     l1989 0349                     l1999 0383  
                   STR_1 002E                     STR_2 0074                     STR_3 0052  
                   STR_4 0063                     _BRGH 04C2                     _CREN 00C4  
                   u1200 0020                     u2000 0422                     u1201 001F  
                   u2001 0421                     u1130 0007                     u1210 0006  
                   u2010 0436                     u1131 0006                     u1211 0005  
                   u2011 0435                     u1140 000F                     u1220 0013  
                   u1300 0008                     u2100 050A                     u2020 043D  
                   u1141 000E                     u1221 0012                     u1301 0007  
                   u2101 0509                     u2021 043C                     u1230 0010  
                   u1150 0008                     u2110 056A                     u2030 0441  
                   u1231 000F                     u1151 0007                     u2111 0569  
                   u2031 0440                     u1320 001A                     u1400 0022  
                   u1160 000E                     u2120 056E                     u2040 0455  
                   u2200 0086                     u1321 0019                     u1401 0021  
                   u1161 000D                     u2121 056D                     u2041 0454  
                   u2201 0085                     u1250 0024                     u1170 0006  
                   u2130 057B                     u2050 0461                     u2210 0096  
                   u1251 0023                     u1315 000C                     u1171 0005  
                   u2131 057A                     u2051 0460                     u2211 0095  
                   u1500 00CE                     u1340 002B                     u1420 0035  
                   u2140 058F                     u2060 046C                     u2220 009E  
                   u1245 0015                     u1501 00CD                     u1341 002A  
                   u1421 0034                     u1405 001E                     u2141 058E  
                   u2061 046B                     u2221 009D                     u1270 003F  
                   u1430 0014                     u1510 001F                     u2150 059F  
                   u2070 0483                     u1271 003E                     u1511 001E  
                   u1335 001B                     u1415 0029                     u2151 059E  
                   u2135 0577                     u2071 0482                     u2215 0092  
                   u1440 002D                     u2160 0020                     u1360 003F  
                   u2080 0499                     u1600 0101                     u1520 000E  
                   u1265 0026                     u2161 001F                     u1361 003E  
                   u1345 0027                     u1185 000D                     u2081 0498  
                   u1601 0100                     u1521 000D                     u1290 005D  
                   u1370 0006                     u2090 04A5                     u1610 011B  
                   u1530 0042                     u1291 005C                     u1275 003B  
                   u1451 003F                     u1435 000F                     u1355 0033  
                   u1371 0005                     u1195 0014                     u2091 04A4  
                   u1611 011A                     u1531 0041                     u2180 001F  
                   u1460 0068                     u1452 0040                     u1700 01CA  
                   u1620 0139                     u1540 0052                     u2181 001E  
                   u1285 004F                     u1461 0067                     u1453 0045  
                   u1445 0028                     u1701 01C9                     u1621 0138  
                   u1541 0051                     u2237 00A7                     u1470 0076  
                   u1454 0046                     u1390 0018                     u1710 021F  
                   u1630 013E                     u1550 008B                     u2190 007E  
                   u2247 0015                     u2175 0008                     u1455 004B  
                   u1391 0017                     u1711 021E                     u1631 013D  
                   u1551 008A                     u2191 007D                     u1480 008F  
                   u1456 004C                     u1800 02B2                     u1720 022E  
                   u1640 0151                     u1560 0097                     u1385 000A  
                   u1801 02B1                     u1721 022D                     u1641 0150  
                   u1561 0096                     u1810 02BB                     u1730 0248  
                   u1650 0166                     u1570 00B1                     u1491 00A1  
                   u1475 0071                     u1811 02BA                     u1731 0247  
                   u1651 0165                     u1571 00B0                     u2195 007A  
                   u1492 00A2                     u1900 037D                     u1820 02D7  
                   u1740 024E                     u1660 0173                     u1580 00BE  
                   u1493 00A7                     u1485 008A                     u1901 037C  
                   u1821 02D6                     u1741 024D                     u1661 0172  
                   u1645 014D                     u1581 00BD                     u1494 00A8  
                   u1910 0383                     u1830 02E2                     u1750 025B  
                   u1670 018A                     u1590 00CC                     u1495 00AD  
                   u1911 0382                     u1831 02E1                     u1751 025A  
                   u1671 0189                     u1655 0162                     u1591 00CB  
                   u1496 00AE                     u1920 0399                     u1840 030A  
                   u1760 0277                     u1680 01AF                     u1921 0398  
                   u1841 0309                     u1825 02D3                     u1761 0276  
                   u1681 01AE                     u1930 03A6                     u1850 0325  
                   u1770 0282                     u1690 01B3                     u1931 03A5  
                   u1851 0324                     u1771 0281                     u1691 01B2  
                   u1940 03BE                     u1860 0333                     u1780 028B  
                   u1941 03BD                     u1861 0332                     u1845 0306  
                   u1781 028A                     u1765 0273                     u1950 03D2  
                   u1870 033F                     u1790 02A7                     u1951 03D1  
                   u1935 03A2                     u1871 033E                     u1855 0321  
                   u1791 02A6                     u1960 03DE                     u1880 0349  
                   u1961 03DD                     u1945 03BA                     u1881 0348  
                   u1970 03E9                     u1890 035C                     u1971 03E8  
                   u1891 035B                     u1795 02A3                     u1980 03FF  
                   u1981 03FE                     u1990 040B                     u1991 040A  
                   u1895 0358                     _RCIF 0065                     _SPEN 00C7  
                   _TRMT 04C1                     _TXEN 04C5                     _TXIF 0064  
                   _SYNC 04C4                     _main 0000                     btemp 007E  
       __end_of_ADC_Init 0009                     start 0000*       ___bmul@multiplier 0003  
__end_of_UART_Write_Text 0021              Read_ADC@val 0003                    ?_main 0000  
        __end_of___lldiv 0066          __end_of___lwdiv 0044          __end_of___lwmod 003A  
                  _RCREG 001A                    _SPBRG 0099                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISE 0089  
                  _TXREG 0019              ?_UART_Write 0000          __end_of_dpowers 0026  
        __end_of_isdigit 0012                    _putch 0000                    pclath 000A  
                  status 0003                    wtemp0 007E          ?_LCD_Initialize 0000  
        __initialization 0000             __end_of_main 00B0         __end_of_Read_ADC 002A  
                 ??_main 001F                   _ADCON0 001F                   _ADCON1 009F  
                 _ADRESH 001E                   _ADRESL 009E                   _CCPR1L 0015  
                 ?_putch 0000                   _TMR2ON 0092                   _TRISC6 043E  
                 _TRISC7 043F        __end_of_UART_Init 00E1                   ___bmul 0000  
        Read_ADC@channel 0005                   ___wmul 0000         ?_UART_Write_Text 0000  
              ??___lldiv 0008                ??___lwdiv 0004                ??___lwmod 000C  
                 _memset 0000                   _printf 0000                ??_isdigit 0000  
              ?_ADC_Init 0000                   putch@c 0000  __end_of__initialization 0000  
    ___bmul@multiplicand 0000           __pcstackCOMMON 0000            __end_of_putch 0001  
             ??_ADC_Init 0000                  ??_putch 0000                ?_Read_ADC 0000  
             __pmaintext 0000                  ?___bmul 0000                  ?___wmul 0000  
                _CCP1CON 0017                  ?_memset 0000                  ?_printf 0000  
           ??_UART_Write 0000               __stringtab 0000               ??_Read_ADC 0002  
       ??_LCD_Initialize 0000                  ___lldiv 0000       __end_of_UART_Write 0010  
                ___lwdiv 0000                  ___lwmod 0000                  __ptext1 0000  
                __ptext2 0000                  __ptext3 0000                  __ptext4 0000  
                __ptext5 0000                  __ptext6 0000                  __ptext7 0000  
                __ptext8 0000                  __ptext9 0000        __end_of_hexpowers 002E  
                _dpowers 001C                  _isdigit 0000                  main@Str 0000  
   end_of_initialization 0000        __end_of_octpowers 001C                  memset@c 0000  
                memset@n 0002                  memset@p 0006          ___lldiv@divisor 0000  
        ___lldiv@counter 000D                  printf@c 001C                  printf@f 0018  
             _printf$330 0010               _printf$323 000B               _printf$324 000D  
              _UART_Init 0000           UART_Write@data 0000              printf@width 001A  
         __end_of___bmul 0015           __end_of___wmul 0025               ?_UART_Init 0000  
         __end_of_memset 0020           __end_of_printf 05A0      start_initialization 0000  
               ??___bmul 0001                 ??___wmul 0004                 ??_memset 0004  
               ??_printf 0008                ___latbits 0002            __pcstackBANK0 0000  
          __pcstackBANK1 0000         ___lwdiv@dividend 0002                 ?___lldiv 0000  
               ?___lwdiv 0000                 ?___lwmod 0008              ??_UART_Init 0004  
              __pstrings 0000                 ?_isdigit 0000                 _ADC_Init 0000  
              _hexpowers 0026         ___lwdiv@quotient 0005               UART_Init@x 0010  
      ??_UART_Write_Text 0001           ___wmul@product 0004                _octpowers 0010  
               _GO_nDONE 00FA        UART_Init@baudrate 0000              __stringbase 000F  
      ___wmul@multiplier 0000               printf@flag 001D               printf@prec 0019  
               _Read_ADC 0000       __end_of__stringtab 0010              _isdigit$613 0000  
        ___lwdiv@divisor 0000          ___lwdiv@counter 0007                 __ptext10 0000  
               __ptext11 0000                 __ptext12 0000                 __ptext13 0000  
               __ptext14 0000      UART_Write_Text@text 0004                printf@idx 000F  
              printf@len 0013                printf@val 0016                 isdigit@c 0001  
               memset@p1 0005         ___lwmod@dividend 000A         ___lldiv@dividend 0004  
              stringcode 000A             main@FEEDBACK 0034                 printf@ap 0015  
               printf@cp 0011          _UART_Write_Text 0000         ___lldiv@quotient 0009  
        ___lwmod@divisor 0008          ___lwmod@counter 000D                 stringdir 000A  
               stringtab 0000               _UART_Write 0000             main@SETPOINT 0032  
       UART_Write_Text@i 0002  
